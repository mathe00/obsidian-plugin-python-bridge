'use strict';

var obsidian = require('obsidian');
var http = require('http');
var path = require('path');
var child_process = require('child_process');
var fs = require('fs');
var os = require('os');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var http__namespace = /*#__PURE__*/_interopNamespaceDefault(http);
var path__namespace = /*#__PURE__*/_interopNamespaceDefault(path);
var fs__namespace = /*#__PURE__*/_interopNamespaceDefault(fs);
var os__namespace = /*#__PURE__*/_interopNamespaceDefault(os);

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol, Iterator */


function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

// src/constants.ts
/** Default HTTP port if not configured or invalid */
const DEFAULT_PORT = 27123;
/** Timeout in ms for discovering script settings */
const SETTINGS_DISCOVERY_TIMEOUT = 5000; // 5 seconds
const PYTHON_LIBRARY_FILENAME = "ObsidianPluginDevPythonToJS.py";
// Add other constants here if needed in the future

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function commonjsRequire(path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var moment$1 = {exports: {}};

(function (module, exports) {
(function (global, factory) {
	    module.exports = factory() ;
	}(commonjsGlobal, (function () {
	    var hookCallback;

	    function hooks() {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback(callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return (
	            input instanceof Array ||
	            Object.prototype.toString.call(input) === '[object Array]'
	        );
	    }

	    function isObject(input) {
	        // IE8 will treat undefined and null as object if it wasn't for
	        // input != null
	        return (
	            input != null &&
	            Object.prototype.toString.call(input) === '[object Object]'
	        );
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function isObjectEmpty(obj) {
	        if (Object.getOwnPropertyNames) {
	            return Object.getOwnPropertyNames(obj).length === 0;
	        } else {
	            var k;
	            for (k in obj) {
	                if (hasOwnProp(obj, k)) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }

	    function isUndefined(input) {
	        return input === void 0;
	    }

	    function isNumber(input) {
	        return (
	            typeof input === 'number' ||
	            Object.prototype.toString.call(input) === '[object Number]'
	        );
	    }

	    function isDate(input) {
	        return (
	            input instanceof Date ||
	            Object.prototype.toString.call(input) === '[object Date]'
	        );
	    }

	    function map(arr, fn) {
	        var res = [],
	            i,
	            arrLen = arr.length;
	        for (i = 0; i < arrLen; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function createUTC(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty: false,
	            unusedTokens: [],
	            unusedInput: [],
	            overflow: -2,
	            charsLeftOver: 0,
	            nullInput: false,
	            invalidEra: null,
	            invalidMonth: null,
	            invalidFormat: false,
	            userInvalidated: false,
	            iso: false,
	            parsedDateParts: [],
	            era: null,
	            meridiem: null,
	            rfc2822: false,
	            weekdayMismatch: false,
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this),
	                len = t.length >>> 0,
	                i;

	            for (i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }

	            return false;
	        };
	    }

	    function isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m),
	                parsedParts = some.call(flags.parsedDateParts, function (i) {
	                    return i != null;
	                }),
	                isNowValid =
	                    !isNaN(m._d.getTime()) &&
	                    flags.overflow < 0 &&
	                    !flags.empty &&
	                    !flags.invalidEra &&
	                    !flags.invalidMonth &&
	                    !flags.invalidWeekday &&
	                    !flags.weekdayMismatch &&
	                    !flags.nullInput &&
	                    !flags.invalidFormat &&
	                    !flags.userInvalidated &&
	                    (!flags.meridiem || (flags.meridiem && parsedParts));

	            if (m._strict) {
	                isNowValid =
	                    isNowValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }

	            if (Object.isFrozen == null || !Object.isFrozen(m)) {
	                m._isValid = isNowValid;
	            } else {
	                return isNowValid;
	            }
	        }
	        return m._isValid;
	    }

	    function createInvalid(flags) {
	        var m = createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        } else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = (hooks.momentProperties = []),
	        updateInProgress = false;

	    function copyConfig(to, from) {
	        var i,
	            prop,
	            val,
	            momentPropertiesLen = momentProperties.length;

	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }

	        if (momentPropertiesLen > 0) {
	            for (i = 0; i < momentPropertiesLen; i++) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        if (!this.isValid()) {
	            this._d = new Date(NaN);
	        }
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment(obj) {
	        return (
	            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
	        );
	    }

	    function warn(msg) {
	        if (
	            hooks.suppressDeprecationWarnings === false &&
	            typeof console !== 'undefined' &&
	            console.warn
	        ) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (hooks.deprecationHandler != null) {
	                hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                var args = [],
	                    arg,
	                    i,
	                    key,
	                    argLen = arguments.length;
	                for (i = 0; i < argLen; i++) {
	                    arg = '';
	                    if (typeof arguments[i] === 'object') {
	                        arg += '\n[' + i + '] ';
	                        for (key in arguments[0]) {
	                            if (hasOwnProp(arguments[0], key)) {
	                                arg += key + ': ' + arguments[0][key] + ', ';
	                            }
	                        }
	                        arg = arg.slice(0, -2); // Remove trailing comma and space
	                    } else {
	                        arg = arguments[i];
	                    }
	                    args.push(arg);
	                }
	                warn(
	                    msg +
	                        '\nArguments: ' +
	                        Array.prototype.slice.call(args).join('') +
	                        '\n' +
	                        new Error().stack
	                );
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    hooks.suppressDeprecationWarnings = false;
	    hooks.deprecationHandler = null;

	    function isFunction(input) {
	        return (
	            (typeof Function !== 'undefined' && input instanceof Function) ||
	            Object.prototype.toString.call(input) === '[object Function]'
	        );
	    }

	    function set(config) {
	        var prop, i;
	        for (i in config) {
	            if (hasOwnProp(config, i)) {
	                prop = config[i];
	                if (isFunction(prop)) {
	                    this[i] = prop;
	                } else {
	                    this['_' + i] = prop;
	                }
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        this._dayOfMonthOrdinalParseLenient = new RegExp(
	            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	                '|' +
	                /\d{1,2}/.source
	        );
	    }

	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig),
	            prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        for (prop in parentConfig) {
	            if (
	                hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])
	            ) {
	                // make sure changes to properties don't modify parent config
	                res[prop] = extend({}, res[prop]);
	            }
	        }
	        return res;
	    }

	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }

	    var keys;

	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i,
	                res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }

	    var defaultCalendar = {
	        sameDay: '[Today at] LT',
	        nextDay: '[Tomorrow at] LT',
	        nextWeek: 'dddd [at] LT',
	        lastDay: '[Yesterday at] LT',
	        lastWeek: '[Last] dddd [at] LT',
	        sameElse: 'L',
	    };

	    function calendar(key, mom, now) {
	        var output = this._calendar[key] || this._calendar['sameElse'];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (
	            (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
	            absNumber
	        );
	    }

	    var formattingTokens =
	            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
	        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
	        formatFunctions = {},
	        formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken(token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(
	                    func.apply(this, arguments),
	                    token
	                );
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens),
	            i,
	            length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '',
	                i;
	            for (i = 0; i < length; i++) {
	                output += isFunction(array[i])
	                    ? array[i].call(mom, format)
	                    : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] =
	            formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(
	                localFormattingTokens,
	                replaceLongDateFormatTokens
	            );
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var defaultLongDateFormat = {
	        LTS: 'h:mm:ss A',
	        LT: 'h:mm A',
	        L: 'MM/DD/YYYY',
	        LL: 'MMMM D, YYYY',
	        LLL: 'MMMM D, YYYY h:mm A',
	        LLLL: 'dddd, MMMM D, YYYY h:mm A',
	    };

	    function longDateFormat(key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper
	            .match(formattingTokens)
	            .map(function (tok) {
	                if (
	                    tok === 'MMMM' ||
	                    tok === 'MM' ||
	                    tok === 'DD' ||
	                    tok === 'dddd'
	                ) {
	                    return tok.slice(1);
	                }
	                return tok;
	            })
	            .join('');

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate() {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d',
	        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

	    function ordinal(number) {
	        return this._ordinal.replace('%d', number);
	    }

	    var defaultRelativeTime = {
	        future: 'in %s',
	        past: '%s ago',
	        s: 'a few seconds',
	        ss: '%d seconds',
	        m: 'a minute',
	        mm: '%d minutes',
	        h: 'an hour',
	        hh: '%d hours',
	        d: 'a day',
	        dd: '%d days',
	        w: 'a week',
	        ww: '%d weeks',
	        M: 'a month',
	        MM: '%d months',
	        y: 'a year',
	        yy: '%d years',
	    };

	    function relativeTime(number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return isFunction(output)
	            ? output(number, withoutSuffix, string, isFuture)
	            : output.replace(/%d/i, number);
	    }

	    function pastFuture(diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }

	    var aliases = {};

	    function addUnitAlias(unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string'
	            ? aliases[units] || aliases[units.toLowerCase()]
	            : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    var priorities = {};

	    function addUnitPriority(unit, priority) {
	        priorities[unit] = priority;
	    }

	    function getPrioritizedUnits(unitsObj) {
	        var units = [],
	            u;
	        for (u in unitsObj) {
	            if (hasOwnProp(unitsObj, u)) {
	                units.push({ unit: u, priority: priorities[u] });
	            }
	        }
	        units.sort(function (a, b) {
	            return a.priority - b.priority;
	        });
	        return units;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    function absFloor(number) {
	        if (number < 0) {
	            // -0 -> 0
	            return Math.ceil(number) || 0;
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function makeGetSet(unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                set$1(this, unit, value);
	                hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get(this, unit);
	            }
	        };
	    }

	    function get(mom, unit) {
	        return mom.isValid()
	            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
	            : NaN;
	    }

	    function set$1(mom, unit, value) {
	        if (mom.isValid() && !isNaN(value)) {
	            if (
	                unit === 'FullYear' &&
	                isLeapYear(mom.year()) &&
	                mom.month() === 1 &&
	                mom.date() === 29
	            ) {
	                value = toInt(value);
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
	                    value,
	                    mom.month(),
	                    daysInMonth(value, mom.month())
	                );
	            } else {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	            }
	        }
	    }

	    // MOMENTS

	    function stringGet(units) {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units]();
	        }
	        return this;
	    }

	    function stringSet(units, value) {
	        if (typeof units === 'object') {
	            units = normalizeObjectUnits(units);
	            var prioritized = getPrioritizedUnits(units),
	                i,
	                prioritizedLen = prioritized.length;
	            for (i = 0; i < prioritizedLen; i++) {
	                this[prioritized[i].unit](units[prioritized[i].unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    var match1 = /\d/, //       0 - 9
	        match2 = /\d\d/, //      00 - 99
	        match3 = /\d{3}/, //     000 - 999
	        match4 = /\d{4}/, //    0000 - 9999
	        match6 = /[+-]?\d{6}/, // -999999 - 999999
	        match1to2 = /\d\d?/, //       0 - 99
	        match3to4 = /\d\d\d\d?/, //     999 - 9999
	        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
	        match1to3 = /\d{1,3}/, //       0 - 999
	        match1to4 = /\d{1,4}/, //       0 - 9999
	        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
	        matchUnsigned = /\d+/, //       0 - inf
	        matchSigned = /[+-]?\d+/, //    -inf - inf
	        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
	        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
	        // any word (or two) characters or numbers including two/three word month in arabic.
	        // includes scottish gaelic two word and hyphenated months
	        matchWord =
	            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
	        regexes;

	    regexes = {};

	    function addRegexToken(token, regex, strictRegex) {
	        regexes[token] = isFunction(regex)
	            ? regex
	            : function (isStrict, localeData) {
	                  return isStrict && strictRegex ? strictRegex : regex;
	              };
	    }

	    function getParseRegexForToken(token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(
	            s
	                .replace('\\', '')
	                .replace(
	                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
	                    function (matched, p1, p2, p3, p4) {
	                        return p1 || p2 || p3 || p4;
	                    }
	                )
	        );
	    }

	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken(token, callback) {
	        var i,
	            func = callback,
	            tokenLen;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (isNumber(callback)) {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        tokenLen = token.length;
	        for (i = 0; i < tokenLen; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken(token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0,
	        MONTH = 1,
	        DATE = 2,
	        HOUR = 3,
	        MINUTE = 4,
	        SECOND = 5,
	        MILLISECOND = 6,
	        WEEK = 7,
	        WEEKDAY = 8;

	    function mod(n, x) {
	        return ((n % x) + x) % x;
	    }

	    var indexOf;

	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }

	    function daysInMonth(year, month) {
	        if (isNaN(year) || isNaN(month)) {
	            return NaN;
	        }
	        var modMonth = mod(month, 12);
	        year += (month - modMonth) / 12;
	        return modMonth === 1
	            ? isLeapYear(year)
	                ? 29
	                : 28
	            : 31 - ((modMonth % 7) % 2);
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PRIORITY

	    addUnitPriority('month', 8);

	    // PARSING

	    addRegexToken('M', match1to2);
	    addRegexToken('MM', match1to2, match2);
	    addRegexToken('MMM', function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths =
	            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
	                '_'
	            ),
	        defaultLocaleMonthsShort =
	            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
	        defaultMonthsShortRegex = matchWord,
	        defaultMonthsRegex = matchWord;

	    function localeMonths(m, format) {
	        if (!m) {
	            return isArray(this._months)
	                ? this._months
	                : this._months['standalone'];
	        }
	        return isArray(this._months)
	            ? this._months[m.month()]
	            : this._months[
	                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
	                      ? 'format'
	                      : 'standalone'
	              ][m.month()];
	    }

	    function localeMonthsShort(m, format) {
	        if (!m) {
	            return isArray(this._monthsShort)
	                ? this._monthsShort
	                : this._monthsShort['standalone'];
	        }
	        return isArray(this._monthsShort)
	            ? this._monthsShort[m.month()]
	            : this._monthsShort[
	                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
	              ][m.month()];
	    }

	    function handleStrictParse(monthName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeMonthsParse(monthName, format, strict) {
	        var i, mom, regex;

	        if (this._monthsParseExact) {
	            return handleStrictParse.call(this, monthName, format, strict);
	        }

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp(
	                    '^' + this.months(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	                this._shortMonthsParse[i] = new RegExp(
	                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex =
	                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'MMMM' &&
	                this._longMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'MMM' &&
	                this._shortMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth(mom, value) {
	        var dayOfMonth;

	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }

	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (!isNumber(value)) {
	                    return mom;
	                }
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth(value) {
	        if (value != null) {
	            setMonth(this, value);
	            hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get(this, 'Month');
	        }
	    }

	    function getDaysInMonth() {
	        return daysInMonth(this.year(), this.month());
	    }

	    function monthsShortRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsShortRegex')) {
	                this._monthsShortRegex = defaultMonthsShortRegex;
	            }
	            return this._monthsShortStrictRegex && isStrict
	                ? this._monthsShortStrictRegex
	                : this._monthsShortRegex;
	        }
	    }

	    function monthsRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                this._monthsRegex = defaultMonthsRegex;
	            }
	            return this._monthsStrictRegex && isStrict
	                ? this._monthsStrictRegex
	                : this._monthsRegex;
	        }
	    }

	    function computeMonthsParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	        }
	        for (i = 0; i < 24; i++) {
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._monthsShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
	    });

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY', 4], 0, 'year');
	    addFormatToken(0, ['YYYYY', 5], 0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PRIORITIES

	    addUnitPriority('year', 1);

	    // PARSING

	    addRegexToken('Y', matchSigned);
	    addRegexToken('YY', match1to2, match2);
	    addRegexToken('YYYY', match1to4, match4);
	    addRegexToken('YYYYY', match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] =
	            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    // HOOKS

	    hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', true);

	    function getIsLeapYear() {
	        return isLeapYear(this.year());
	    }

	    function createDate(y, m, d, h, M, s, ms) {
	        // can't just apply() to create a date:
	        // https://stackoverflow.com/q/181348
	        var date;
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            date = new Date(y + 400, m, d, h, M, s, ms);
	            if (isFinite(date.getFullYear())) {
	                date.setFullYear(y);
	            }
	        } else {
	            date = new Date(y, m, d, h, M, s, ms);
	        }

	        return date;
	    }

	    function createUTCDate(y) {
	        var date, args;
	        // the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            args = Array.prototype.slice.call(arguments);
	            // preserve leap years using a full 400 year cycle, then reset
	            args[0] = y + 400;
	            date = new Date(Date.UTC.apply(null, args));
	            if (isFinite(date.getUTCFullYear())) {
	                date.setUTCFullYear(y);
	            }
	        } else {
	            date = new Date(Date.UTC.apply(null, arguments));
	        }

	        return date;
	    }

	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	        return -fwdlw + fwd - 1;
	    }

	    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear,
	            resDayOfYear;

	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }

	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear,
	        };
	    }

	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek,
	            resYear;

	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }

	        return {
	            week: resWeek,
	            year: resYear,
	        };
	    }

	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }

	    // FORMATTING

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PRIORITIES

	    addUnitPriority('week', 5);
	    addUnitPriority('isoWeek', 5);

	    // PARSING

	    addRegexToken('w', match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W', match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(
	        ['w', 'ww', 'W', 'WW'],
	        function (input, week, config, token) {
	            week[token.substr(0, 1)] = toInt(input);
	        }
	    );

	    // HELPERS

	    // LOCALES

	    function localeWeek(mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow: 0, // Sunday is the first day of the week.
	        doy: 6, // The week that contains Jan 6th is the first week of the year.
	    };

	    function localeFirstDayOfWeek() {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear() {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek(input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek(input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    // FORMATTING

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PRIORITY
	    addUnitPriority('day', 11);
	    addUnitPriority('weekday', 11);
	    addUnitPriority('isoWeekday', 11);

	    // PARSING

	    addRegexToken('d', match1to2);
	    addRegexToken('e', match1to2);
	    addRegexToken('E', match1to2);
	    addRegexToken('dd', function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd', function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd', function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    function parseIsoWeekday(input, locale) {
	        if (typeof input === 'string') {
	            return locale.weekdaysParse(input) % 7 || 7;
	        }
	        return isNaN(input) ? null : input;
	    }

	    // LOCALES
	    function shiftWeekdays(ws, n) {
	        return ws.slice(n, 7).concat(ws.slice(0, n));
	    }

	    var defaultLocaleWeekdays =
	            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        defaultWeekdaysRegex = matchWord,
	        defaultWeekdaysShortRegex = matchWord,
	        defaultWeekdaysMinRegex = matchWord;

	    function localeWeekdays(m, format) {
	        var weekdays = isArray(this._weekdays)
	            ? this._weekdays
	            : this._weekdays[
	                  m && m !== true && this._weekdays.isFormat.test(format)
	                      ? 'format'
	                      : 'standalone'
	              ];
	        return m === true
	            ? shiftWeekdays(weekdays, this._week.dow)
	            : m
	            ? weekdays[m.day()]
	            : weekdays;
	    }

	    function localeWeekdaysShort(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
	            : m
	            ? this._weekdaysShort[m.day()]
	            : this._weekdaysShort;
	    }

	    function localeWeekdaysMin(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
	            : m
	            ? this._weekdaysMin[m.day()]
	            : this._weekdaysMin;
	    }

	    function handleStrictParse$1(weekdayName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];

	            for (i = 0; i < 7; ++i) {
	                mom = createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeWeekdaysParse(weekdayName, format, strict) {
	        var i, mom, regex;

	        if (this._weekdaysParseExact) {
	            return handleStrictParse$1.call(this, weekdayName, format, strict);
	        }

	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already

	            mom = createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._shortWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._minWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	            }
	            if (!this._weekdaysParse[i]) {
	                regex =
	                    '^' +
	                    this.weekdays(mom, '') +
	                    '|^' +
	                    this.weekdaysShort(mom, '') +
	                    '|^' +
	                    this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'dddd' &&
	                this._fullWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'ddd' &&
	                this._shortWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'dd' &&
	                this._minWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }

	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.

	        if (input != null) {
	            var weekday = parseIsoWeekday(input, this.localeData());
	            return this.day(this.day() % 7 ? weekday : weekday - 7);
	        } else {
	            return this.day() || 7;
	        }
	    }

	    function weekdaysRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                this._weekdaysRegex = defaultWeekdaysRegex;
	            }
	            return this._weekdaysStrictRegex && isStrict
	                ? this._weekdaysStrictRegex
	                : this._weekdaysRegex;
	        }
	    }

	    function weekdaysShortRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	            }
	            return this._weekdaysShortStrictRegex && isStrict
	                ? this._weekdaysShortStrictRegex
	                : this._weekdaysShortRegex;
	        }
	    }

	    function weekdaysMinRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	            }
	            return this._weekdaysMinStrictRegex && isStrict
	                ? this._weekdaysMinStrictRegex
	                : this._weekdaysMinRegex;
	        }
	    }

	    function computeWeekdaysParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var minPieces = [],
	            shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom,
	            minp,
	            shortp,
	            longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, 1]).day(i);
	            minp = regexEscape(this.weekdaysMin(mom, ''));
	            shortp = regexEscape(this.weekdaysShort(mom, ''));
	            longp = regexEscape(this.weekdays(mom, ''));
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);

	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;

	        this._weekdaysStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysMinStrictRegex = new RegExp(
	            '^(' + minPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }

	    function kFormat() {
	        return this.hours() || 24;
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);

	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('hmmss', 0, 0, function () {
	        return (
	            '' +
	            hFormat.apply(this) +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('Hmmss', 0, 0, function () {
	        return (
	            '' +
	            this.hours() +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    function meridiem(token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(
	                this.hours(),
	                this.minutes(),
	                lowercase
	            );
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PRIORITY
	    addUnitPriority('hour', 13);

	    // PARSING

	    function matchMeridiem(isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a', matchMeridiem);
	    addRegexToken('A', matchMeridiem);
	    addRegexToken('H', match1to2);
	    addRegexToken('h', match1to2);
	    addRegexToken('k', match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	    addRegexToken('kk', match1to2, match2);

	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['k', 'kk'], function (input, array, config) {
	        var kInput = toInt(input);
	        array[HOUR] = kInput === 24 ? 0 : kInput;
	    });
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });

	    // LOCALES

	    function localeIsPM(input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return (input + '').toLowerCase().charAt(0) === 'p';
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
	        // Setting the hour should keep the time, because the user explicitly
	        // specified which hour they want. So trying to maintain the same hour (in
	        // a new timezone) makes sense. Adding/subtracting hours does not follow
	        // this rule.
	        getSetHour = makeGetSet('Hours', true);

	    function localeMeridiem(hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }

	    var baseConfig = {
	        calendar: defaultCalendar,
	        longDateFormat: defaultLongDateFormat,
	        invalidDate: defaultInvalidDate,
	        ordinal: defaultOrdinal,
	        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	        relativeTime: defaultRelativeTime,

	        months: defaultLocaleMonths,
	        monthsShort: defaultLocaleMonthsShort,

	        week: defaultLocaleWeek,

	        weekdays: defaultLocaleWeekdays,
	        weekdaysMin: defaultLocaleWeekdaysMin,
	        weekdaysShort: defaultLocaleWeekdaysShort,

	        meridiemParse: defaultLocaleMeridiemParse,
	    };

	    // internal storage for locale config files
	    var locales = {},
	        localeFamilies = {},
	        globalLocale;

	    function commonPrefix(arr1, arr2) {
	        var i,
	            minl = Math.min(arr1.length, arr2.length);
	        for (i = 0; i < minl; i += 1) {
	            if (arr1[i] !== arr2[i]) {
	                return i;
	            }
	        }
	        return minl;
	    }

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0,
	            j,
	            next,
	            locale,
	            split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (
	                    next &&
	                    next.length >= j &&
	                    commonPrefix(split, next) >= j - 1
	                ) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return globalLocale;
	    }

	    function isLocaleNameSane(name) {
	        // Prevent names that look like filesystem paths, i.e contain '/' or '\'
	        return name.match('^[^/\\\\]*$') != null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null,
	            aliasedRequire;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (
	            locales[name] === undefined &&
	            'object' !== 'undefined' &&
	            module &&
	            module.exports &&
	            isLocaleNameSane(name)
	        ) {
	            try {
	                oldLocale = globalLocale._abbr;
	                aliasedRequire = commonjsRequire;
	                aliasedRequire('./locale/' + name);
	                getSetGlobalLocale(oldLocale);
	            } catch (e) {
	                // mark as not found to avoid repeating expensive file require call causing high CPU
	                // when trying to find en-US, en_US, en-us for every format call
	                locales[name] = null; // null means not found
	            }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function getSetGlobalLocale(key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = getLocale(key);
	            } else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            } else {
	                if (typeof console !== 'undefined' && console.warn) {
	                    //warn user if arguments are passed but the locale could not be set
	                    console.warn(
	                        'Locale ' + key + ' not found. Did you forget to load it?'
	                    );
	                }
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale(name, config) {
	        if (config !== null) {
	            var locale,
	                parentConfig = baseConfig;
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple(
	                    'defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale ' +
	                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
	                );
	                parentConfig = locales[name]._config;
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    parentConfig = locales[config.parentLocale]._config;
	                } else {
	                    locale = loadLocale(config.parentLocale);
	                    if (locale != null) {
	                        parentConfig = locale._config;
	                    } else {
	                        if (!localeFamilies[config.parentLocale]) {
	                            localeFamilies[config.parentLocale] = [];
	                        }
	                        localeFamilies[config.parentLocale].push({
	                            name: name,
	                            config: config,
	                        });
	                        return null;
	                    }
	                }
	            }
	            locales[name] = new Locale(mergeConfigs(parentConfig, config));

	            if (localeFamilies[name]) {
	                localeFamilies[name].forEach(function (x) {
	                    defineLocale(x.name, x.config);
	                });
	            }

	            // backwards compat for now: also set the locale
	            // make sure we set the locale AFTER all child locales have been
	            // created, so we won't end up with the child locale set.
	            getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale,
	                tmpLocale,
	                parentConfig = baseConfig;

	            if (locales[name] != null && locales[name].parentLocale != null) {
	                // Update existing child locale in-place to avoid memory-leaks
	                locales[name].set(mergeConfigs(locales[name]._config, config));
	            } else {
	                // MERGE
	                tmpLocale = loadLocale(name);
	                if (tmpLocale != null) {
	                    parentConfig = tmpLocale._config;
	                }
	                config = mergeConfigs(parentConfig, config);
	                if (tmpLocale == null) {
	                    // updateLocale is called for creating a new locale
	                    // Set abbr so it will have a name (getters return
	                    // undefined otherwise).
	                    config.abbr = name;
	                }
	                locale = new Locale(config);
	                locale.parentLocale = locales[name];
	                locales[name] = locale;
	            }

	            // backwards compat for now: also set the locale
	            getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                    if (name === getSetGlobalLocale()) {
	                        getSetGlobalLocale(name);
	                    }
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }

	    // returns locale data
	    function getLocale(key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    function listLocales() {
	        return keys(locales);
	    }

	    function checkOverflow(m) {
	        var overflow,
	            a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH] < 0 || a[MONTH] > 11
	                    ? MONTH
	                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
	                    ? DATE
	                    : a[HOUR] < 0 ||
	                      a[HOUR] > 24 ||
	                      (a[HOUR] === 24 &&
	                          (a[MINUTE] !== 0 ||
	                              a[SECOND] !== 0 ||
	                              a[MILLISECOND] !== 0))
	                    ? HOUR
	                    : a[MINUTE] < 0 || a[MINUTE] > 59
	                    ? MINUTE
	                    : a[SECOND] < 0 || a[SECOND] > 59
	                    ? SECOND
	                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
	                    ? MILLISECOND
	                    : -1;

	            if (
	                getParsingFlags(m)._overflowDayOfYear &&
	                (overflow < YEAR || overflow > DATE)
	            ) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        basicIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
	        isoDates = [
	            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	            ['YYYY-DDD', /\d{4}-\d{3}/],
	            ['YYYY-MM', /\d{4}-\d\d/, false],
	            ['YYYYYYMMDD', /[+-]\d{10}/],
	            ['YYYYMMDD', /\d{8}/],
	            ['GGGG[W]WWE', /\d{4}W\d{3}/],
	            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	            ['YYYYDDD', /\d{7}/],
	            ['YYYYMM', /\d{6}/, false],
	            ['YYYY', /\d{4}/, false],
	        ],
	        // iso time formats and regexes
	        isoTimes = [
	            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	            ['HH:mm', /\d\d:\d\d/],
	            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	            ['HHmmss', /\d\d\d\d\d\d/],
	            ['HHmm', /\d\d\d\d/],
	            ['HH', /\d\d/],
	        ],
	        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
	        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	        rfc2822 =
	            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
	        obsOffsets = {
	            UT: 0,
	            GMT: 0,
	            EDT: -4 * 60,
	            EST: -5 * 60,
	            CDT: -5 * 60,
	            CST: -6 * 60,
	            MDT: -6 * 60,
	            MST: -7 * 60,
	            PDT: -7 * 60,
	            PST: -8 * 60,
	        };

	    // date from iso format
	    function configFromISO(config) {
	        var i,
	            l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime,
	            dateFormat,
	            timeFormat,
	            tzFormat,
	            isoDatesLen = isoDates.length,
	            isoTimesLen = isoTimes.length;

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDatesLen; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimesLen; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    function extractFromRFC2822Strings(
	        yearStr,
	        monthStr,
	        dayStr,
	        hourStr,
	        minuteStr,
	        secondStr
	    ) {
	        var result = [
	            untruncateYear(yearStr),
	            defaultLocaleMonthsShort.indexOf(monthStr),
	            parseInt(dayStr, 10),
	            parseInt(hourStr, 10),
	            parseInt(minuteStr, 10),
	        ];

	        if (secondStr) {
	            result.push(parseInt(secondStr, 10));
	        }

	        return result;
	    }

	    function untruncateYear(yearStr) {
	        var year = parseInt(yearStr, 10);
	        if (year <= 49) {
	            return 2000 + year;
	        } else if (year <= 999) {
	            return 1900 + year;
	        }
	        return year;
	    }

	    function preprocessRFC2822(s) {
	        // Remove comments and folding whitespace and replace multiple-spaces with a single space
	        return s
	            .replace(/\([^()]*\)|[\n\t]/g, ' ')
	            .replace(/(\s\s+)/g, ' ')
	            .replace(/^\s\s*/, '')
	            .replace(/\s\s*$/, '');
	    }

	    function checkWeekday(weekdayStr, parsedInput, config) {
	        if (weekdayStr) {
	            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
	            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	                weekdayActual = new Date(
	                    parsedInput[0],
	                    parsedInput[1],
	                    parsedInput[2]
	                ).getDay();
	            if (weekdayProvided !== weekdayActual) {
	                getParsingFlags(config).weekdayMismatch = true;
	                config._isValid = false;
	                return false;
	            }
	        }
	        return true;
	    }

	    function calculateOffset(obsOffset, militaryOffset, numOffset) {
	        if (obsOffset) {
	            return obsOffsets[obsOffset];
	        } else if (militaryOffset) {
	            // the only allowed military tz is Z
	            return 0;
	        } else {
	            var hm = parseInt(numOffset, 10),
	                m = hm % 100,
	                h = (hm - m) / 100;
	            return h * 60 + m;
	        }
	    }

	    // date and time from ref 2822 format
	    function configFromRFC2822(config) {
	        var match = rfc2822.exec(preprocessRFC2822(config._i)),
	            parsedArray;
	        if (match) {
	            parsedArray = extractFromRFC2822Strings(
	                match[4],
	                match[3],
	                match[2],
	                match[5],
	                match[6],
	                match[7]
	            );
	            if (!checkWeekday(match[1], parsedArray, config)) {
	                return;
	            }

	            config._a = parsedArray;
	            config._tzm = calculateOffset(match[8], match[9], match[10]);

	            config._d = createUTCDate.apply(null, config._a);
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

	            getParsingFlags(config).rfc2822 = true;
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        configFromRFC2822(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        if (config._strict) {
	            config._isValid = false;
	        } else {
	            // Final attempt, use Input Fallback
	            hooks.createFromInputFallback(config);
	        }
	    }

	    hooks.createFromInputFallback = deprecate(
	        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(hooks.now());
	        if (config._useUTC) {
	            return [
	                nowValue.getUTCFullYear(),
	                nowValue.getUTCMonth(),
	                nowValue.getUTCDate(),
	            ];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray(config) {
	        var i,
	            date,
	            input = [],
	            currentDate,
	            expectedWeekday,
	            yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear != null) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (
	                config._dayOfYear > daysInYear(yearToUse) ||
	                config._dayOfYear === 0
	            ) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] =
	                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (
	            config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0
	        ) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(
	            null,
	            input
	        );
	        expectedWeekday = config._useUTC
	            ? config._d.getUTCDay()
	            : config._d.getDay();

	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }

	        // check for mismatching day of week
	        if (
	            config._w &&
	            typeof config._w.d !== 'undefined' &&
	            config._w.d !== expectedWeekday
	        ) {
	            getParsingFlags(config).weekdayMismatch = true;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(
	                w.GG,
	                config._a[YEAR],
	                weekOfYear(createLocal(), 1, 4).year
	            );
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            curWeek = weekOfYear(createLocal(), dow, doy);

	            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

	            // Default to current week.
	            week = defaults(w.w, curWeek.week);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from beginning of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to beginning of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }

	    // constant that refers to the ISO standard
	    hooks.ISO_8601 = function () {};

	    // constant that refers to the RFC 2822 form
	    hooks.RFC_2822 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	        if (config._f === hooks.RFC_2822) {
	            configFromRFC2822(config);
	            return;
	        }
	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i,
	            parsedInput,
	            tokens,
	            token,
	            skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0,
	            era,
	            tokenLen;

	        tokens =
	            expandFormat(config._f, config._locale).match(formattingTokens) || [];
	        tokenLen = tokens.length;
	        for (i = 0; i < tokenLen; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
	                [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(
	                    string.indexOf(parsedInput) + parsedInput.length
	                );
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                } else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            } else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver =
	            stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (
	            config._a[HOUR] <= 12 &&
	            getParsingFlags(config).bigHour === true &&
	            config._a[HOUR] > 0
	        ) {
	            getParsingFlags(config).bigHour = undefined;
	        }

	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(
	            config._locale,
	            config._a[HOUR],
	            config._meridiem
	        );

	        // handle era
	        era = getParsingFlags(config).era;
	        if (era !== null) {
	            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
	        }

	        configFromArray(config);
	        checkOverflow(config);
	    }

	    function meridiemFixWrap(locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	            scoreToBeat,
	            i,
	            currentScore,
	            validFormatFound,
	            bestFormatIsValid = false,
	            configfLen = config._f.length;

	        if (configfLen === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < configfLen; i++) {
	            currentScore = 0;
	            validFormatFound = false;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (isValid(tempConfig)) {
	                validFormatFound = true;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (!bestFormatIsValid) {
	                if (
	                    scoreToBeat == null ||
	                    currentScore < scoreToBeat ||
	                    validFormatFound
	                ) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                    if (validFormatFound) {
	                        bestFormatIsValid = true;
	                    }
	                }
	            } else {
	                if (currentScore < scoreToBeat) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                }
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i),
	            dayOrDate = i.day === undefined ? i.date : i.day;
	        config._a = map(
	            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
	            function (obj) {
	                return obj && parseInt(obj, 10);
	            }
	        );

	        configFromArray(config);
	    }

	    function createFromConfig(config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig(config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return createInvalid({ nullInput: true });
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isDate(input)) {
	            config._d = input;
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else {
	            configFromInput(config);
	        }

	        if (!isValid(config)) {
	            config._d = null;
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (isUndefined(input)) {
	            config._d = new Date(hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (isObject(input)) {
	            configFromObject(config);
	        } else if (isNumber(input)) {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC(input, format, locale, strict, isUTC) {
	        var c = {};

	        if (format === true || format === false) {
	            strict = format;
	            format = undefined;
	        }

	        if (locale === true || locale === false) {
	            strict = locale;
	            locale = undefined;
	        }

	        if (
	            (isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)
	        ) {
	            input = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function createLocal(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other < this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        ),
	        prototypeMax = deprecate(
	            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other > this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    var now = function () {
	        return Date.now ? Date.now() : +new Date();
	    };

	    var ordering = [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second',
	        'millisecond',
	    ];

	    function isDurationValid(m) {
	        var key,
	            unitHasDecimal = false,
	            i,
	            orderLen = ordering.length;
	        for (key in m) {
	            if (
	                hasOwnProp(m, key) &&
	                !(
	                    indexOf.call(ordering, key) !== -1 &&
	                    (m[key] == null || !isNaN(m[key]))
	                )
	            ) {
	                return false;
	            }
	        }

	        for (i = 0; i < orderLen; ++i) {
	            if (m[ordering[i]]) {
	                if (unitHasDecimal) {
	                    return false; // only allow non-integers for smallest unit
	                }
	                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                    unitHasDecimal = true;
	                }
	            }
	        }

	        return true;
	    }

	    function isValid$1() {
	        return this._isValid;
	    }

	    function createInvalid$1() {
	        return createDuration(NaN);
	    }

	    function Duration(duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        this._isValid = isDurationValid(normalizedInput);

	        // representation for dateAddRemove
	        this._milliseconds =
	            +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days + weeks * 7;
	        // It is impossible to translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months + quarters * 3 + years * 12;

	        this._data = {};

	        this._locale = getLocale();

	        this._bubble();
	    }

	    function isDuration(obj) {
	        return obj instanceof Duration;
	    }

	    function absRound(number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if (
	                (dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
	            ) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    // FORMATTING

	    function offset(token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset(),
	                sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return (
	                sign +
	                zeroFill(~~(offset / 60), 2) +
	                separator +
	                zeroFill(~~offset % 60, 2)
	            );
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z', matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(matcher, string) {
	        var matches = (string || '').match(matcher),
	            chunk,
	            parts,
	            minutes;

	        if (matches === null) {
	            return null;
	        }

	        chunk = matches[matches.length - 1] || [];
	        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff =
	                (isMoment(input) || isDate(input)
	                    ? input.valueOf()
	                    : createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return createLocal(input).local();
	        }
	    }

	    function getDateOffset(m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset());
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset(input, keepLocalTime, keepMinutes) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	                if (input === null) {
	                    return this;
	                }
	            } else if (Math.abs(input) < 16 && !keepMinutes) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    addSubtract(
	                        this,
	                        createDuration(input - offset, 'm'),
	                        1,
	                        false
	                    );
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone(input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC(keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal(keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset() {
	        if (this._tzm != null) {
	            this.utcOffset(this._tzm, false, true);
	        } else if (typeof this._i === 'string') {
	            var tZone = offsetFromString(matchOffset, this._i);
	            if (tZone != null) {
	                this.utcOffset(tZone);
	            } else {
	                this.utcOffset(0, true);
	            }
	        }
	        return this;
	    }

	    function hasAlignedHourOffset(input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime() {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted() {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }

	        var c = {},
	            other;

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	            this._isDSTShifted =
	                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal() {
	        return this.isValid() ? !this._isUTC : false;
	    }

	    function isUtcOffset() {
	        return this.isValid() ? this._isUTC : false;
	    }

	    function isUtc() {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }

	    // ASP.NET json date format regex
	    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
	        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	        // and further modified to allow for strings containing both week and day
	        isoRegex =
	            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

	    function createDuration(input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms: input._milliseconds,
	                d: input._days,
	                M: input._months,
	            };
	        } else if (isNumber(input) || !isNaN(+input)) {
	            duration = {};
	            if (key) {
	                duration[key] = +input;
	            } else {
	                duration.milliseconds = +input;
	            }
	        } else if ((match = aspNetRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: 0,
	                d: toInt(match[DATE]) * sign,
	                h: toInt(match[HOUR]) * sign,
	                m: toInt(match[MINUTE]) * sign,
	                s: toInt(match[SECOND]) * sign,
	                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
	            };
	        } else if ((match = isoRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: parseIso(match[2], sign),
	                M: parseIso(match[3], sign),
	                w: parseIso(match[4], sign),
	                d: parseIso(match[5], sign),
	                h: parseIso(match[6], sign),
	                m: parseIso(match[7], sign),
	                s: parseIso(match[8], sign),
	            };
	        } else if (duration == null) {
	            // checks for null or undefined
	            duration = {};
	        } else if (
	            typeof duration === 'object' &&
	            ('from' in duration || 'to' in duration)
	        ) {
	            diffRes = momentsDifference(
	                createLocal(duration.from),
	                createLocal(duration.to)
	            );

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
	            ret._isValid = input._isValid;
	        }

	        return ret;
	    }

	    createDuration.fn = Duration.prototype;
	    createDuration.invalid = createInvalid$1;

	    function parseIso(inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {};

	        res.months =
	            other.month() - base.month() + (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +base.clone().add(res.months, 'M');

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return { milliseconds: 0, months: 0 };
	        }

	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(
	                    name,
	                    'moment().' +
	                        name +
	                        '(period, number) is deprecated. Please use moment().' +
	                        name +
	                        '(number, period). ' +
	                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
	                );
	                tmp = val;
	                val = period;
	                period = tmp;
	            }

	            dur = createDuration(val, period);
	            addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function addSubtract(mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);

	        if (!mom.isValid()) {
	            // No op
	            return;
	        }

	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (months) {
	            setMonth(mom, get(mom, 'Month') + months * isAdding);
	        }
	        if (days) {
	            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	        }
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (updateOffset) {
	            hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add = createAdder(1, 'add'),
	        subtract = createAdder(-1, 'subtract');

	    function isString(input) {
	        return typeof input === 'string' || input instanceof String;
	    }

	    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
	    function isMomentInput(input) {
	        return (
	            isMoment(input) ||
	            isDate(input) ||
	            isString(input) ||
	            isNumber(input) ||
	            isNumberOrStringArray(input) ||
	            isMomentInputObject(input) ||
	            input === null ||
	            input === undefined
	        );
	    }

	    function isMomentInputObject(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'years',
	                'year',
	                'y',
	                'months',
	                'month',
	                'M',
	                'days',
	                'day',
	                'd',
	                'dates',
	                'date',
	                'D',
	                'hours',
	                'hour',
	                'h',
	                'minutes',
	                'minute',
	                'm',
	                'seconds',
	                'second',
	                's',
	                'milliseconds',
	                'millisecond',
	                'ms',
	            ],
	            i,
	            property,
	            propertyLen = properties.length;

	        for (i = 0; i < propertyLen; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function isNumberOrStringArray(input) {
	        var arrayTest = isArray(input),
	            dataTypeTest = false;
	        if (arrayTest) {
	            dataTypeTest =
	                input.filter(function (item) {
	                    return !isNumber(item) && isString(input);
	                }).length === 0;
	        }
	        return arrayTest && dataTypeTest;
	    }

	    function isCalendarSpec(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'sameDay',
	                'nextDay',
	                'lastDay',
	                'nextWeek',
	                'lastWeek',
	                'sameElse',
	            ],
	            i,
	            property;

	        for (i = 0; i < properties.length; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function getCalendarFormat(myMoment, now) {
	        var diff = myMoment.diff(now, 'days', true);
	        return diff < -6
	            ? 'sameElse'
	            : diff < -1
	            ? 'lastWeek'
	            : diff < 0
	            ? 'lastDay'
	            : diff < 1
	            ? 'sameDay'
	            : diff < 2
	            ? 'nextDay'
	            : diff < 7
	            ? 'nextWeek'
	            : 'sameElse';
	    }

	    function calendar$1(time, formats) {
	        // Support for single parameter, formats only overload to the calendar function
	        if (arguments.length === 1) {
	            if (!arguments[0]) {
	                time = undefined;
	                formats = undefined;
	            } else if (isMomentInput(arguments[0])) {
	                time = arguments[0];
	                formats = undefined;
	            } else if (isCalendarSpec(arguments[0])) {
	                formats = arguments[0];
	                time = undefined;
	            }
	        }
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            format = hooks.calendarFormat(this, sod) || 'sameElse',
	            output =
	                formats &&
	                (isFunction(formats[format])
	                    ? formats[format].call(this, now)
	                    : formats[format]);

	        return this.format(
	            output || this.localeData().calendar(format, this, createLocal(now))
	        );
	    }

	    function clone() {
	        return new Moment(this);
	    }

	    function isAfter(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }

	    function isBefore(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }

	    function isBetween(from, to, units, inclusivity) {
	        var localFrom = isMoment(from) ? from : createLocal(from),
	            localTo = isMoment(to) ? to : createLocal(to);
	        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
	            return false;
	        }
	        inclusivity = inclusivity || '()';
	        return (
	            (inclusivity[0] === '('
	                ? this.isAfter(localFrom, units)
	                : !this.isBefore(localFrom, units)) &&
	            (inclusivity[1] === ')'
	                ? this.isBefore(localTo, units)
	                : !this.isAfter(localTo, units))
	        );
	    }

	    function isSame(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return (
	                this.clone().startOf(units).valueOf() <= inputMs &&
	                inputMs <= this.clone().endOf(units).valueOf()
	            );
	        }
	    }

	    function isSameOrAfter(input, units) {
	        return this.isSame(input, units) || this.isAfter(input, units);
	    }

	    function isSameOrBefore(input, units) {
	        return this.isSame(input, units) || this.isBefore(input, units);
	    }

	    function diff(input, units, asFloat) {
	        var that, zoneDelta, output;

	        if (!this.isValid()) {
	            return NaN;
	        }

	        that = cloneWithOffset(input, this);

	        if (!that.isValid()) {
	            return NaN;
	        }

	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	        units = normalizeUnits(units);

	        switch (units) {
	            case 'year':
	                output = monthDiff(this, that) / 12;
	                break;
	            case 'month':
	                output = monthDiff(this, that);
	                break;
	            case 'quarter':
	                output = monthDiff(this, that) / 3;
	                break;
	            case 'second':
	                output = (this - that) / 1e3;
	                break; // 1000
	            case 'minute':
	                output = (this - that) / 6e4;
	                break; // 1000 * 60
	            case 'hour':
	                output = (this - that) / 36e5;
	                break; // 1000 * 60 * 60
	            case 'day':
	                output = (this - that - zoneDelta) / 864e5;
	                break; // 1000 * 60 * 60 * 24, negate dst
	            case 'week':
	                output = (this - that - zoneDelta) / 6048e5;
	                break; // 1000 * 60 * 60 * 24 * 7, negate dst
	            default:
	                output = this - that;
	        }

	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff(a, b) {
	        if (a.date() < b.date()) {
	            // end-of-month calculations work correct when the start month has more
	            // days than the end month.
	            return -monthDiff(b, a);
	        }
	        // difference in months
	        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2,
	            adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }

	    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	    function toString() {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function toISOString(keepOffset) {
	        if (!this.isValid()) {
	            return null;
	        }
	        var utc = keepOffset !== true,
	            m = utc ? this.clone().utc() : this;
	        if (m.year() < 0 || m.year() > 9999) {
	            return formatMoment(
	                m,
	                utc
	                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
	                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
	            );
	        }
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            if (utc) {
	                return this.toDate().toISOString();
	            } else {
	                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
	                    .toISOString()
	                    .replace('Z', formatMoment(m, 'Z'));
	            }
	        }
	        return formatMoment(
	            m,
	            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
	        );
	    }

	    /**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */
	    function inspect() {
	        if (!this.isValid()) {
	            return 'moment.invalid(/* ' + this._i + ' */)';
	        }
	        var func = 'moment',
	            zone = '',
	            prefix,
	            year,
	            datetime,
	            suffix;
	        if (!this.isLocal()) {
	            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	            zone = 'Z';
	        }
	        prefix = '[' + func + '("]';
	        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
	        datetime = '-MM-DD[T]HH:mm:ss.SSS';
	        suffix = zone + '[")]';

	        return this.format(prefix + year + datetime + suffix);
	    }

	    function format(inputString) {
	        if (!inputString) {
	            inputString = this.isUtc()
	                ? hooks.defaultFormatUtc
	                : hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }

	    function from(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ to: this, from: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function fromNow(withoutSuffix) {
	        return this.from(createLocal(), withoutSuffix);
	    }

	    function to(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ from: this, to: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function toNow(withoutSuffix) {
	        return this.to(createLocal(), withoutSuffix);
	    }

	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale(key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData() {
	        return this._locale;
	    }

	    var MS_PER_SECOND = 1000,
	        MS_PER_MINUTE = 60 * MS_PER_SECOND,
	        MS_PER_HOUR = 60 * MS_PER_MINUTE,
	        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

	    // actual modulo - handles negative numbers (for dates before 1970):
	    function mod$1(dividend, divisor) {
	        return ((dividend % divisor) + divisor) % divisor;
	    }

	    function localStartOfDate(y, m, d) {
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return new Date(y, m, d).valueOf();
	        }
	    }

	    function utcStartOfDate(y, m, d) {
	        // Date.UTC remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return Date.UTC(y, m, d);
	        }
	    }

	    function startOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year(), 0, 1);
	                break;
	            case 'quarter':
	                time = startOfDate(
	                    this.year(),
	                    this.month() - (this.month() % 3),
	                    1
	                );
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month(), 1);
	                break;
	            case 'week':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - this.weekday()
	                );
	                break;
	            case 'isoWeek':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - (this.isoWeekday() - 1)
	                );
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date());
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time -= mod$1(
	                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                    MS_PER_HOUR
	                );
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_MINUTE);
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_SECOND);
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function endOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year() + 1, 0, 1) - 1;
	                break;
	            case 'quarter':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month() - (this.month() % 3) + 3,
	                        1
	                    ) - 1;
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
	                break;
	            case 'week':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - this.weekday() + 7
	                    ) - 1;
	                break;
	            case 'isoWeek':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - (this.isoWeekday() - 1) + 7
	                    ) - 1;
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time +=
	                    MS_PER_HOUR -
	                    mod$1(
	                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                        MS_PER_HOUR
	                    ) -
	                    1;
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function valueOf() {
	        return this._d.valueOf() - (this._offset || 0) * 60000;
	    }

	    function unix() {
	        return Math.floor(this.valueOf() / 1000);
	    }

	    function toDate() {
	        return new Date(this.valueOf());
	    }

	    function toArray() {
	        var m = this;
	        return [
	            m.year(),
	            m.month(),
	            m.date(),
	            m.hour(),
	            m.minute(),
	            m.second(),
	            m.millisecond(),
	        ];
	    }

	    function toObject() {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds(),
	        };
	    }

	    function toJSON() {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }

	    function isValid$2() {
	        return isValid(this);
	    }

	    function parsingFlags() {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt() {
	        return getParsingFlags(this).overflow;
	    }

	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict,
	        };
	    }

	    addFormatToken('N', 0, 0, 'eraAbbr');
	    addFormatToken('NN', 0, 0, 'eraAbbr');
	    addFormatToken('NNN', 0, 0, 'eraAbbr');
	    addFormatToken('NNNN', 0, 0, 'eraName');
	    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

	    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
	    addFormatToken('y', ['yy', 2], 0, 'eraYear');
	    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
	    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

	    addRegexToken('N', matchEraAbbr);
	    addRegexToken('NN', matchEraAbbr);
	    addRegexToken('NNN', matchEraAbbr);
	    addRegexToken('NNNN', matchEraName);
	    addRegexToken('NNNNN', matchEraNarrow);

	    addParseToken(
	        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
	        function (input, array, config, token) {
	            var era = config._locale.erasParse(input, token, config._strict);
	            if (era) {
	                getParsingFlags(config).era = era;
	            } else {
	                getParsingFlags(config).invalidEra = input;
	            }
	        }
	    );

	    addRegexToken('y', matchUnsigned);
	    addRegexToken('yy', matchUnsigned);
	    addRegexToken('yyy', matchUnsigned);
	    addRegexToken('yyyy', matchUnsigned);
	    addRegexToken('yo', matchEraYearOrdinal);

	    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
	    addParseToken(['yo'], function (input, array, config, token) {
	        var match;
	        if (config._locale._eraYearOrdinalRegex) {
	            match = input.match(config._locale._eraYearOrdinalRegex);
	        }

	        if (config._locale.eraYearOrdinalParse) {
	            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
	        } else {
	            array[YEAR] = parseInt(input, 10);
	        }
	    });

	    function localeEras(m, format) {
	        var i,
	            l,
	            date,
	            eras = this._eras || getLocale('en')._eras;
	        for (i = 0, l = eras.length; i < l; ++i) {
	            switch (typeof eras[i].since) {
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].since).startOf('day');
	                    eras[i].since = date.valueOf();
	                    break;
	            }

	            switch (typeof eras[i].until) {
	                case 'undefined':
	                    eras[i].until = +Infinity;
	                    break;
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].until).startOf('day').valueOf();
	                    eras[i].until = date.valueOf();
	                    break;
	            }
	        }
	        return eras;
	    }

	    function localeErasParse(eraName, format, strict) {
	        var i,
	            l,
	            eras = this.eras(),
	            name,
	            abbr,
	            narrow;
	        eraName = eraName.toUpperCase();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            name = eras[i].name.toUpperCase();
	            abbr = eras[i].abbr.toUpperCase();
	            narrow = eras[i].narrow.toUpperCase();

	            if (strict) {
	                switch (format) {
	                    case 'N':
	                    case 'NN':
	                    case 'NNN':
	                        if (abbr === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNN':
	                        if (name === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNNN':
	                        if (narrow === eraName) {
	                            return eras[i];
	                        }
	                        break;
	                }
	            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
	                return eras[i];
	            }
	        }
	    }

	    function localeErasConvertYear(era, year) {
	        var dir = era.since <= era.until ? +1 : -1;
	        if (year === undefined) {
	            return hooks(era.since).year();
	        } else {
	            return hooks(era.since).year() + (year - era.offset) * dir;
	        }
	    }

	    function getEraName() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].name;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].name;
	            }
	        }

	        return '';
	    }

	    function getEraNarrow() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].narrow;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].narrow;
	            }
	        }

	        return '';
	    }

	    function getEraAbbr() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].abbr;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].abbr;
	            }
	        }

	        return '';
	    }

	    function getEraYear() {
	        var i,
	            l,
	            dir,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            dir = eras[i].since <= eras[i].until ? +1 : -1;

	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (
	                (eras[i].since <= val && val <= eras[i].until) ||
	                (eras[i].until <= val && val <= eras[i].since)
	            ) {
	                return (
	                    (this.year() - hooks(eras[i].since).year()) * dir +
	                    eras[i].offset
	                );
	            }
	        }

	        return this.year();
	    }

	    function erasNameRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNameRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNameRegex : this._erasRegex;
	    }

	    function erasAbbrRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasAbbrRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasAbbrRegex : this._erasRegex;
	    }

	    function erasNarrowRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNarrowRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNarrowRegex : this._erasRegex;
	    }

	    function matchEraAbbr(isStrict, locale) {
	        return locale.erasAbbrRegex(isStrict);
	    }

	    function matchEraName(isStrict, locale) {
	        return locale.erasNameRegex(isStrict);
	    }

	    function matchEraNarrow(isStrict, locale) {
	        return locale.erasNarrowRegex(isStrict);
	    }

	    function matchEraYearOrdinal(isStrict, locale) {
	        return locale._eraYearOrdinalRegex || matchUnsigned;
	    }

	    function computeErasParse() {
	        var abbrPieces = [],
	            namePieces = [],
	            narrowPieces = [],
	            mixedPieces = [],
	            i,
	            l,
	            eras = this.eras();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            namePieces.push(regexEscape(eras[i].name));
	            abbrPieces.push(regexEscape(eras[i].abbr));
	            narrowPieces.push(regexEscape(eras[i].narrow));

	            mixedPieces.push(regexEscape(eras[i].name));
	            mixedPieces.push(regexEscape(eras[i].abbr));
	            mixedPieces.push(regexEscape(eras[i].narrow));
	        }

	        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
	        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
	        this._erasNarrowRegex = new RegExp(
	            '^(' + narrowPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken(token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg', 'weekYear');
	    addWeekYearFormatToken('ggggg', 'weekYear');
	    addWeekYearFormatToken('GGGG', 'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PRIORITY

	    addUnitPriority('weekYear', 1);
	    addUnitPriority('isoWeekYear', 1);

	    // PARSING

	    addRegexToken('G', matchSigned);
	    addRegexToken('g', matchSigned);
	    addRegexToken('GG', match1to2, match2);
	    addRegexToken('gg', match1to2, match2);
	    addRegexToken('GGGG', match1to4, match4);
	    addRegexToken('gggg', match1to4, match4);
	    addRegexToken('GGGGG', match1to6, match6);
	    addRegexToken('ggggg', match1to6, match6);

	    addWeekParseToken(
	        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
	        function (input, week, config, token) {
	            week[token.substr(0, 2)] = toInt(input);
	        }
	    );

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = hooks.parseTwoDigitYear(input);
	    });

	    // MOMENTS

	    function getSetWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy
	        );
	    }

	    function getSetISOWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.isoWeek(),
	            this.isoWeekday(),
	            1,
	            4
	        );
	    }

	    function getISOWeeksInYear() {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getISOWeeksInISOWeekYear() {
	        return weeksInYear(this.isoWeekYear(), 1, 4);
	    }

	    function getWeeksInYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    function getWeeksInWeekYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
	    }

	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }

	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }

	    // FORMATTING

	    addFormatToken('Q', 0, 'Qo', 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PRIORITY

	    addUnitPriority('quarter', 7);

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter(input) {
	        return input == null
	            ? Math.ceil((this.month() + 1) / 3)
	            : this.month((input - 1) * 3 + (this.month() % 3));
	    }

	    // FORMATTING

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PRIORITY
	    addUnitPriority('date', 9);

	    // PARSING

	    addRegexToken('D', match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        return isStrict
	            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
	            : locale._dayOfMonthOrdinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0]);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    // FORMATTING

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PRIORITY
	    addUnitPriority('dayOfYear', 4);

	    // PARSING

	    addRegexToken('DDD', match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    // MOMENTS

	    function getSetDayOfYear(input) {
	        var dayOfYear =
	            Math.round(
	                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
	            ) + 1;
	        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
	    }

	    // FORMATTING

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PRIORITY

	    addUnitPriority('minute', 14);

	    // PARSING

	    addRegexToken('m', match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    // FORMATTING

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PRIORITY

	    addUnitPriority('second', 15);

	    // PARSING

	    addRegexToken('s', match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    // FORMATTING

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });

	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PRIORITY

	    addUnitPriority('millisecond', 16);

	    // PARSING

	    addRegexToken('S', match1to3, match1);
	    addRegexToken('SS', match1to3, match2);
	    addRegexToken('SSS', match1to3, match3);

	    var token, getSetMillisecond;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }

	    getSetMillisecond = makeGetSet('Milliseconds', false);

	    // FORMATTING

	    addFormatToken('z', 0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr() {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName() {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var proto = Moment.prototype;

	    proto.add = add;
	    proto.calendar = calendar$1;
	    proto.clone = clone;
	    proto.diff = diff;
	    proto.endOf = endOf;
	    proto.format = format;
	    proto.from = from;
	    proto.fromNow = fromNow;
	    proto.to = to;
	    proto.toNow = toNow;
	    proto.get = stringGet;
	    proto.invalidAt = invalidAt;
	    proto.isAfter = isAfter;
	    proto.isBefore = isBefore;
	    proto.isBetween = isBetween;
	    proto.isSame = isSame;
	    proto.isSameOrAfter = isSameOrAfter;
	    proto.isSameOrBefore = isSameOrBefore;
	    proto.isValid = isValid$2;
	    proto.lang = lang;
	    proto.locale = locale;
	    proto.localeData = localeData;
	    proto.max = prototypeMax;
	    proto.min = prototypeMin;
	    proto.parsingFlags = parsingFlags;
	    proto.set = stringSet;
	    proto.startOf = startOf;
	    proto.subtract = subtract;
	    proto.toArray = toArray;
	    proto.toObject = toObject;
	    proto.toDate = toDate;
	    proto.toISOString = toISOString;
	    proto.inspect = inspect;
	    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
	        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
	            return 'Moment<' + this.format() + '>';
	        };
	    }
	    proto.toJSON = toJSON;
	    proto.toString = toString;
	    proto.unix = unix;
	    proto.valueOf = valueOf;
	    proto.creationData = creationData;
	    proto.eraName = getEraName;
	    proto.eraNarrow = getEraNarrow;
	    proto.eraAbbr = getEraAbbr;
	    proto.eraYear = getEraYear;
	    proto.year = getSetYear;
	    proto.isLeapYear = getIsLeapYear;
	    proto.weekYear = getSetWeekYear;
	    proto.isoWeekYear = getSetISOWeekYear;
	    proto.quarter = proto.quarters = getSetQuarter;
	    proto.month = getSetMonth;
	    proto.daysInMonth = getDaysInMonth;
	    proto.week = proto.weeks = getSetWeek;
	    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
	    proto.weeksInYear = getWeeksInYear;
	    proto.weeksInWeekYear = getWeeksInWeekYear;
	    proto.isoWeeksInYear = getISOWeeksInYear;
	    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
	    proto.date = getSetDayOfMonth;
	    proto.day = proto.days = getSetDayOfWeek;
	    proto.weekday = getSetLocaleDayOfWeek;
	    proto.isoWeekday = getSetISODayOfWeek;
	    proto.dayOfYear = getSetDayOfYear;
	    proto.hour = proto.hours = getSetHour;
	    proto.minute = proto.minutes = getSetMinute;
	    proto.second = proto.seconds = getSetSecond;
	    proto.millisecond = proto.milliseconds = getSetMillisecond;
	    proto.utcOffset = getSetOffset;
	    proto.utc = setOffsetToUTC;
	    proto.local = setOffsetToLocal;
	    proto.parseZone = setOffsetToParsedOffset;
	    proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    proto.isDST = isDaylightSavingTime;
	    proto.isLocal = isLocal;
	    proto.isUtcOffset = isUtcOffset;
	    proto.isUtc = isUtc;
	    proto.isUTC = isUtc;
	    proto.zoneAbbr = getZoneAbbr;
	    proto.zoneName = getZoneName;
	    proto.dates = deprecate(
	        'dates accessor is deprecated. Use date instead.',
	        getSetDayOfMonth
	    );
	    proto.months = deprecate(
	        'months accessor is deprecated. Use month instead',
	        getSetMonth
	    );
	    proto.years = deprecate(
	        'years accessor is deprecated. Use year instead',
	        getSetYear
	    );
	    proto.zone = deprecate(
	        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
	        getSetZone
	    );
	    proto.isDSTShifted = deprecate(
	        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
	        isDaylightSavingTimeShifted
	    );

	    function createUnix(input) {
	        return createLocal(input * 1000);
	    }

	    function createInZone() {
	        return createLocal.apply(null, arguments).parseZone();
	    }

	    function preParsePostFormat(string) {
	        return string;
	    }

	    var proto$1 = Locale.prototype;

	    proto$1.calendar = calendar;
	    proto$1.longDateFormat = longDateFormat;
	    proto$1.invalidDate = invalidDate;
	    proto$1.ordinal = ordinal;
	    proto$1.preparse = preParsePostFormat;
	    proto$1.postformat = preParsePostFormat;
	    proto$1.relativeTime = relativeTime;
	    proto$1.pastFuture = pastFuture;
	    proto$1.set = set;
	    proto$1.eras = localeEras;
	    proto$1.erasParse = localeErasParse;
	    proto$1.erasConvertYear = localeErasConvertYear;
	    proto$1.erasAbbrRegex = erasAbbrRegex;
	    proto$1.erasNameRegex = erasNameRegex;
	    proto$1.erasNarrowRegex = erasNarrowRegex;

	    proto$1.months = localeMonths;
	    proto$1.monthsShort = localeMonthsShort;
	    proto$1.monthsParse = localeMonthsParse;
	    proto$1.monthsRegex = monthsRegex;
	    proto$1.monthsShortRegex = monthsShortRegex;
	    proto$1.week = localeWeek;
	    proto$1.firstDayOfYear = localeFirstDayOfYear;
	    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

	    proto$1.weekdays = localeWeekdays;
	    proto$1.weekdaysMin = localeWeekdaysMin;
	    proto$1.weekdaysShort = localeWeekdaysShort;
	    proto$1.weekdaysParse = localeWeekdaysParse;

	    proto$1.weekdaysRegex = weekdaysRegex;
	    proto$1.weekdaysShortRegex = weekdaysShortRegex;
	    proto$1.weekdaysMinRegex = weekdaysMinRegex;

	    proto$1.isPM = localeIsPM;
	    proto$1.meridiem = localeMeridiem;

	    function get$1(format, index, field, setter) {
	        var locale = getLocale(),
	            utc = createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function listMonthsImpl(format, index, field) {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return get$1(format, index, field, 'month');
	        }

	        var i,
	            out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = get$1(format, i, field, 'month');
	        }
	        return out;
	    }

	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl(localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;

	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        }

	        var locale = getLocale(),
	            shift = localeSorted ? locale._week.dow : 0,
	            i,
	            out = [];

	        if (index != null) {
	            return get$1(format, (index + shift) % 7, field, 'day');
	        }

	        for (i = 0; i < 7; i++) {
	            out[i] = get$1(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }

	    function listMonths(format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }

	    function listMonthsShort(format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }

	    function listWeekdays(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }

	    function listWeekdaysShort(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }

	    function listWeekdaysMin(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }

	    getSetGlobalLocale('en', {
	        eras: [
	            {
	                since: '0001-01-01',
	                until: +Infinity,
	                offset: 1,
	                name: 'Anno Domini',
	                narrow: 'AD',
	                abbr: 'AD',
	            },
	            {
	                since: '0000-12-31',
	                until: -Infinity,
	                offset: 1,
	                name: 'Before Christ',
	                narrow: 'BC',
	                abbr: 'BC',
	            },
	        ],
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal: function (number) {
	            var b = number % 10,
	                output =
	                    toInt((number % 100) / 10) === 1
	                        ? 'th'
	                        : b === 1
	                        ? 'st'
	                        : b === 2
	                        ? 'nd'
	                        : b === 3
	                        ? 'rd'
	                        : 'th';
	            return number + output;
	        },
	    });

	    // Side effect imports

	    hooks.lang = deprecate(
	        'moment.lang is deprecated. Use moment.locale instead.',
	        getSetGlobalLocale
	    );
	    hooks.langData = deprecate(
	        'moment.langData is deprecated. Use moment.localeData instead.',
	        getLocale
	    );

	    var mathAbs = Math.abs;

	    function abs() {
	        var data = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days = mathAbs(this._days);
	        this._months = mathAbs(this._months);

	        data.milliseconds = mathAbs(data.milliseconds);
	        data.seconds = mathAbs(data.seconds);
	        data.minutes = mathAbs(data.minutes);
	        data.hours = mathAbs(data.hours);
	        data.months = mathAbs(data.months);
	        data.years = mathAbs(data.years);

	        return this;
	    }

	    function addSubtract$1(duration, input, value, direction) {
	        var other = createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days += direction * other._days;
	        duration._months += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function add$1(input, value) {
	        return addSubtract$1(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function subtract$1(input, value) {
	        return addSubtract$1(this, input, value, -1);
	    }

	    function absCeil(number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble() {
	        var milliseconds = this._milliseconds,
	            days = this._days,
	            months = this._months,
	            data = this._data,
	            seconds,
	            minutes,
	            hours,
	            years,
	            monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (
	            !(
	                (milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0)
	            )
	        ) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds = absFloor(milliseconds / 1000);
	        data.seconds = seconds % 60;

	        minutes = absFloor(seconds / 60);
	        data.minutes = minutes % 60;

	        hours = absFloor(minutes / 60);
	        data.hours = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days = days;
	        data.months = months;
	        data.years = years;

	        return this;
	    }

	    function daysToMonths(days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return (days * 4800) / 146097;
	    }

	    function monthsToDays(months) {
	        // the reverse of daysToMonths
	        return (months * 146097) / 4800;
	    }

	    function as(units) {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        var days,
	            months,
	            milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'quarter' || units === 'year') {
	            days = this._days + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            switch (units) {
	                case 'month':
	                    return months;
	                case 'quarter':
	                    return months / 3;
	                case 'year':
	                    return months / 12;
	            }
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week':
	                    return days / 7 + milliseconds / 6048e5;
	                case 'day':
	                    return days + milliseconds / 864e5;
	                case 'hour':
	                    return days * 24 + milliseconds / 36e5;
	                case 'minute':
	                    return days * 1440 + milliseconds / 6e4;
	                case 'second':
	                    return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond':
	                    return Math.floor(days * 864e5) + milliseconds;
	                default:
	                    throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function valueOf$1() {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs(alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms'),
	        asSeconds = makeAs('s'),
	        asMinutes = makeAs('m'),
	        asHours = makeAs('h'),
	        asDays = makeAs('d'),
	        asWeeks = makeAs('w'),
	        asMonths = makeAs('M'),
	        asQuarters = makeAs('Q'),
	        asYears = makeAs('y');

	    function clone$1() {
	        return createDuration(this);
	    }

	    function get$2(units) {
	        units = normalizeUnits(units);
	        return this.isValid() ? this[units + 's']() : NaN;
	    }

	    function makeGetter(name) {
	        return function () {
	            return this.isValid() ? this._data[name] : NaN;
	        };
	    }

	    var milliseconds = makeGetter('milliseconds'),
	        seconds = makeGetter('seconds'),
	        minutes = makeGetter('minutes'),
	        hours = makeGetter('hours'),
	        days = makeGetter('days'),
	        months = makeGetter('months'),
	        years = makeGetter('years');

	    function weeks() {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round,
	        thresholds = {
	            ss: 44, // a few seconds to seconds
	            s: 45, // seconds to minute
	            m: 45, // minutes to hour
	            h: 22, // hours to day
	            d: 26, // days to month/week
	            w: null, // weeks to month
	            M: 11, // months to year
	        };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
	        var duration = createDuration(posNegDuration).abs(),
	            seconds = round(duration.as('s')),
	            minutes = round(duration.as('m')),
	            hours = round(duration.as('h')),
	            days = round(duration.as('d')),
	            months = round(duration.as('M')),
	            weeks = round(duration.as('w')),
	            years = round(duration.as('y')),
	            a =
	                (seconds <= thresholds.ss && ['s', seconds]) ||
	                (seconds < thresholds.s && ['ss', seconds]) ||
	                (minutes <= 1 && ['m']) ||
	                (minutes < thresholds.m && ['mm', minutes]) ||
	                (hours <= 1 && ['h']) ||
	                (hours < thresholds.h && ['hh', hours]) ||
	                (days <= 1 && ['d']) ||
	                (days < thresholds.d && ['dd', days]);

	        if (thresholds.w != null) {
	            a =
	                a ||
	                (weeks <= 1 && ['w']) ||
	                (weeks < thresholds.w && ['ww', weeks]);
	        }
	        a = a ||
	            (months <= 1 && ['M']) ||
	            (months < thresholds.M && ['MM', months]) ||
	            (years <= 1 && ['y']) || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set the rounding function for relative time strings
	    function getSetRelativeTimeRounding(roundingFunction) {
	        if (roundingFunction === undefined) {
	            return round;
	        }
	        if (typeof roundingFunction === 'function') {
	            round = roundingFunction;
	            return true;
	        }
	        return false;
	    }

	    // This function allows you to set a threshold for relative time strings
	    function getSetRelativeTimeThreshold(threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        if (threshold === 's') {
	            thresholds.ss = limit - 1;
	        }
	        return true;
	    }

	    function humanize(argWithSuffix, argThresholds) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var withSuffix = false,
	            th = thresholds,
	            locale,
	            output;

	        if (typeof argWithSuffix === 'object') {
	            argThresholds = argWithSuffix;
	            argWithSuffix = false;
	        }
	        if (typeof argWithSuffix === 'boolean') {
	            withSuffix = argWithSuffix;
	        }
	        if (typeof argThresholds === 'object') {
	            th = Object.assign({}, thresholds, argThresholds);
	            if (argThresholds.s != null && argThresholds.ss == null) {
	                th.ss = argThresholds.s - 1;
	            }
	        }

	        locale = this.localeData();
	        output = relativeTime$1(this, !withSuffix, th, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var abs$1 = Math.abs;

	    function sign(x) {
	        return (x > 0) - (x < 0) || +x;
	    }

	    function toISOString$1() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var seconds = abs$1(this._milliseconds) / 1000,
	            days = abs$1(this._days),
	            months = abs$1(this._months),
	            minutes,
	            hours,
	            years,
	            s,
	            total = this.asSeconds(),
	            totalSign,
	            ymSign,
	            daysSign,
	            hmsSign;

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes = absFloor(seconds / 60);
	        hours = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

	        totalSign = total < 0 ? '-' : '';
	        ymSign = sign(this._months) !== sign(total) ? '-' : '';
	        daysSign = sign(this._days) !== sign(total) ? '-' : '';
	        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

	        return (
	            totalSign +
	            'P' +
	            (years ? ymSign + years + 'Y' : '') +
	            (months ? ymSign + months + 'M' : '') +
	            (days ? daysSign + days + 'D' : '') +
	            (hours || minutes || seconds ? 'T' : '') +
	            (hours ? hmsSign + hours + 'H' : '') +
	            (minutes ? hmsSign + minutes + 'M' : '') +
	            (seconds ? hmsSign + s + 'S' : '')
	        );
	    }

	    var proto$2 = Duration.prototype;

	    proto$2.isValid = isValid$1;
	    proto$2.abs = abs;
	    proto$2.add = add$1;
	    proto$2.subtract = subtract$1;
	    proto$2.as = as;
	    proto$2.asMilliseconds = asMilliseconds;
	    proto$2.asSeconds = asSeconds;
	    proto$2.asMinutes = asMinutes;
	    proto$2.asHours = asHours;
	    proto$2.asDays = asDays;
	    proto$2.asWeeks = asWeeks;
	    proto$2.asMonths = asMonths;
	    proto$2.asQuarters = asQuarters;
	    proto$2.asYears = asYears;
	    proto$2.valueOf = valueOf$1;
	    proto$2._bubble = bubble;
	    proto$2.clone = clone$1;
	    proto$2.get = get$2;
	    proto$2.milliseconds = milliseconds;
	    proto$2.seconds = seconds;
	    proto$2.minutes = minutes;
	    proto$2.hours = hours;
	    proto$2.days = days;
	    proto$2.weeks = weeks;
	    proto$2.months = months;
	    proto$2.years = years;
	    proto$2.humanize = humanize;
	    proto$2.toISOString = toISOString$1;
	    proto$2.toString = toISOString$1;
	    proto$2.toJSON = toISOString$1;
	    proto$2.locale = locale;
	    proto$2.localeData = localeData;

	    proto$2.toIsoString = deprecate(
	        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
	        toISOString$1
	    );
	    proto$2.lang = lang;

	    // FORMATTING

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    //! moment.js

	    hooks.version = '2.29.4';

	    setHookCallback(createLocal);

	    hooks.fn = proto;
	    hooks.min = min;
	    hooks.max = max;
	    hooks.now = now;
	    hooks.utc = createUTC;
	    hooks.unix = createUnix;
	    hooks.months = listMonths;
	    hooks.isDate = isDate;
	    hooks.locale = getSetGlobalLocale;
	    hooks.invalid = createInvalid;
	    hooks.duration = createDuration;
	    hooks.isMoment = isMoment;
	    hooks.weekdays = listWeekdays;
	    hooks.parseZone = createInZone;
	    hooks.localeData = getLocale;
	    hooks.isDuration = isDuration;
	    hooks.monthsShort = listMonthsShort;
	    hooks.weekdaysMin = listWeekdaysMin;
	    hooks.defineLocale = defineLocale;
	    hooks.updateLocale = updateLocale;
	    hooks.locales = listLocales;
	    hooks.weekdaysShort = listWeekdaysShort;
	    hooks.normalizeUnits = normalizeUnits;
	    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
	    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	    hooks.calendarFormat = getCalendarFormat;
	    hooks.prototype = proto;

	    // currently HTML5 input type only supports 24-hour formats
	    hooks.HTML5_FMT = {
	        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
	        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
	        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
	        DATE: 'YYYY-MM-DD', // <input type="date" />
	        TIME: 'HH:mm', // <input type="time" />
	        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
	        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
	        WEEK: 'GGGG-[W]WW', // <input type="week" />
	        MONTH: 'YYYY-MM', // <input type="month" />
	    };

	    return hooks;

	}))); 
} (moment$1));

var momentExports = moment$1.exports;

// --- src/lang/en.ts ---
// English translations (default)
var en = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Settings",
    SETTINGS_FOLDER_TITLE: "Python Scripts Folder",
    SETTINGS_FOLDER_DESC: "Path to the folder containing your Python scripts (absolute or relative to the vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts or ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP Server Port",
    SETTINGS_PORT_DESC: "Port for the local HTTP server (1024-65535). Requires restart or settings save to apply.",
    SETTINGS_CACHE_TITLE: "Disable Python Cache (__pycache__)",
    SETTINGS_CACHE_DESC: 'Run Python with the "-B" flag to prevent writing .pyc files.',
    // SETTINGS_AUTO_PYTHONPATH_NAME: "Auto-set PYTHONPATH for Library", // <-- REMOVED FROM HERE
    // SETTINGS_AUTO_PYTHONPATH_DESC: "...", // <-- REMOVED FROM HERE
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge", // Added for prefixing notices
    NOTICE_PORT_CHANGED_PREFIX: "HTTP port changed to",
    NOTICE_PORT_CHANGED_SUFFIX: "Restarting server...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Error:",
    NOTICE_PYTHON_MISSING_DESC: "Python executable not found in PATH.\nPlease install Python and ensure it's added to your system's PATH environment variable for the plugin to run scripts.\nPlugin features requiring Python will be unavailable.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Error:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "The required Python library 'requests' is not installed for", // {pythonCmd} will be inserted here
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nPlease install it by running:\n{pythonCmd} -m pip install requests\nPlugin features requiring Python will be unavailable until installed.", // {pythonCmd} will be inserted here
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Invalid HTTP port configured:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server not started. Please configure a valid port (1-65535) in settings.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "is already in use. Please choose another port in settings or close the other application using it. Server not started.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Failed to start server on port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".", // Original message had error details appended after this
    NOTICE_INVALID_PORT_RANGE: "Invalid port. Please enter a number between 0 and 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP Port changed (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Script might target the old port if already running or launched externally.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python script not found or is not a file:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Error accessing script file:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Running Python script:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Error running",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "with",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "failed with exit code",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Check console logs.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Could not find a valid Python executable. Tried:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Please ensure Python is installed and accessible via your system's PATH (or the 'py' launcher on Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python scripts folder not found or invalid. Please check plugin settings.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Error reading scripts folder:",
    NOTICE_NO_SCRIPTS_FOUND: "No Python scripts (.py) found in the configured folder.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Running",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python script(s)...",
    NOTICE_INPUT_VALIDATION_FAILED: "Input does not match the required format.", // Added for UserInputModal
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Run a specific Python script",
    CMD_RUN_ALL_SCRIPTS_NAME: "Run all Python scripts in folder",
    // UserInputModal
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Submit",
    // ScriptSelectionModal (Placeholder - if needed later)
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Select a Python script to run...",
    // MODAL_SELECT_SCRIPT_PLACEHOLDER: "Select a Python script to run...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Script-Specific Settings",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Refresh Script Settings",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Rescan the scripts folder to discover or update settings defined within your Python scripts.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Refresh Definitions",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Refreshing...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python scripts folder is not configured. Please set the path above.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "No scripts with definable settings found in the configured folder, or settings discovery failed. Click 'Refresh Definitions' to try again.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Settings for:",
    SETTINGS_LANGUAGE_AUTO: "Automatic (Match Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Cannot refresh settings: Python executable not found. Please ensure Python is installed and in PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Refreshing script settings definitions...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Script settings definitions refreshed successfully!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Failed to refresh script settings definitions. Check logs for details.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Cannot run script: Python executable not found. Please check installation and PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Refresh Python script settings definitions",
    SETTINGS_SECURITY_WARNING_TITLE: "Security Warning",
    SETTINGS_SECURITY_WARNING_TEXT: "Executing arbitrary Python scripts can be risky. Ensure you trust the source of any script you run, as they can access your system and data. The plugin author and script authors are not responsible for any data loss or security issues caused by scripts you choose to execute. Run scripts at your own risk.",
    SETTINGS_LANGUAGE_TITLE: "Plugin Language",
    SETTINGS_LANGUAGE_DESC: "Choose the display language for the Python Bridge plugin interface. 'Automatic' follows Obsidian's language setting.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Performance Tip: Backlink Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "For improved performance when retrieving backlinks (using the get_backlinks function) in large vaults, consider installing the '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' community plugin by @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Invalid folder path. Please select a valid folder in settings.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Configured Python scripts folder path '{path}' is invalid or not found. Clearing setting.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Enabled",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Allow this script to be executed via commands, shortcuts, or 'Run All'.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Run on Startup",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Automatically run this script when Obsidian starts (only if 'Script Enabled' is also on).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Startup Delay (seconds)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Wait this many seconds after Obsidian starts before running the script (only applies if 'Run on Startup' is on). Use 0 for no delay.",
    NOTICE_SCRIPT_DISABLED: "Script '{scriptName}' is disabled in settings and cannot be executed.",
    // --- ADDED KEYS AT THE END ---
    SETTINGS_AUTO_PYTHONPATH_NAME: "Auto-set PYTHONPATH for Library",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Automatically add the plugin directory to PYTHONPATH when running scripts, allowing direct import of the Python library (Recommended). If disabled, you must copy ObsidianPluginDevPythonToJS.py to your scripts folder or manage sys.path manually.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatic PYTHONPATH disabled. Ensure ObsidianPluginDevPythonToJS.py is in your script folder or manage sys.path manually.",
};

// --- src/lang/fr.ts ---
// French translations
var fr = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Réglages",
    SETTINGS_FOLDER_TITLE: "Dossier des Scripts Python",
    SETTINGS_FOLDER_DESC: "Chemin vers le dossier contenant vos scripts Python (absolu ou relatif au coffre).",
    SETTINGS_FOLDER_PLACEHOLDER: "/chemin/vers/vos/scripts ou ./scripts-python",
    SETTINGS_PORT_TITLE: "Port du Serveur HTTP",
    SETTINGS_PORT_DESC: "Port pour le serveur HTTP local (1024-65535). Nécessite un redémarrage ou une sauvegarde des réglages pour appliquer.",
    SETTINGS_CACHE_TITLE: "Désactiver le Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Exécute Python avec l\'option "-B" pour empêcher l\'écriture des fichiers .pyc.',
    // SETTINGS_AUTO_PYTHONPATH_NAME: "Définir PYTHONPATH pour la Librairie", // <-- REMOVED FROM HERE
    // SETTINGS_AUTO_PYTHONPATH_DESC: "...", // <-- REMOVED FROM HERE
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Port HTTP changé vers",
    NOTICE_PORT_CHANGED_SUFFIX: "Redémarrage du serveur...",
    NOTICE_PYTHON_MISSING_TITLE: "Erreur Python Bridge :",
    NOTICE_PYTHON_MISSING_DESC: "Exécutable Python introuvable dans le PATH.\nVeuillez installer Python et vous assurer qu'il est ajouté à la variable d'environnement PATH de votre système pour que le plugin puisse exécuter des scripts.\nLes fonctionnalités du plugin nécessitant Python seront indisponibles.",
    NOTICE_REQUESTS_MISSING_TITLE: "Erreur Python Bridge :",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "La librairie Python requise 'requests' n'est pas installée pour",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nVeuillez l'installer en exécutant :\n{pythonCmd} -m pip install requests\nLes fonctionnalités du plugin nécessitant Python seront indisponibles jusqu'à son installation.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Port HTTP configuré invalide :",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Serveur non démarré. Veuillez configurer un port valide (1-65535) dans les réglages.",
    NOTICE_PORT_IN_USE_PREFIX: "Le port",
    NOTICE_PORT_IN_USE_SUFFIX: "est déjà utilisé. Veuillez choisir un autre port dans les réglages ou fermer l'autre application l'utilisant. Serveur non démarré.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Échec du démarrage du serveur sur le port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Port invalide. Veuillez entrer un nombre entre 0 et 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge : Port HTTP changé (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Le script pourrait cibler l'ancien port s'il est déjà en cours d'exécution ou lancé extérieurement.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Script Python introuvable ou n'est pas un fichier :",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Erreur d'accès au fichier de script :",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Exécution du script Python :",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Erreur lors de l'exécution de",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "avec",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "a échoué avec le code de sortie",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Vérifiez les logs de la console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Impossible de trouver un exécutable Python valide. Essai :",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Veuillez vous assurer que Python est installé et accessible via le PATH de votre système (ou le lanceur 'py' sous Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Dossier des scripts Python introuvable ou invalide. Veuillez vérifier les réglages du plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Erreur de lecture du dossier des scripts :",
    NOTICE_NO_SCRIPTS_FOUND: "Aucun script Python (.py) trouvé dans le dossier configuré.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Exécution de",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script(s) Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "L'entrée ne correspond pas au format requis.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Exécuter un script Python spécifique",
    CMD_RUN_ALL_SCRIPTS_NAME: "Exécuter tous les scripts Python du dossier",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Sélectionnez un script Python à exécuter...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Valider",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Paramètres Spécifiques aux Scripts",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Rafraîchir les Paramètres des Scripts",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Réanalyser le dossier des scripts pour découvrir ou mettre à jour les paramètres définis dans vos scripts Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Rafraîchir les Définitions",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Rafraîchissement...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Dossier des scripts Python non configuré. Veuillez définir le chemin ci-dessus.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Aucun script avec des paramètres définissables trouvé dans le dossier configuré, ou la découverte a échoué. Cliquez sur 'Rafraîchir les Définitions' pour réessayer.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Paramètres pour :",
    SETTINGS_LANGUAGE_AUTO: "Automatique (Comme Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Impossible de rafraîchir : Exécutable Python introuvable. Assurez-vous que Python est installé et dans le PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Rafraîchissement des définitions de paramètres des scripts...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Définitions des paramètres des scripts rafraîchies avec succès !",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Échec du rafraîchissement des définitions de paramètres des scripts. Vérifiez les logs.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Impossible d'exécuter le script : Exécutable Python introuvable. Vérifiez l'installation et le PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Rafraîchir les définitions des paramètres des scripts Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Avertissement de Sécurité",
    SETTINGS_SECURITY_WARNING_TEXT: "L'exécution de scripts Python arbitraires peut être risquée. Assurez-vous de faire confiance à la source de tout script que vous exécutez, car ils peuvent accéder à votre système et à vos données. L'auteur du plugin et les auteurs des scripts ne sont pas responsables des pertes de données ou des problèmes de sécurité causés par les scripts que vous choisissez d'exécuter. Exécutez les scripts à vos propres risques.",
    SETTINGS_LANGUAGE_TITLE: "Langue du Plugin",
    SETTINGS_LANGUAGE_DESC: "Choisissez la langue d'affichage pour l'interface du plugin Python Bridge. 'Automatique' suit le réglage de langue d'Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Conseil Performance : Cache de Backlinks",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Pour des performances améliorées lors de la récupération des backlinks (via la fonction get_backlinks) dans les grands coffres, envisagez d'installer l'extension communautaire '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' de @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Chemin de dossier invalide. Veuillez sélectionner un dossier valide dans les réglages.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Le chemin configuré pour le dossier des scripts Python '{path}' est invalide ou introuvable. Effacement du réglage.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Activé",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Permet l'exécution de ce script via les commandes, les raccourcis ou 'Exécuter Tout'.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Exécuter au Démarrage",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Exécute automatiquement ce script au démarrage d'Obsidian (seulement si 'Script Activé' est aussi coché).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Délai au Démarrage (secondes)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Attendre ce nombre de secondes après le démarrage d'Obsidian avant d'exécuter le script (s'applique seulement si 'Exécuter au Démarrage' est coché). Utilisez 0 pour aucun délai.",
    NOTICE_SCRIPT_DISABLED: "Le script '{scriptName}' est désactivé dans les paramètres et ne peut pas être exécuté.",
    // --- ADDED KEYS AT THE END ---
    SETTINGS_AUTO_PYTHONPATH_NAME: "Définir PYTHONPATH pour la Librairie",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Ajouter automatiquement le dossier du plugin à PYTHONPATH lors de l'exécution des scripts, permettant l'import direct de la librairie Python (Recommandé). Si désactivé, vous devez copier ObsidianPluginDevPythonToJS.py dans votre dossier de scripts ou gérer sys.path manuellement.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automatique désactivé. Assurez-vous que ObsidianPluginDevPythonToJS.py est dans votre dossier de scripts ou gérez sys.path manuellement.",
};

// --- src/lang/es.ts ---
// Spanish translations
var es = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Configuración de Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Carpeta de Scripts de Python",
    SETTINGS_FOLDER_DESC: "Ruta a la carpeta que contiene tus scripts de Python (absoluta o relativa a la bóveda).",
    SETTINGS_FOLDER_PLACEHOLDER: "/ruta/a/tus/scripts o ./scripts-python",
    SETTINGS_PORT_TITLE: "Puerto del Servidor HTTP",
    SETTINGS_PORT_DESC: "Puerto para el servidor HTTP local (1024-65535). Requiere reiniciar o guardar la configuración para aplicar.",
    SETTINGS_CACHE_TITLE: "Desactivar Caché de Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Ejecuta Python con la opción "-B" para evitar escribir archivos .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Puerto HTTP cambiado a",
    NOTICE_PORT_CHANGED_SUFFIX: "Reiniciando servidor...",
    NOTICE_PYTHON_MISSING_TITLE: "Error de Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Ejecutable de Python no encontrado en el PATH.\nPor favor, instale Python y asegúrese de que esté agregado a la variable de entorno PATH de su sistema para que el plugin pueda ejecutar scripts.\nLas características del plugin que requieren Python no estarán disponibles.",
    NOTICE_REQUESTS_MISSING_TITLE: "Error de Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "La librería Python requerida 'requests' no está instalada para",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nPor favor, instálala ejecutando:\n{pythonCmd} -m pip install requests\nLas características del plugin que requieren Python no estarán disponibles hasta que se instale.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Puerto HTTP configurado inválido:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Servidor no iniciado. Por favor, configure un puerto válido (1-65535) en los ajustes.",
    NOTICE_PORT_IN_USE_PREFIX: "El puerto",
    NOTICE_PORT_IN_USE_SUFFIX: "ya está en uso. Por favor, elija otro puerto en los ajustes o cierre la otra aplicación que lo esté usando. Servidor no iniciado.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Error al iniciar el servidor en el puerto",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Puerto inválido. Por favor, ingrese un número entre 0 y 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Puerto HTTP cambiado (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). El script podría apuntar al puerto antiguo si ya se está ejecutando o se lanzó externamente.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Script de Python no encontrado o no es un archivo:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Error al acceder al archivo del script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Ejecutando script de Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Error al ejecutar",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "con",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "falló con el código de salida",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Revise los logs de la consola.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "No se pudo encontrar un ejecutable de Python válido. Intentado:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Por favor, asegúrese de que Python esté instalado y accesible a través del PATH de su sistema (o el lanzador 'py' en Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Carpeta de scripts de Python no encontrada o inválida. Por favor, revise la configuración del plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Error al leer la carpeta de scripts:",
    NOTICE_NO_SCRIPTS_FOUND: "No se encontraron scripts de Python (.py) en la carpeta configurada.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Ejecutando",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script(s) de Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "La entrada no coincide con el formato requerido.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Ejecutar un script de Python específico",
    CMD_RUN_ALL_SCRIPTS_NAME: "Ejecutar todos los scripts de Python en la carpeta",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Selecciona un script de Python para ejecutar...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Enviar",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Configuración Específica del Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Actualizar Configuración de Scripts",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Vuelve a escanear la carpeta de scripts para descubrir o actualizar la configuración definida en tus scripts de Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Actualizar Definiciones",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Actualizando...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Carpeta de scripts de Python no configurada. Por favor, establece la ruta arriba.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "No se encontraron scripts con configuraciones definibles en la carpeta configurada, o falló el descubrimiento. Haz clic en 'Actualizar Definiciones' para intentarlo de nuevo.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Configuración para:",
    SETTINGS_LANGUAGE_AUTO: "Automático (Como Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "No se puede actualizar: Ejecutable de Python no encontrado. Asegúrate de que Python esté instalado y en el PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Actualizando definiciones de configuración de scripts...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "¡Definiciones de configuración de scripts actualizadas correctamente!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Error al actualizar las definiciones de configuración de scripts. Revisa los logs.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "No se puede ejecutar el script: Ejecutable de Python no encontrado. Revisa la instalación y el PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Actualizar definiciones de configuración de scripts de Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Advertencia de Seguridad",
    SETTINGS_SECURITY_WARNING_TEXT: "Ejecutar scripts de Python arbitrarios puede ser arriesgado. Asegúrate de confiar en la fuente de cualquier script que ejecutes, ya que pueden acceder a tu sistema y datos. El autor del plugin y los autores de los scripts no son responsables de ninguna pérdida de datos o problemas de seguridad causados por los scripts que elijas ejecutar. Ejecuta los scripts bajo tu propio riesgo.",
    SETTINGS_LANGUAGE_TITLE: "Idioma del Plugin",
    SETTINGS_LANGUAGE_DESC: "Elige el idioma de visualización para la interfaz del plugin Python Bridge. 'Automático' sigue la configuración de idioma de Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Consejo de rendimiento: Caché de Backlinks",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Para mejorar el rendimiento al recuperar backlinks (usando la función get_backlinks) en bóvedas grandes, considere instalar el plugin comunitario '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' de @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Ruta de carpeta inválida. Por favor, seleccione una carpeta válida en la configuración.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "La ruta de la carpeta de scripts de Python configurada '{path}' es inválida o no se encuentra. Borrando la configuración.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Habilitado",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Permitir que este script se ejecute mediante comandos, atajos o 'Ejecutar Todo'.",
    NOTICE_SCRIPT_DISABLED: "El script '{scriptName}' está deshabilitado en la configuración y no se puede ejecutar.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Ejecutar al iniciar",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Ejecutar automáticamente este script cuando Obsidian se inicie (solo si 'Script Habilitado' también está activado).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Retraso de inicio (segundos)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Esperar esta cantidad de segundos después de que Obsidian se inicie antes de ejecutar el script (solo se aplica si 'Ejecutar al iniciar' está activado). Use 0 para no tener retraso.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Establecer PYTHONPATH automáticamente para la biblioteca",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Añadir automáticamente el directorio del plugin a PYTHONPATH al ejecutar scripts, permitiendo la importación directa de la biblioteca Python (Recomendado). Si está desactivado, debes copiar ObsidianPluginDevPythonToJS.py a tu carpeta de scripts o gestionar sys.path manualmente.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automático desactivado. Asegúrate de que ObsidianPluginDevPythonToJS.py esté en tu carpeta de scripts o gestiona sys.path manualmente.",
};

// --- src/lang/de.ts ---
// German translations
var de = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Einstellungen",
    SETTINGS_FOLDER_TITLE: "Python-Skript-Ordner",
    SETTINGS_FOLDER_DESC: "Pfad zum Ordner, der Ihre Python-Skripte enthält (absolut oder relativ zum Vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/pfad/zu/ihren/skripten oder ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP-Server-Port",
    SETTINGS_PORT_DESC: "Port für den lokalen HTTP-Server (1024-65535). Erfordert Neustart oder Speichern der Einstellungen zum Anwenden.",
    SETTINGS_CACHE_TITLE: "Python-Cache deaktivieren (__pycache__)",
    SETTINGS_CACHE_DESC: 'Führt Python mit der Option "-B" aus, um das Schreiben von .pyc-Dateien zu verhindern.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP-Port geändert zu",
    NOTICE_PORT_CHANGED_SUFFIX: "Server wird neu gestartet...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Fehler:",
    NOTICE_PYTHON_MISSING_DESC: "Python-Ausführungsdatei nicht im PATH gefunden.\nBitte installieren Sie Python und stellen Sie sicher, dass es zur PATH-Umgebungsvariable Ihres Systems hinzugefügt wird, damit das Plugin Skripte ausführen kann.\nPlugin-Funktionen, die Python erfordern, sind nicht verfügbar.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Fehler:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Die erforderliche Python-Bibliothek 'requests' ist nicht installiert für",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nBitte installieren Sie sie durch Ausführen von:\n{pythonCmd} -m pip install requests\nPlugin-Funktionen, die Python erfordern, sind bis zur Installation nicht verfügbar.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Ungültiger HTTP-Port konfiguriert:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server nicht gestartet. Bitte konfigurieren Sie einen gültigen Port (1-65535) in den Einstellungen.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "wird bereits verwendet. Bitte wählen Sie einen anderen Port in den Einstellungen oder schließen Sie die andere Anwendung, die ihn verwendet. Server nicht gestartet.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Fehler beim Starten des Servers auf Port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Ungültiger Port. Bitte geben Sie eine Zahl zwischen 0 und 65535 ein.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP-Port geändert (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Das Skript zielt möglicherweise auf den alten Port, wenn es bereits ausgeführt wird oder extern gestartet wurde.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python-Skript nicht gefunden oder ist keine Datei:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Fehler beim Zugriff auf die Skriptdatei:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Führe Python-Skript aus:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Fehler beim Ausführen von",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "mit",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "fehlgeschlagen mit Exit-Code",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Überprüfen Sie die Konsolenprotokolle.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Keine gültige Python-Ausführungsdatei gefunden. Versucht:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Bitte stellen Sie sicher, dass Python installiert und über den PATH Ihres Systems (oder den 'py'-Launcher unter Windows) zugänglich ist.",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python-Skript-Ordner nicht gefunden oder ungültig. Bitte überprüfen Sie die Plugin-Einstellungen.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Fehler beim Lesen des Skript-Ordners:",
    NOTICE_NO_SCRIPTS_FOUND: "Keine Python-Skripte (.py) im konfigurierten Ordner gefunden.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Führe",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python-Skript(e) aus...",
    NOTICE_INPUT_VALIDATION_FAILED: "Die Eingabe entspricht nicht dem erforderlichen Format.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Ein bestimmtes Python-Skript ausführen",
    CMD_RUN_ALL_SCRIPTS_NAME: "Alle Python-Skripte im Ordner ausführen",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Wählen Sie ein Python-Skript zum Ausführen aus...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Senden",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Skriptspezifische Einstellungen",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Skripteinstellungen aktualisieren",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Scannen Sie den Skriptordner erneut, um in Ihren Python-Skripten definierte Einstellungen zu entdecken oder zu aktualisieren.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Definitionen aktualisieren",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Aktualisiere...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python-Skriptordner ist nicht konfiguriert. Bitte geben Sie oben den Pfad an.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Keine Skripte mit definierbaren Einstellungen im konfigurierten Ordner gefunden oder die Erkennung ist fehlgeschlagen. Klicken Sie auf 'Definitionen aktualisieren', um es erneut zu versuchen.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Einstellungen für:",
    SETTINGS_LANGUAGE_AUTO: "Automatisch (Wie Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Aktualisierung nicht möglich: Python-Ausführungsdatei nicht gefunden. Stellen Sie sicher, dass Python installiert und im PATH ist.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Aktualisiere Skripteinstellungsdefinitionen...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Skripteinstellungsdefinitionen erfolgreich aktualisiert!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Fehler beim Aktualisieren der Skripteinstellungsdefinitionen. Überprüfen Sie die Protokolle.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Skript kann nicht ausgeführt werden: Python-Ausführungsdatei nicht gefunden. Überprüfen Sie die Installation und den PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python-Skripteinstellungsdefinitionen aktualisieren",
    SETTINGS_SECURITY_WARNING_TITLE: "Sicherheitswarnung",
    SETTINGS_SECURITY_WARNING_TEXT: "Das Ausführen beliebiger Python-Skripte kann riskant sein. Stellen Sie sicher, dass Sie der Quelle jedes Skripts vertrauen, das Sie ausführen, da diese auf Ihr System und Ihre Daten zugreifen können. Der Autor des Plugins und die Autoren der Skripte sind nicht verantwortlich für Datenverluste oder Sicherheitsprobleme, die durch von Ihnen ausgeführte Skripte verursacht werden. Führen Sie Skripte auf eigenes Risiko aus.",
    SETTINGS_LANGUAGE_TITLE: "Plugin-Sprache",
    SETTINGS_LANGUAGE_DESC: "Wählen Sie die Anzeigesprache für die Benutzeroberfläche des Python Bridge-Plugins. 'Automatisch' folgt der Spracheinstellung von Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Leistungstipp: Backlink-Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Für eine verbesserte Leistung beim Abrufen von Backlinks (mit der Funktion get_backlinks) in großen Vaults sollten Sie die Installation des Community-Plugins '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' von @mnaoumov in Betracht ziehen.",
    NOTICE_INVALID_FOLDER_PATH: "Ungültiger Ordnerpfad. Bitte wählen Sie einen gültigen Ordner in den Einstellungen.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Konfigurierter Python-Skript-Ordnerpfad '{path}' ist ungültig oder nicht gefunden. Einstellung wird gelöscht.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skript Aktiviert",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Erlaube die Ausführung dieses Skripts über Befehle, Tastenkürzel oder 'Alle Ausführen'.",
    NOTICE_SCRIPT_DISABLED: "Skript '{scriptName}' ist in den Einstellungen deaktiviert und kann nicht ausgeführt werden.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Beim Start ausführen",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Dieses Skript automatisch ausführen, wenn Obsidian startet (nur wenn 'Skript aktiviert' ebenfalls eingeschaltet ist).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Startverzögerung (Sekunden)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Warten Sie diese Anzahl von Sekunden nach dem Start von Obsidian, bevor Sie das Skript ausführen (gilt nur, wenn 'Beim Start ausführen' aktiviert ist). Verwenden Sie 0 für keine Verzögerung.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "PYTHONPATH automatisch für Bibliothek setzen",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Fügt das Plugin-Verzeichnis beim Ausführen von Skripten automatisch zu PYTHONPATH hinzu, was den direkten Import der Python-Bibliothek ermöglicht (Empfohlen). Wenn deaktiviert, müssen Sie ObsidianPluginDevPythonToJS.py in Ihren Skriptordner kopieren oder sys.path manuell verwalten.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatisches PYTHONPATH deaktiviert. Stellen Sie sicher, dass sich ObsidianPluginDevPythonToJS.py in Ihrem Skriptordner befindet oder verwalten Sie sys.path manuell.",
};

// --- src/lang/zh.ts ---
// Chinese translations
var zh = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge 设置",
    SETTINGS_FOLDER_TITLE: "Python 脚本文件夹",
    SETTINGS_FOLDER_DESC: "包含 Python 脚本的文件夹路径（绝对路径或相对于仓库的路径）。",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts 或 ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP 服务器端口",
    SETTINGS_PORT_DESC: "本地 HTTP 服务器的端口（1024-65535）。需要重新启动或保存设置才能应用。",
    SETTINGS_CACHE_TITLE: "禁用 Python 缓存 (__pycache__)",
    SETTINGS_CACHE_DESC: "使用“-B”标志运行 Python 以阻止写入 .pyc 文件。",
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP 端口已更改为",
    NOTICE_PORT_CHANGED_SUFFIX: "正在重新启动服务器...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge 错误：",
    NOTICE_PYTHON_MISSING_DESC: "在 PATH 中找不到 Python 可执行文件。\n请安装 Python 并确保将其添加到系统的 PATH 环境变量中，以便插件运行脚本。\n需要 Python 的插件功能将不可用。",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge 错误：",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "所需的 Python 库 'requests' 未为",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "安装。\n请通过运行以下命令安装：\n{pythonCmd} -m pip install requests\n在安装之前，需要 Python 的插件功能将不可用。",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "配置的 HTTP 端口无效：",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "服务器未启动。请在设置中配置一个有效的端口（1-65535）。",
    NOTICE_PORT_IN_USE_PREFIX: "端口",
    NOTICE_PORT_IN_USE_SUFFIX: "已被占用。请在设置中选择另一个端口或关闭使用该端口的其他应用程序。服务器未启动。",
    NOTICE_SERVER_START_FAILED_PREFIX: "在端口上启动服务器失败",
    NOTICE_SERVER_START_FAILED_SUFFIX: "。",
    NOTICE_INVALID_PORT_RANGE: "端口无效。请输入 0 到 65535 之间的数字。",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge：HTTP 端口已更改（",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "）。如果脚本已在运行或从外部启动，它可能会指向旧端口。",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "找不到 Python 脚本或不是文件：",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "访问脚本文件时出错：",
    NOTICE_RUNNING_SCRIPT_PREFIX: "正在运行 Python 脚本：",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "运行",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "时出错，使用",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "失败，退出代码为",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "请检查控制台日志。",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "找不到有效的 Python 可执行文件。已尝试：",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "请确保已安装 Python 并且可以通过系统 PATH（或 Windows 上的 'py' 启动器）访问。",
    NOTICE_SCRIPTS_FOLDER_INVALID: "找不到 Python 脚本文件夹或无效。请检查插件设置。",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "读取脚本文件夹时出错：",
    NOTICE_NO_SCRIPTS_FOUND: "在配置的文件夹中找不到 Python 脚本 (.py)。",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "正在运行",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "个 Python 脚本...",
    NOTICE_INPUT_VALIDATION_FAILED: "输入不符合要求的格式。",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "运行特定的 Python 脚本",
    CMD_RUN_ALL_SCRIPTS_NAME: "运行文件夹中的所有 Python 脚本",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "请选择要运行的 Python 脚本...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "提交",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "脚本特定设置",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "刷新脚本设置",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "重新扫描脚本文件夹以发现或更新 Python 脚本中定义的设置。",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "刷新定义",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "正在刷新...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "未配置 Python 脚本文件夹。请在上方设置路径。",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "在配置的文件夹中找不到具有可定义设置的脚本，或者设置发现失败。单击“刷新定义”重试。",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "设置：",
    SETTINGS_LANGUAGE_AUTO: "自动 (匹配 Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "无法刷新设置：未找到 Python 可执行文件。请确保已安装 Python 并将其添加到 PATH。",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "正在刷新脚本设置定义...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "脚本设置定义刷新成功！",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "刷新脚本设置定义失败。请检查日志。",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "无法运行脚本：未找到 Python 可执行文件。请检查安装和 PATH。",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "刷新 Python 脚本设置定义",
    SETTINGS_SECURITY_WARNING_TITLE: "安全警告",
    SETTINGS_SECURITY_WARNING_TEXT: "执行任意 Python 脚本可能存在风险。请确保您信任所运行脚本的来源，因为它们可以访问您的系统和数据。插件作者和脚本作者对您选择执行的脚本造成的任何数据丢失或安全问题概不负责。运行脚本需自担风险。",
    SETTINGS_LANGUAGE_TITLE: "插件语言",
    SETTINGS_LANGUAGE_DESC: "选择 Python Bridge 插件界面的显示语言。“自动”将遵循 Obsidian 的语言设置。",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "性能提示：反向链接缓存",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "为了在大型库中检索反向链接（使用 get_backlinks 函数）时提高性能，请考虑安装由 @mnaoumov 开发的“[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)”社区插件。",
    NOTICE_INVALID_FOLDER_PATH: "文件夹路径无效。请在设置中选择一个有效的文件夹。",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "配置的 Python 脚本文件夹路径 '{path}' 无效或找不到。正在清除设置。",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "脚本已启用",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "允许通过命令、快捷键或“全部运行”执行此脚本。",
    NOTICE_SCRIPT_DISABLED: "脚本“{scriptName}”在设置中被禁用，无法执行。",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "启动时运行",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidian 启动时自动运行此脚本（仅当“脚本已启用”也开启时）。",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "启动延迟（秒）",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian 启动后等待这么多秒再运行脚本（仅当“启动时运行”开启时适用）。使用 0 表示无延迟。",
    SETTINGS_AUTO_PYTHONPATH_NAME: "为库自动设置 PYTHONPATH",
    SETTINGS_AUTO_PYTHONPATH_DESC: "运行脚本时自动将插件目录添加到 PYTHONPATH，允许直接导入 Python 库（推荐）。如果禁用，您必须将 ObsidianPluginDevPythonToJS.py 复制到您的脚本文件夹或手动管理 sys.path。",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "自动 PYTHONPATH 已禁用。请确保 ObsidianPluginDevPythonToJS.py 在您的脚本文件夹中，或手动管理 sys.path。",
};

// --- src/lang/ar.ts ---
// Arabic translations
var ar = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "إعدادات جسر Obsidian Python",
    SETTINGS_FOLDER_TITLE: "مجلد سكربتات بايثون",
    SETTINGS_FOLDER_DESC: "مسار المجلد الذي يحتوي على سكربتات بايثون الخاصة بك (مطلق أو نسبي للمخزن).",
    SETTINGS_FOLDER_PLACEHOLDER: "/مسار/إلى/السكربتات أو ./scripts-python",
    SETTINGS_PORT_TITLE: "منفذ خادم HTTP",
    SETTINGS_PORT_DESC: "المنفذ لخادم HTTP المحلي (1024-65535). يتطلب إعادة التشغيل أو حفظ الإعدادات للتطبيق.",
    SETTINGS_CACHE_TITLE: "تعطيل ذاكرة التخزين المؤقت لبايثون (__pycache__)",
    SETTINGS_CACHE_DESC: 'تشغيل بايثون باستخدام العلامة "-B" لمنع كتابة ملفات .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "جسر بايثون",
    NOTICE_PORT_CHANGED_PREFIX: "تم تغيير منفذ HTTP إلى",
    NOTICE_PORT_CHANGED_SUFFIX: "جارٍ إعادة تشغيل الخادم...",
    NOTICE_PYTHON_MISSING_TITLE: "خطأ في جسر بايثون:",
    NOTICE_PYTHON_MISSING_DESC: "لم يتم العثور على ملف بايثون التنفيذي في PATH.\nيرجى تثبيت بايثون والتأكد من إضافته إلى متغير بيئة PATH في نظامك حتى يتمكن الملحق من تشغيل السكربتات.\nميزات الملحق التي تتطلب بايثون لن تكون متاحة.",
    NOTICE_REQUESTS_MISSING_TITLE: "خطأ في جسر بايثون:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "مكتبة بايثون المطلوبة 'requests' غير مثبتة لـ",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nيرجى تثبيتها عن طريق تشغيل:\n{pythonCmd} -m pip install requests\nميزات الملحق التي تتطلب بايثون لن تكون متاحة حتى يتم تثبيتها.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "منفذ HTTP الذي تم تكوينه غير صالح:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "لم يتم بدء الخادم. يرجى تكوين منفذ صالح (1-65535) في الإعدادات.",
    NOTICE_PORT_IN_USE_PREFIX: "المنفذ",
    NOTICE_PORT_IN_USE_SUFFIX: "مستخدم بالفعل. يرجى اختيار منفذ آخر في الإعدادات أو إغلاق التطبيق الآخر الذي يستخدمه. لم يتم بدء الخادم.",
    NOTICE_SERVER_START_FAILED_PREFIX: "فشل بدء الخادم على المنفذ",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "منفذ غير صالح. يرجى إدخال رقم بين 0 و 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ جسر بايثون: تم تغيير منفذ HTTP (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). قد يستهدف السكربت المنفذ القديم إذا كان قيد التشغيل بالفعل أو تم تشغيله خارجيًا.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "لم يتم العثور على سكربت بايثون أو أنه ليس ملفًا:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "خطأ في الوصول إلى ملف السكربت:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "جارٍ تشغيل سكربت بايثون:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "خطأ أثناء تشغيل",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "بواسطة",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "فشل مع رمز الخروج",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "تحقق من سجلات وحدة التحكم.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "تعذر العثور على ملف بايثون تنفيذي صالح. تم المحاولة:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "يرجى التأكد من تثبيت بايثون وإمكانية الوصول إليه عبر PATH الخاص بنظامك (أو مشغل 'py' على Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "لم يتم العثور على مجلد سكربتات بايثون أو أنه غير صالح. يرجى التحقق من إعدادات الملحق.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "خطأ في قراءة مجلد السكربتات:",
    NOTICE_NO_SCRIPTS_FOUND: "لم يتم العثور على سكربتات بايثون (.py) في المجلد الذي تم تكوينه.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "جارٍ تشغيل",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "سكربت(ات) بايثون...",
    NOTICE_INPUT_VALIDATION_FAILED: "الإدخال لا يتطابق مع التنسيق المطلوب.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "تشغيل سكربت بايثون معين",
    CMD_RUN_ALL_SCRIPTS_NAME: "تشغيل جميع سكربتات بايثون في المجلد",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "اختر سكربت بايثون لتشغيله...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "إرسال",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "إعدادات خاصة بالسكريبت",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "تحديث إعدادات السكريبت",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "أعد مسح مجلد السكريبتات لاكتشاف أو تحديث الإعدادات المعرفة داخل سكريبتات بايثون الخاصة بك.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "تحديث التعريفات",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "جارٍ التحديث...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "لم يتم تكوين مجلد سكريبتات بايثون. يرجى تعيين المسار أعلاه.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "لم يتم العثور على سكريبتات ذات إعدادات قابلة للتعريف في المجلد المكون، أو فشل اكتشاف الإعدادات. انقر فوق 'تحديث التعريفات' للمحاولة مرة أخرى.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "إعدادات لـ:",
    SETTINGS_LANGUAGE_AUTO: "تلقائي (مثل Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "لا يمكن تحديث الإعدادات: لم يتم العثور على ملف بايثون التنفيذي. يرجى التأكد من تثبيت بايثون وإضافته إلى PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "جارٍ تحديث تعريفات إعدادات السكريبت...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "تم تحديث تعريفات إعدادات السكريبت بنجاح!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "فشل تحديث تعريفات إعدادات السكريبت. تحقق من السجلات للحصول على التفاصيل.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "لا يمكن تشغيل السكريبت: لم يتم العثور على ملف بايثون التنفيذي. يرجى التحقق من التثبيت و PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "تحديث تعريفات إعدادات سكريبت بايثون",
    SETTINGS_SECURITY_WARNING_TITLE: "تحذير أمني",
    SETTINGS_SECURITY_WARNING_TEXT: "قد يكون تشغيل سكربتات بايثون العشوائية محفوفًا بالمخاطر. تأكد من أنك تثق في مصدر أي سكربت تقوم بتشغيله، حيث يمكنه الوصول إلى نظامك وبياناتك. لا يتحمل مؤلف الإضافة ومؤلفو السكربتات المسؤولية عن أي فقدان للبيانات أو مشكلات أمنية ناتجة عن السكربتات التي تختار تشغيلها. قم بتشغيل السكربتات على مسؤوليتك الخاصة.",
    SETTINGS_LANGUAGE_TITLE: "لغة الإضافة",
    SETTINGS_LANGUAGE_DESC: "اختر لغة العرض لواجهة إضافة Python Bridge. 'تلقائي' يتبع إعداد لغة Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "نصيحة أداء: ذاكرة التخزين المؤقت للروابط الخلفية",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "لتحسين الأداء عند استرداد الروابط الخلفية (باستخدام وظيفة get_backlinks) في الخزائن الكبيرة، ضع في اعتبارك تثبيت المكون الإضافي المجتمعي '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' بواسطة @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "مسار المجلد غير صالح. يرجى تحديد مجلد صالح في الإعدادات.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "مسار مجلد سكربتات بايثون المكون '{path}' غير صالح أو غير موجود. جارٍ مسح الإعداد.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "تمكين البرنامج النصي",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "السماح بتنفيذ هذا البرنامج النصي عبر الأوامر أو الاختصارات أو \"تشغيل الكل\".",
    NOTICE_SCRIPT_DISABLED: "البرنامج النصي '{scriptName}' معطل في الإعدادات ولا يمكن تنفيذه.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "تشغيل عند البدء",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "تشغيل هذا السكربت تلقائيًا عند بدء تشغيل Obsidian (فقط إذا كان 'تمكين السكربت' قيد التشغيل أيضًا).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "تأخير البدء (ثواني)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "انتظر هذا العدد من الثواني بعد بدء تشغيل Obsidian قبل تشغيل السكربت (ينطبق فقط إذا كان 'تشغيل عند البدء' قيد التشغيل). استخدم 0 لعدم وجود تأخير.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "تعيين PYTHONPATH تلقائيًا للمكتبة",
    SETTINGS_AUTO_PYTHONPATH_DESC: "إضافة دليل المكون الإضافي تلقائيًا إلى PYTHONPATH عند تشغيل البرامج النصية، مما يسمح بالاستيراد المباشر لمكتبة Python (موصى به). إذا تم تعطيله، يجب عليك نسخ ObsidianPluginDevPythonToJS.py إلى مجلد البرامج النصية الخاص بك أو إدارة sys.path يدويًا.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "تم تعطيل PYTHONPATH التلقائي. تأكد من وجود ObsidianPluginDevPythonToJS.py في مجلد البرامج النصية الخاص بك أو قم بإدارة sys.path يدويًا.",
};

// --- src/lang/pt.ts ---
// Portuguese translations
var pt = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Configurações do Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Pasta de Scripts Python",
    SETTINGS_FOLDER_DESC: "Caminho para a pasta que contém seus scripts Python (absoluto ou relativo ao cofre).",
    SETTINGS_FOLDER_PLACEHOLDER: "/caminho/para/seus/scripts ou ./scripts-python",
    SETTINGS_PORT_TITLE: "Porta do Servidor HTTP",
    SETTINGS_PORT_DESC: "Porta para o servidor HTTP local (1024-65535). Requer reinicialização ou salvamento das configurações para aplicar.",
    SETTINGS_CACHE_TITLE: "Desativar Cache do Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Executa o Python com a flag "-B" para impedir a escrita de arquivos .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Porta HTTP alterada para",
    NOTICE_PORT_CHANGED_SUFFIX: "Reiniciando servidor...",
    NOTICE_PYTHON_MISSING_TITLE: "Erro do Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Executável Python não encontrado no PATH.\nInstale o Python e certifique-se de que ele foi adicionado à variável de ambiente PATH do seu sistema para que o plugin possa executar scripts.\nRecursos do plugin que exigem Python ficarão indisponíveis.",
    NOTICE_REQUESTS_MISSING_TITLE: "Erro do Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "A biblioteca Python necessária 'requests' não está instalada para",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nInstale-a executando:\n{pythonCmd} -m pip install requests\nRecursos do plugin que exigem Python ficarão indisponíveis até que seja instalada.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Porta HTTP configurada inválida:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Servidor não iniciado. Configure uma porta válida (1-65535) nas configurações.",
    NOTICE_PORT_IN_USE_PREFIX: "A porta",
    NOTICE_PORT_IN_USE_SUFFIX: "já está em uso. Escolha outra porta nas configurações ou feche o outro aplicativo que a está usando. Servidor não iniciado.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Falha ao iniciar o servidor na porta",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Porta inválida. Por favor, insira um número between 0 e 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Porta HTTP alterada (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). O script pode estar direcionado à porta antiga se já estiver em execução ou tiver sido iniciado externamente.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Script Python não encontrado ou não é um arquivo:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Erro ao acessar o arquivo de script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Executando script Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Erro ao executar",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "com",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "falhou com o código de saída",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Verifique os logs do console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Não foi possível encontrar um executável Python válido. Tentativas:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Certifique-se de que o Python está instalado e acessível através do PATH do seu sistema (ou o lançador 'py' no Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Pasta de scripts Python não encontrada ou inválida. Verifique as configurações do plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Erro ao ler a pasta de scripts:",
    NOTICE_NO_SCRIPTS_FOUND: "Nenhum script Python (.py) encontrado na pasta configurada.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Executando",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script(s) Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "A entrada não corresponde ao formato exigido.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Executar um script Python específico",
    CMD_RUN_ALL_SCRIPTS_NAME: "Executar todos os scripts Python na pasta",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Selecione um script Python para executar...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Enviar",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Configurações Específicas do Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Atualizar Configurações do Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Verifique novamente a pasta de scripts para descobrir ou atualizar as configurações definidas em seus scripts Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Atualizar Definições",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Atualizando...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "A pasta de scripts Python não está configurada. Por favor, defina o caminho acima.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Nenhum script com configurações definíveis encontrado na pasta configurada, ou a descoberta de configurações falhou. Clique em 'Atualizar Definições' para tentar novamente.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Configurações para:",
    SETTINGS_LANGUAGE_AUTO: "Automático (Como Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Não é possível atualizar as configurações: Executável Python não encontrado. Certifique-se de que o Python está instalado e no PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Atualizando definições de configurações do script...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definições de configurações do script atualizadas com sucesso!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Falha ao atualizar as definições de configurações do script. Verifique os logs para detalhes.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Não é possível executar o script: Executável Python não encontrado. Verifique a instalação e o PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Atualizar definições de configurações de script Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Aviso de Segurança",
    SETTINGS_SECURITY_WARNING_TEXT: "Executar scripts Python arbitrários pode ser arriscado. Certifique-se de confiar na fonte de qualquer script que você executar, pois eles podem acessar seu sistema e dados. O autor do plugin e os autores dos scripts não são responsáveis por qualquer perda de dados ou problemas de segurança causados pelos scripts que você escolher executar. Execute os scripts por sua conta e risco.",
    SETTINGS_LANGUAGE_TITLE: "Idioma do Plugin",
    SETTINGS_LANGUAGE_DESC: "Escolha o idioma de exibição para a interface do plugin Python Bridge. 'Automático' segue a configuração de idioma do Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Dica de Desempenho: Cache de Backlinks",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Para melhor desempenho ao recuperar backlinks (usando a função get_backlinks) em cofres grandes, considere instalar o plugin comunitário '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' de @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Caminho da pasta inválido. Selecione uma pasta válida nas configurações.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "O caminho da pasta de scripts Python configurado '{path}' é inválido ou não foi encontrado. Limpando a configuração.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Ativado",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Permitir que este script seja executado via comandos, atalhos ou 'Executar Todos'.",
    NOTICE_SCRIPT_DISABLED: "O script '{scriptName}' está desativado nas configurações e não pode ser executado.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Executar ao Iniciar",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Executar este script automaticamente quando o Obsidian iniciar (apenas se 'Script Ativado' também estiver ligado).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Atraso de Inicialização (segundos)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Aguarde este número de segundos após o Obsidian iniciar antes de executar o script (aplica-se apenas se 'Executar ao Iniciar' estiver ligado). Use 0 para nenhum atraso.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Definir PYTHONPATH automaticamente para a Biblioteca",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Adicionar automaticamente o diretório do plugin ao PYTHONPATH ao executar scripts, permitindo a importação direta da biblioteca Python (Recomendado). Se desativado, você deve copiar ObsidianPluginDevPythonToJS.py para sua pasta de scripts ou gerenciar sys.path manualmente.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automático desativado. Certifique-se de que ObsidianPluginDevPythonToJS.py está na sua pasta de scripts ou gerencie sys.path manually.",
};

// --- src/lang/ru.ts ---
// Russian translations
var ru = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Настройки Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Папка со скриптами Python",
    SETTINGS_FOLDER_DESC: "Путь к папке, содержащей ваши скрипты Python (абсолютный или относительный к хранилищу).",
    SETTINGS_FOLDER_PLACEHOLDER: "/путь/к/вашим/скриптам или ./scripts-python",
    SETTINGS_PORT_TITLE: "Порт HTTP-сервера",
    SETTINGS_PORT_DESC: "Порт для локального HTTP-сервера (1024-65535). Требуется перезапуск или сохранение настроек для применения.",
    SETTINGS_CACHE_TITLE: "Отключить кэш Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Запускает Python с флагом "-B", чтобы предотвратить запись файлов .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Порт HTTP изменен на",
    NOTICE_PORT_CHANGED_SUFFIX: "Перезапуск сервера...",
    NOTICE_PYTHON_MISSING_TITLE: "Ошибка Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Исполняемый файл Python не найден в PATH.\nПожалуйста, установите Python и убедитесь, что он добавлен в переменную среды PATH вашей системы, чтобы плагин мог запускать скрипты.\nФункции плагина, требующие Python, будут недоступны.",
    NOTICE_REQUESTS_MISSING_TITLE: "Ошибка Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Требуемая библиотека Python 'requests' не установлена для",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nПожалуйста, установите ее, выполнив:\n{pythonCmd} -m pip install requests\nФункции плагина, требующие Python, будут недоступны до ее установки.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Неверный порт HTTP:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Сервер не запущен. Пожалуйста, настройте действительный порт (1-65535) в настройках.",
    NOTICE_PORT_IN_USE_PREFIX: "Порт",
    NOTICE_PORT_IN_USE_SUFFIX: "уже используется. Пожалуйста, выберите другой порт в настройках или закройте другое приложение, использующее его. Сервер не запущен.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Не удалось запустить сервер на порту",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Недопустимый порт. Пожалуйста, введите число от 0 до 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Порт HTTP изменен (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Скрипт может использовать старый порт, если он уже запущен или запущен извне.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Скрипт Python не найден или не является файлом:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Ошибка доступа к файлу скрипта:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Запуск скрипта Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Ошибка при запуске",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "с помощью",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "завершился с кодом ошибки",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Проверьте логи консоли.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Не удалось найти действительный исполняемый файл Python. Попытки:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Пожалуйста, убедитесь, что Python установлен и доступен через PATH вашей системы (или через 'py' в Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Папка скриптов Python не найдена или недействительна. Пожалуйста, проверьте настройки плагина.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Ошибка чтения папки скриптов:",
    NOTICE_NO_SCRIPTS_FOUND: "В настроенной папке не найдено скриптов Python (.py).",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Запуск",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "скрипт(ов) Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Ввод не соответствует требуемому формату.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Запустить определенный скрипт Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Запустить все скрипты Python в папке",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Выберите скрипт Python для запуска...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Отправить",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Настройки скрипта",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Обновить настройки скриптов",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Повторно сканировать папку скриптов для обнаружения или обновления настроек, определенных в ваших скриптах Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Обновить определения",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Обновление...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Папка скриптов Python не настроена. Пожалуйста, укажите путь выше.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "В настроенной папке не найдены скрипты с определяемыми настройками, или обнаружение настроек не удалось. Нажмите 'Обновить определения', чтобы повторить попытку.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Настройки для:",
    SETTINGS_LANGUAGE_AUTO: "Автоматически (Как Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Не удается обновить настройки: Исполняемый файл Python не найден. Убедитесь, что Python установлен и находится в PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Обновление определений настроек скриптов...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Определения настроек скриптов успешно обновлены!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Не удалось обновить определения настроек скриптов. Проверьте журналы для получения подробной информации.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Не удается запустить скрипт: Исполняемый файл Python не найден. Проверьте установку и PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Обновить определения настроек скриптов Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Предупреждение о безопасности",
    SETTINGS_SECURITY_WARNING_TEXT: "Выполнение произвольных скриптов Python может быть рискованным. Убедитесь, что вы доверяете источнику любого запускаемого скрипта, так как он может получить доступ к вашей системе и данным. Автор плагина и авторы скриптов не несут ответственности за потерю данных или проблемы безопасности, вызванные скриптами, которые вы решили выполнить. Запускайте скрипты на свой страх и риск.",
    SETTINGS_LANGUAGE_TITLE: "Язык плагина",
    SETTINGS_LANGUAGE_DESC: "Выберите язык отображения для интерфейса плагина Python Bridge. 'Автоматически' соответствует настройке языка Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Совет по производительности: Кэш обратных ссылок",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Для повышения производительности при получении обратных ссылок (с помощью функции get_backlinks) в больших хранилищах рассмотрите возможность установки плагина сообщества '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' от @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Недопустимый путь к папке. Пожалуйста, выберите действительную папку в настройках.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Настроенный путь к папке скриптов Python '{path}' недопустим или не найден. Очистка настройки.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Скрипт Включен",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Разрешить выполнение этого скрипта с помощью команд, сочетаний клавиш или 'Выполнить все'.",
    NOTICE_SCRIPT_DISABLED: "Скрипт '{scriptName}' отключен в настройках и не может быть выполнен.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Запускать при старте",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Автоматически запускать этот скрипт при старте Obsidian (только если 'Скрипт включен' также активирован).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Задержка запуска (секунды)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Подождите указанное количество секунд после запуска Obsidian перед выполнением скрипта (применяется, только если включено 'Запускать при старте'). Используйте 0 для отсутствия задержки.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Автоматически установить PYTHONPATH для библиотеки",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Автоматически добавлять каталог плагина в PYTHONPATH при запуске скриптов, разрешая прямой импорт библиотеки Python (Рекомендуется). Если отключено, вы должны скопировать ObsidianPluginDevPythonToJS.py в папку со скриптами или управлять sys.path вручную.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Автоматический PYTHONPATH отключен. Убедитесь, что ObsidianPluginDevPythonToJS.py находится в вашей папке скриптов, или управляйте sys.path вручную.",
};

// --- src/lang/ja.ts ---
// Japanese translations
var ja = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge 設定",
    SETTINGS_FOLDER_TITLE: "Python スクリプトフォルダ",
    SETTINGS_FOLDER_DESC: "Python スクリプトを含むフォルダへのパス（絶対パスまたは Vault 相対パス）。",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts または ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP サーバーポート",
    SETTINGS_PORT_DESC: "ローカル HTTP サーバーのポート（1024-65535）。適用するには再起動または設定の保存が必要です。",
    SETTINGS_CACHE_TITLE: "Python キャッシュを無効にする (__pycache__)",
    SETTINGS_CACHE_DESC: "「-B」フラグを指定して Python を実行し、.pyc ファイルの書き込みを防止します。",
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP ポートが",
    NOTICE_PORT_CHANGED_SUFFIX: "に変更されました。サーバーを再起動しています...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge エラー:",
    NOTICE_PYTHON_MISSING_DESC: "PATH に Python 実行可能ファイルが見つかりません。\nPython をインストールし、プラグインがスクリプトを実行できるようにシステムの PATH 環境変数に追加されていることを確認してください。\nPython を必要とするプラグイン機能は利用できません。",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge エラー:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "必要な Python ライブラリ 'requests' が",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "用にインストールされていません。\n次のコマンドを実行してインストールしてください:\n{pythonCmd} -m pip install requests\nインストールされるまで、Python を必要とするプラグイン機能は利用できません。",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "無効な HTTP ポートが設定されています:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "サーバーは起動しませんでした。設定で有効なポート（1-65535）を設定してください。",
    NOTICE_PORT_IN_USE_PREFIX: "ポート",
    NOTICE_PORT_IN_USE_SUFFIX: "は既に使用中です。設定で別のポートを選択するか、それを使用している他のアプリケーションを閉じてください。サーバーは起動しませんでした。",
    NOTICE_SERVER_START_FAILED_PREFIX: "ポートでのサーバー起動に失敗しました",
    NOTICE_SERVER_START_FAILED_SUFFIX: "。",
    NOTICE_INVALID_PORT_RANGE: "無効なポートです。0 から 65535 までの数字を入力してください。",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP ポートが変更されました (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ")。スクリプトが既に実行中または外部から起動されている場合、古いポートを対象としている可能性があります。",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python スクリプトが見つからないか、ファイルではありません:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "スクリプトファイルへのアクセスエラー:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python スクリプトを実行中:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "実行エラー",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "（使用コマンド:",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "）が終了コード",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "で失敗しました。コンソールログを確認してください。",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "有効な Python 実行可能ファイルが見つかりませんでした。試行:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Python がインストールされ、システムの PATH（または Windows の 'py' ランチャー）経由でアクセス可能であることを確認してください。",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python スクリプトフォルダが見つからないか無効です。プラグイン設定を確認してください。",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "スクリプトフォルダの読み取りエラー:",
    NOTICE_NO_SCRIPTS_FOUND: "設定されたフォルダに Python スクリプト (.py) が見つかりません。",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "個の Python スクリプトを実行中...",
    NOTICE_INPUT_VALIDATION_FAILED: "入力が必要な形式と一致しません。",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "特定の Python スクリプトを実行",
    CMD_RUN_ALL_SCRIPTS_NAME: "フォルダ内のすべての Python スクリプトを実行",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "実行する Python スクリプトを選択してください...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "送信",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "スクリプト固有の設定",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "スクリプト設定を更新",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "スクリプトフォルダを再スキャンして、Python スクリプト内で定義された設定を検出または更新します。",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "定義を更新",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "更新中...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python スクリプトフォルダが設定されていません。上でパスを設定してください。",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "設定されたフォルダに定義可能な設定を持つスクリプトが見つからないか、設定の検出に失敗しました。「定義を更新」をクリックして再試行してください。",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "設定：",
    SETTINGS_LANGUAGE_AUTO: "自動 (Obsidian に合わせる)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "設定を更新できません：Python 実行可能ファイルが見つかりません。Python がインストールされ、PATH に含まれていることを確認してください。",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "スクリプト設定定義を更新しています...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "スクリプト設定定義が正常に更新されました！",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "スクリプト設定定義の更新に失敗しました。詳細についてはログを確認してください。",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "スクリプトを実行できません：Python 実行可能ファイルが見つかりません。インストールと PATH を確認してください。",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python スクリプト設定定義を更新",
    SETTINGS_SECURITY_WARNING_TITLE: "セキュリティ警告",
    SETTINGS_SECURITY_WARNING_TEXT: "任意の Python スクリプトの実行にはリスクが伴う可能性があります。実行するスクリプトのソースを信頼できることを確認してください。スクリプトはシステムやデータにアクセスする可能性があります。プラグインの作者およびスクリプトの作者は、ユーザーが実行を選択したスクリプトによって引き起こされたデータの損失やセキュリティの問題について責任を負いません。自己責任でスクリプトを実行してください。",
    SETTINGS_LANGUAGE_TITLE: "プラグイン言語",
    SETTINGS_LANGUAGE_DESC: "Python Bridge プラグインインターフェースの表示言語を選択します。「自動」は Obsidian の言語設定に従います。",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "パフォーマンスのヒント：バックリンクキャッシュ",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "大きなVaultでバックリンクを取得する際（get_backlinks関数を使用）のパフォーマンスを向上させるには、@mnaoumovによるコミュニティプラグイン「[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)」のインストールを検討してください。",
    NOTICE_INVALID_FOLDER_PATH: "無効なフォルダパス。設定で有効なフォルダを選択してください。",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "設定された Python スクリプトフォルダパス '{path}' が無効か見つかりません。設定をクリアしています。",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "スクリプト有効",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "コマンド、ショートカット、または「すべて実行」でこのスクリプトの実行を許可します。",
    NOTICE_SCRIPT_DISABLED: "スクリプト「{scriptName}」は設定で無効になっており、実行できません。",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "起動時に実行",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidianの起動時にこのスクリプトを自動的に実行します（「スクリプト有効」もオンの場合のみ）。",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "起動遅延（秒）",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidianの起動後、スクリプトを実行する前にこの秒数待機します（「起動時に実行」がオンの場合のみ適用）。遅延なしの場合は0を使用します。",
    SETTINGS_AUTO_PYTHONPATH_NAME: "ライブラリのPYTHONPATHを自動設定",
    SETTINGS_AUTO_PYTHONPATH_DESC: "スクリプト実行時にプラグインディレクトリを自動的にPYTHONPATHに追加し、Pythonライブラリの直接インポートを可能にします（推奨）。無効にした場合、ObsidianPluginDevPythonToJS.pyをスクリプトフォルダにコピーするか、sys.pathを手動で管理する必要があります。",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "自動PYTHONPATHが無効になりました。ObsidianPluginDevPythonToJS.pyがスクリプトフォルダにあることを確認するか、sys.pathを手動で管理してください。",
};

// --- src/lang/hi.ts ---
// Hindi translations
var hi = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "ऑब्सिडियन पाइथन ब्रिज सेटिंग्स",
    SETTINGS_FOLDER_TITLE: "पाइथन स्क्रिप्ट्स फ़ोल्डर",
    SETTINGS_FOLDER_DESC: "आपकी पाइथन स्क्रिप्ट्स वाले फ़ोल्डर का पथ (पूर्ण या वॉल्ट के सापेक्ष)।",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts या ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP सर्वर पोर्ट",
    SETTINGS_PORT_DESC: "स्थानीय HTTP सर्वर के लिए पोर्ट (1024-65535)। लागू करने के लिए पुनरारंभ या सेटिंग्स सहेजने की आवश्यकता है।",
    SETTINGS_CACHE_TITLE: "पाइथन कैश अक्षम करें (__pycache__)",
    SETTINGS_CACHE_DESC: '".pyc" फ़ाइलों को लिखने से रोकने के लिए "-B" ध्वज के साथ पाइथन चलाएँ।',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "पाइथन ब्रिज",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP पोर्ट बदल कर",
    NOTICE_PORT_CHANGED_SUFFIX: "कर दिया गया है। सर्वर पुनरारंभ हो रहा है...",
    NOTICE_PYTHON_MISSING_TITLE: "पाइथन ब्रिज त्रुटि:",
    NOTICE_PYTHON_MISSING_DESC: "PATH में पाइथन निष्पादन योग्य नहीं मिला।\nकृपया पाइथन स्थापित करें और सुनिश्चित करें कि यह आपके सिस्टम के PATH पर्यावरण चर में जोड़ा गया है ताकि प्लगइन स्क्रिप्ट चला सके।\nपाइथन की आवश्यकता वाले प्लगइन सुविधाएँ अनुपलब्ध रहेंगी।",
    NOTICE_REQUESTS_MISSING_TITLE: "पाइथन ब्रिज त्रुटि:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "आवश्यक पाइथन लाइब्रेरी 'requests' इसके लिए स्थापित नहीं है:",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "।\nकृपया इसे चलाकर स्थापित करें:\n{pythonCmd} -m pip install requests\nस्थापित होने तक पाइथन की आवश्यकता वाले प्लगइन सुविधाएँ अनुपलब्ध रहेंगी।",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "अमान्य HTTP पोर्ट कॉन्फ़िगर किया गया:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "सर्वर शुरू नहीं हुआ। कृपया सेटिंग्स में एक मान्य पोर्ट (1-65535) कॉन्फ़िगर करें।",
    NOTICE_PORT_IN_USE_PREFIX: "पोर्ट",
    NOTICE_PORT_IN_USE_SUFFIX: "पहले से उपयोग में है। कृपया सेटिंग्स में दूसरा पोर्ट चुनें या इसका उपयोग करने वाले अन्य एप्लिकेशन को बंद करें। सर्वर शुरू नहीं हुआ।",
    NOTICE_SERVER_START_FAILED_PREFIX: "पोर्ट पर सर्वर शुरू करने में विफल:",
    NOTICE_SERVER_START_FAILED_SUFFIX: "।",
    NOTICE_INVALID_PORT_RANGE: "अमान्य पोर्ट। कृपया 0 और 65535 के बीच एक संख्या दर्ज करें।",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ पाइथन ब्रिज: HTTP पोर्ट बदला (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ")। यदि स्क्रिप्ट पहले से चल रही है या बाहरी रूप से लॉन्च की गई है तो वह पुराने पोर्ट को लक्षित कर सकती है।",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "पाइथन स्क्रिप्ट नहीं मिली या फ़ाइल नहीं है:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "स्क्रिप्ट फ़ाइल तक पहुँचने में त्रुटि:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "पाइथन स्क्रिप्ट चल रही है:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "चलाने में त्रुटि",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "के साथ",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "निकास कोड के साथ विफल:",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "कंसोल लॉग जांचें।",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "कोई मान्य पाइथन निष्पादन योग्य नहीं मिला। कोशिश की:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "कृपया सुनिश्चित करें कि पाइथन स्थापित है और आपके सिस्टम के PATH (या विंडोज पर 'py' लॉन्चर) के माध्यम से पहुँचा जा सकता है।",
    NOTICE_SCRIPTS_FOLDER_INVALID: "पाइथन स्क्रिप्ट फ़ोल्डर नहीं मिला या अमान्य है। कृपया प्लगइन सेटिंग्स जांचें।",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "स्क्रिप्ट फ़ोल्डर पढ़ने में त्रुटि:",
    NOTICE_NO_SCRIPTS_FOUND: "कॉन्फ़िगर किए गए फ़ोल्डर में कोई पाइथन स्क्रिप्ट (.py) नहीं मिली।",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "चल रहा है",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "पाइथन स्क्रिप्ट...",
    NOTICE_INPUT_VALIDATION_FAILED: "इनपुट आवश्यक प्रारूप से मेल नहीं खाता।",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "एक विशिष्ट पाइथन स्क्रिप्ट चलाएँ",
    CMD_RUN_ALL_SCRIPTS_NAME: "फ़ोल्डर में सभी पाइथन स्क्रिप्ट चलाएँ",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "चलाने के लिए एक पाइथन स्क्रिप्ट चुनें...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "प्रस्तुत करें",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "स<094d>क<094d>रिप<094d>ट-विशिष<094d>ट स<0947>टिंग<094d>स",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "स<094d>क<094d>रिप<094d>ट स<0947>टिंग<094d>स ताज़ा कर<0947><0902>",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "आपक<0947> पाइथन स<094d>क<094d>रिप<094d>ट म<0947><0902> परिभाष<094d>त स<0947>टिंग<094d>स को खोजन<0947> या अपड<0947>ट करन<0947> क<0947> लिए स<094d>क<094d>रिप<094d>ट फ<093c>ोल<094d>डर को फिर स<0947> स<094d>क<0948>न कर<0947><0902>।",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "परिभाषाएँ ताज़ा कर<0947><0902>",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "ताज़ा हो रहा ह<0948>...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "पाइथन स<094d>क<094d>रिप<094d>ट फ<093c>ोल<094d>डर निर<094d>धारित नह<0940><0902> ह<0948>। कृपया ऊपर पथ निर<094d>धारित कर<0947><0902>।",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "निर<094d>धारित फ<093c>ोल<094d>डर म<0947><0902> परिभाष<094d>य स<0947>टिंग<094d>स वाल<0947> कोई स<094d>क<094d>रिप<094d>ट नह<0940><0902> मिल<0947>, या स<0947>टिंग<094d>स खोजन<0947> म<0947><0902> विफल रह<0947>। फिर स<0947> कोशिश करन<0947> क<0947> लिए 'परिभाषाएँ ताज़ा कर<0947><0902>' पर क<094d>लिक कर<0947><0902>।",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "क<0947> लिए स<0947>टिंग<094d>स:",
    SETTINGS_LANGUAGE_AUTO: "सव<094d>चालित (Obsidian क<0947> समान)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "स<0947>टिंग<094d>स ताज़ा नह<0940><0902> कर सकत<0947>: पाइथन एक<094d>जिक<094d>य<0942>ट<0947>बल नह<0940><0902> मिला। कृपया स<0941>निश<094d>चित कर<0947><0902> कि पाइथन स<094d>थापित ह<0948> और PATH म<0947><0902> ह<0948>।",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "स<094d>क<094d>रिप<094d>ट स<0947>टिंग<094d>स परिभाषाएँ ताज़ा की जा रह<0940> ह<0948><0902>...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "स<094d>क<094d>रिप<094d>ट स<0947>टिंग<094d>स परिभाषाएँ सफलताप<0942>र<094d>वक ताज़ा हो गई<0902>!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "स<094d>क<094d>रिप<094d>ट स<0947>टिंग<094d>स परिभाषाएँ ताज़ा करन<0947> म<0947><0902> विफल। विवरण क<0947> लिए लॉग जाँच<0947><0902>।",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "स<094d>क<094d>रिप<094d>ट नह<0940><0902> चला सकत<0947>: पाइथन एक<094d>जिक<094d>य<0942>ट<0947>बल नह<0940><0902> मिला। कृपया स<094d>थापना और PATH जाँच<0947><0902>।",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "पाइथन स<094d>क<094d>रिप<094d>ट स<0947>टिंग<094d>स परिभाषाएँ ताज़ा कर<0947><0902>",
    SETTINGS_SECURITY_WARNING_TITLE: "स<0941>रक<094d>षा च<0947>तावनी",
    SETTINGS_SECURITY_WARNING_TEXT: "मनमान<0947> पाइथन स<094d>क<094d>रिप<094d>ट चलाना जोखिम भरा हो सकता ह<0948>। स<0941>निश<094d>चित कर<0947><0902> कि आप किसी भी स<094d>क<094d>रिप<094d>ट क<0947> स<094d>रोत पर भरोसा करत<0947> ह<0948><0902> जिस<0947> आप चलाते ह<0948><0902>, क<094d>यो<0902>कि व<0947> आपक<0947> सिस<094d>टम और ड<0947>टा तक पहुँच सकत<0947> ह<0948><0902>। प<094d>लगइन ल<0947>खक और स<094d>क<094d>रिप<094d>ट ल<0947>खक आपक<0947> द<094d>वारा निष्<094d>पादित करन<0947> क<0947> लिए च<0941>न<0947> गए स<094d>क<094d>रिप<094d>ट क<0947> कारण होन<0947> वाल<0947> किसी भी ड<0947>टा हानि या स<0941>रक<094d>षा समस<094d>याओं क<0947> लिए जिम<094d>म<0947>दार नह<0940><0902> ह<0948><0902>। अपन<0947> जोखिम पर स<094d>क<094d>रिप<094d>ट चलाएँ।",
    SETTINGS_LANGUAGE_TITLE: "प्लगइन भाषा",
    SETTINGS_LANGUAGE_DESC: "पाइथन ब<094d>रिज प<094d>लगइन इंटरफ<0947>स क<0947> लिए प<094d>रदर<094d>शन भाषा च<0941>न<0947><0902>। 'सव<094d>चालित' ओब<094d>सिडियन की भाषा स<0947>टिंग का पालन करता ह<0948>।",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "प्रदर्शन युक्ति: बैकलिंक कैश",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "बड़े वॉल्ट में बैकलिंक्स पुनर्प्राप्त करते समय (get_backlinks फ़ंक्शन का उपयोग करके) बेहतर प्रदर्शन के लिए, @mnaoumov द्वारा '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' सामुदायिक प्लगइन स्थापित करने पर विचार करें।",
    NOTICE_INVALID_FOLDER_PATH: "अमान्य फ़ोल्डर पथ। कृपया सेटिंग्स में एक मान्य फ़ोल्डर चुनें।",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "कॉन्फ़िगर किया गया पाइथन स्क्रिप्ट फ़ोल्डर पथ '{path}' अमान्य है या नहीं मिला। सेटिंग साफ़ की जा रही है।",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "स्क्रिप्ट सक्षम",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "इस स्क्रिप्ट को कमांड, शॉर्टकट, या 'सभी चलाएँ' के माध्यम से निष्पादित करने की अनुमति दें।",
    NOTICE_SCRIPT_DISABLED: "स्क्रिप्ट '{scriptName}' सेटिंग्स में अक्षम है और इसे निष्पादित नहीं किया जा सकता है।",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "स्टार्टअप पर चलाएँ",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "जब ओब्सीडियन शुरू होता है तो इस स्क्रिप्ट को स्वचालित रूप से चलाएं (केवल तभी जब 'स्क्रिप्ट सक्षम' भी चालू हो)।",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "स्टार्टअप विलंब (सेकंड)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "ओब्सीडियन शुरू होने के बाद स्क्रिप्ट चलाने से पहले इतने सेकंड प्रतीक्षा करें ('स्टार्टअप पर चलाएँ' चालू होने पर ही लागू होता है)। कोई विलंब नहीं के लिए 0 का उपयोग करें।",
    SETTINGS_AUTO_PYTHONPATH_NAME: "लाइब्रेरी के लिए PYTHONPATH स्वतः सेट करें",
    SETTINGS_AUTO_PYTHONPATH_DESC: "स्क्रिप्ट चलाते समय प्लगइन निर्देशिका को स्वचालित रूप से PYTHONPATH में जोड़ें, जिससे पायथन लाइब्रेरी का सीधा आयात संभव हो सके (अनुशंसित)। यदि अक्षम है, तो आपको ObsidianPluginDevPythonToJS.py को अपनी स्क्रिप्ट फ़ोल्डर में कॉपी करना होगा या sys.path को मैन्युअल रूप से प्रबंधित करना होगा।",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "स्वचालित PYTHONPATH अक्षम है। सुनिश्चित करें कि ObsidianPluginDevPythonToJS.py आपकी स्क्रिप्ट फ़ोल्डर में है या sys.path को मैन्युअल रूप से प्रबंधित करें।",
};

// --- src/lang/ko.ts ---
// Korean translations
var ko = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge 설정",
    SETTINGS_FOLDER_TITLE: "Python 스크립트 폴더",
    SETTINGS_FOLDER_DESC: "Python 스크립트가 포함된 폴더 경로 (절대 경로 또는 볼트 기준 상대 경로).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts 또는 ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP 서버 포트",
    SETTINGS_PORT_DESC: "로컬 HTTP 서버 포트 (1024-65535). 적용하려면 재시작하거나 설정을 저장해야 합니다.",
    SETTINGS_CACHE_TITLE: "Python 캐시 비활성화 (__pycache__)",
    SETTINGS_CACHE_DESC: '".pyc" 파일 쓰기를 방지하기 위해 "-B" 플래그로 Python을 실행합니다.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP 포트가",
    NOTICE_PORT_CHANGED_SUFFIX: "로 변경되었습니다. 서버를 다시 시작합니다...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge 오류:",
    NOTICE_PYTHON_MISSING_DESC: "PATH에서 Python 실행 파일을 찾을 수 없습니다.\nPython을 설치하고 플러그인이 스크립트를 실행할 수 있도록 시스템의 PATH 환경 변수에 추가되었는지 확인하십시오.\nPython이 필요한 플러グ인 기능은 사용할 수 없습니다.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge 오류:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "필수 Python 라이브러리 'requests'가",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "에 설치되어 있지 않습니다.\n다음을 실행하여 설치하십시오:\n{pythonCmd} -m pip install requests\n설치될 때까지 Python이 필요한 플러그인 기능은 사용할 수 없습니다.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "잘못된 HTTP 포트가 구성되었습니다:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "서버가 시작되지 않았습니다. 설정에서 유효한 포트(1-65535)를 구성하십시오.",
    NOTICE_PORT_IN_USE_PREFIX: "포트",
    NOTICE_PORT_IN_USE_SUFFIX: "가 이미 사용 중입니다. 설정에서 다른 포트를 선택하거나 해당 포트를 사용하는 다른 응용 프로그램을 닫으십시오. 서버가 시작되지 않았습니다.",
    NOTICE_SERVER_START_FAILED_PREFIX: "포트에서 서버 시작 실패:",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "잘못된 포트입니다. 0에서 65535 사이의 숫자를 입력하십시오.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP 포트 변경됨 (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). 스크립트가 이미 실행 중이거나 외부에서 시작된 경우 이전 포트를 대상으로 할 수 있습니다.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python 스크립트를 찾을 수 없거나 파일이 아닙니다:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "스크립트 파일 액세스 오류:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python 스크립트 실행 중:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "실행 중 오류 발생",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "(사용된 명령:",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: ") 종료 코드",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "로 실패했습니다. 콘솔 로그를 확인하십시오.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "유효한 Python 실행 파일을 찾을 수 없습니다. 시도:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Python이 설치되어 있고 시스템 PATH(또는 Windows의 'py' 런처)를 통해 액세스할 수 있는지 확인하십시오.",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python 스크립트 폴더를 찾을 수 없거나 잘못되었습니다. 플러그인 설정을 확인하십시오.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "스크립트 폴더 읽기 오류:",
    NOTICE_NO_SCRIPTS_FOUND: "구성된 폴더에서 Python 스크립트(.py)를 찾을 수 없습니다.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "개의 Python 스크립트 실행 중...",
    NOTICE_INPUT_VALIDATION_FAILED: "입력이 필요한 형식과 일치하지 않습니다.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "특정 Python 스크립트 실행",
    CMD_RUN_ALL_SCRIPTS_NAME: "폴더의 모든 Python 스크립트 실행",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "실행할 Python 스크립트를 선택하세요...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "제출",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "스크립트별 설정",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "스크립트 설정 새로고침",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "스크립트 폴더를 다시 스캔하여 Python 스크립트 내에 정의된 설정을 검색하거나 업데이트합니다.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "정의 새로고침",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "새로고침 중...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python 스크립트 폴더가 구성되지 않았습니다. 위에서 경로를 설정하십시오.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "구성된 폴더에서 정의 가능한 설정이 있는 스크립트를 찾을 수 없거나 설정 검색에 실패했습니다. '정의 새로고침'을 클릭하여 다시 시도하십시오.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "설정:",
    SETTINGS_LANGUAGE_AUTO: "자동 (Obsidian과 일치)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "설정을 새로고칠 수 없습니다: Python 실행 파일을 찾을 수 없습니다. Python이 설치되어 있고 PATH에 있는지 확인하십시오.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "스크립트 설정 정의를 새로고침하는 중...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "스크립트 설정 정의를 성공적으로 새로고침했습니다!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "스크립트 설정 정의를 새로고침하지 못했습니다. 자세한 내용은 로그를 확인하십시오.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "스크립트를 실행할 수 없습니다: Python 실행 파일을 찾을 수 없습니다. 설치 및 PATH를 확인하십시오.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python 스크립트 설정 정의 새로고침",
    SETTINGS_SECURITY_WARNING_TITLE: "보안 경고",
    SETTINGS_SECURITY_WARNING_TEXT: "임의의 Python 스크립트를 실행하는 것은 위험할 수 있습니다. 실행하는 스크립트의 출처를 신뢰할 수 있는지 확인하십시오. 스크립트는 시스템과 데이터에 접근할 수 있습니다. 플러그인 작성자와 스크립트 작성자는 사용자가 실행하기로 선택한 스크립트로 인해 발생하는 데이터 손실이나 보안 문제에 대해 책임을 지지 않습니다. 자신의 책임 하에 스크립트를 실행하십시오.",
    SETTINGS_LANGUAGE_TITLE: "플러그인 언어",
    SETTINGS_LANGUAGE_DESC: "Python Bridge 플러그인 인터페이스의 표시 언어를 선택하십시오. '자동'은 Obsidian의 언어 설정을 따릅니다.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "성능 팁: 백링크 캐시",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "큰 보관소에서 백링크를 검색할 때(get_backlinks 함수 사용) 성능 향상을 위해 @mnaoumov의 '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' 커뮤니티 플러그인 설치를 고려하십시오.",
    NOTICE_INVALID_FOLDER_PATH: "잘못된 폴더 경로입니다. 설정에서 유효한 폴더를 선택하십시오.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "구성된 Python 스크립트 폴더 경로 '{path}'가 잘못되었거나 찾을 수 없습니다. 설정을 지웁니다.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "스크립트 활성화됨",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "명령, 단축키 또는 '모두 실행'을 통해 이 스크립트를 실행하도록 허용합니다.",
    NOTICE_SCRIPT_DISABLED: "스크립트 '{scriptName}'이(가) 설정에서 비활성화되어 실행할 수 없습니다.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "시작 시 실행",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidian 시작 시 이 스크립트를 자동으로 실행합니다 ('스크립트 활성화'도 켜져 있는 경우에만).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "시작 지연 (초)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian 시작 후 스크립트를 실행하기 전에 이 시간(초)만큼 기다립니다 ('시작 시 실행'이 켜져 있는 경우에만 적용됨). 지연이 없으려면 0을 사용하십시오.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "라이브러리에 대해 PYTHONPATH 자동 설정",
    SETTINGS_AUTO_PYTHONPATH_DESC: "스크립트를 실행할 때 플러그인 디렉토리를 PYTHONPATH에 자동으로 추가하여 Python 라이브러리를 직접 가져올 수 있도록 합니다(권장). 비활성화된 경우 ObsidianPluginDevPythonToJS.py를 스크립트 폴더에 복사하거나 sys.path를 수동으로 관리해야 합니다.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "자동 PYTHONPATH가 비활성화되었습니다. ObsidianPluginDevPythonToJS.py가 스크립트 폴더에 있는지 확인하거나 sys.path를 수동으로 관리하십시오.",
};

// --- src/lang/it.ts ---
// Italian translations
var it = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Impostazioni Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Cartella Script Python",
    SETTINGS_FOLDER_DESC: "Percorso della cartella contenente i tuoi script Python (assoluto o relativo al vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/percorso/ai/tuoi/script o ./scripts-python",
    SETTINGS_PORT_TITLE: "Porta Server HTTP",
    SETTINGS_PORT_DESC: "Porta per il server HTTP locale (1024-65535). Richiede il riavvio o il salvataggio delle impostazioni per applicare.",
    SETTINGS_CACHE_TITLE: "Disabilita Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Esegue Python con il flag "-B" per prevenire la scrittura di file .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Porta HTTP cambiata a",
    NOTICE_PORT_CHANGED_SUFFIX: "Riavvio del server...",
    NOTICE_PYTHON_MISSING_TITLE: "Errore Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Eseguibile Python non trovato nel PATH.\nInstalla Python e assicurati che sia aggiunto alla variabile d'ambiente PATH del tuo sistema affinché il plugin possa eseguire gli script.\nLe funzionalità del plugin che richiedono Python non saranno disponibili.",
    NOTICE_REQUESTS_MISSING_TITLE: "Errore Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "La libreria Python richiesta 'requests' non è installata per",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nInstallala eseguendo:\n{pythonCmd} -m pip install requests\nLe funzionalità del plugin che richiedono Python non saranno disponibili finché non verrà installata.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Porta HTTP configurata non valida:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server non avviato. Configura una porta valida (1-65535) nelle impostazioni.",
    NOTICE_PORT_IN_USE_PREFIX: "La porta",
    NOTICE_PORT_IN_USE_SUFFIX: "è già in uso. Scegli un'altra porta nelle impostazioni o chiudi l'altra applicazione che la sta usando. Server non avviato.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Impossibile avviare il server sulla porta",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Porta non valida. Inserisci un numero compreso tra 0 e 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Porta HTTP cambiata (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Lo script potrebbe puntare alla vecchia porta se è già in esecuzione o è stato avviato esternamente.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Script Python non trovato o non è un file:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Errore di accesso al file dello script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Esecuzione script Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Errore durante l'esecuzione di",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "con",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "fallito con codice di uscita",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Controlla i log della console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Impossibile trovare un eseguibile Python valido. Tentativi:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Assicurati che Python sia installato e accessibile tramite il PATH di sistema (o il launcher 'py' su Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Cartella degli script Python non trovata o non valida. Controlla le impostazioni del plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Errore durante la lettura della cartella degli script:",
    NOTICE_NO_SCRIPTS_FOUND: "Nessuno script Python (.py) trovato nella cartella configurata.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Esecuzione di",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "L'input non corrisponde al formato richiesto.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Esegui uno script Python specifico",
    CMD_RUN_ALL_SCRIPTS_NAME: "Esegui tutti gli script Python nella cartella",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Seleziona uno script Python da eseguire...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Invia",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Impostazioni Specifiche dello Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Aggiorna Impostazioni Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Riesegui la scansione della cartella degli script per scoprire o aggiornare le impostazioni definite nei tuoi script Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Aggiorna Definizioni",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Aggiornamento...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "La cartella degli script Python non è configurata. Imposta il percorso sopra.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Nessuno script con impostazioni definibili trovato nella cartella configurata, oppure il rilevamento delle impostazioni non è riuscito. Fai clic su 'Aggiorna Definizioni' per riprovare.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Impostazioni per:",
    SETTINGS_LANGUAGE_AUTO: "Automatico (Come Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Impossibile aggiornare le impostazioni: Eseguibile Python non trovato. Assicurati che Python sia installato e nel PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Aggiornamento delle definizioni delle impostazioni dello script...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definizioni delle impostazioni dello script aggiornate con successo!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Impossibile aggiornare le definizioni delle impostazioni dello script. Controlla i log per i dettagli.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Impossibile eseguire lo script: Eseguibile Python non trovato. Controlla l'installazione e il PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Aggiorna le definizioni delle impostazioni dello script Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Avviso di Sicurezza",
    SETTINGS_SECURITY_WARNING_TEXT: "L'esecuzione di script Python arbitrari può essere rischiosa. Assicurati di fidarti della fonte di qualsiasi script che esegui, poiché possono accedere al tuo sistema e ai tuoi dati. L'autore del plugin e gli autori degli script non sono responsabili per eventuali perdite di dati o problemi di sicurezza causati dagli script che scegli di eseguire. Esegui gli script a tuo rischio.",
    SETTINGS_LANGUAGE_TITLE: "Lingua del Plugin",
    SETTINGS_LANGUAGE_DESC: "Scegli la lingua di visualizzazione per l'interfaccia del plugin Python Bridge. 'Automatico' segue l'impostazione della lingua di Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Suggerimento prestazioni: Cache Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Per prestazioni migliorate durante il recupero dei backlink (utilizzando la funzione get_backlinks) in vault di grandi dimensioni, considera l'installazione del plugin della community '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' di @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Percorso cartella non valido. Seleziona una cartella valida nelle impostazioni.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Il percorso della cartella degli script Python configurato '{path}' non è valido o non trovato. Cancellazione dell'impostazione.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Abilitato",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Consenti l'esecuzione di questo script tramite comandi, scorciatoie o 'Esegui Tutto'.",
    NOTICE_SCRIPT_DISABLED: "Lo script '{scriptName}' è disabilitato nelle impostazioni e non può essere eseguito.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Esegui all'avvio",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Esegui automaticamente questo script all'avvio di Obsidian (solo se anche 'Script Abilitato' è attivo).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Ritardo all'avvio (secondi)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Attendi questo numero di secondi dopo l'avvio di Obsidian prima di eseguire lo script (si applica solo se 'Esegui all'avvio' è attivo). Usa 0 per nessun ritardo.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Imposta automaticamente PYTHONPATH per la libreria",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Aggiunge automaticamente la directory del plugin a PYTHONPATH durante l'esecuzione degli script, consentendo l'importazione diretta della libreria Python (Consigliato). Se disabilitato, è necessario copiare ObsidianPluginDevPythonToJS.py nella cartella degli script o gestire manualmente sys.path.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automatico disabilitato. Assicurati che ObsidianPluginDevPythonToJS.py sia nella tua cartella degli script o gestisci sys.path manualmente.",
};

// --- src/lang/tr.ts ---
// Turkish translations
var tr = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Ayarları",
    SETTINGS_FOLDER_TITLE: "Python Betikleri Klasörü",
    SETTINGS_FOLDER_DESC: "Python betiklerinizi içeren klasörün yolu (mutlak veya kasaya göreceli).",
    SETTINGS_FOLDER_PLACEHOLDER: "/komut/dosyalarınızın/yolu veya ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP Sunucu Portu",
    SETTINGS_PORT_DESC: "Yerel HTTP sunucusu için port (1024-65535). Uygulamak için yeniden başlatma veya ayarları kaydetme gerekir.",
    SETTINGS_CACHE_TITLE: "Python Önbelleğini Devre Dışı Bırak (__pycache__)",
    SETTINGS_CACHE_DESC: '".pyc" dosyalarının yazılmasını önlemek için Python\'u "-B" bayrağıyla çalıştırın.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP portu şuna değiştirildi:",
    NOTICE_PORT_CHANGED_SUFFIX: "Sunucu yeniden başlatılıyor...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Hatası:",
    NOTICE_PYTHON_MISSING_DESC: "PATH içinde Python yürütülebilir dosyası bulunamadı.\nLütfen Python'u yükleyin ve eklentinin betikleri çalıştırabilmesi için sisteminizin PATH ortam değişkenine eklendiğinden emin olun.\nPython gerektiren eklenti özellikleri kullanılamayacaktır.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Hatası:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Gerekli Python kütüphanesi 'requests' şunun için kurulu değil:",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nLütfen şunu çalıştırarak kurun:\n{pythonCmd} -m pip install requests\nKurulana kadar Python gerektiren eklenti özellikleri kullanılamayacaktır.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Geçersiz HTTP portu yapılandırıldı:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Sunucu başlatılmadı. Lütfen ayarlarda geçerli bir port (1-65535) yapılandırın.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "zaten kullanılıyor. Lütfen ayarlarda başka bir port seçin veya onu kullanan diğer uygulamayı kapatın. Sunucu başlatılmadı.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Sunucuyu port üzerinde başlatma başarısız:",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Geçersiz bağlantı noktası. Lütfen 0 ile 65535 arasında bir sayı girin.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP Portu değişti (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Betik zaten çalışıyorsa veya harici olarak başlatıldıysa eski portu hedefleyebilir.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python betiği bulunamadı veya bir dosya değil:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Betik dosyasına erişim hatası:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python betiği çalıştırılıyor:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Çalıştırma hatası:",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "ile",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "çıkış koduyla başarısız oldu:",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Konsol günlüklerini kontrol edin.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Geçerli bir Python yürütülebilir dosyası bulunamadı. Denenenler:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Lütfen Python'un kurulu olduğundan ve sisteminizin PATH'i (veya Windows'ta 'py' başlatıcısı) aracılığıyla erişilebilir olduğundan emin olun.",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python betikleri klasörü bulunamadı veya geçersiz. Lütfen eklenti ayarlarını kontrol edin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Betik klasörünü okuma hatası:",
    NOTICE_NO_SCRIPTS_FOUND: "Yapılandırılmış klasörde Python betiği (.py) bulunamadı.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: " Python betiği çalıştırılıyor...",
    NOTICE_INPUT_VALIDATION_FAILED: "Girdi gerekli biçimle eşleşmiyor.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Belirli bir Python betiğini çalıştır",
    CMD_RUN_ALL_SCRIPTS_NAME: "Klasördeki tüm Python betiklerini çalıştır",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Çalıştırmak için bir Python betiği seçin...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Gönder",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Betik Özel Ayarları",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Betik Ayarlarını Yenile",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Python betiklerinizde tanımlanan ayarları keşfetmek veya güncellemek için betik klasörünü yeniden tarayın.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Tanımları Yenile",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Yenileniyor...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python betik klasörü yapılandırılmadı. Lütfen yukarıdaki yolu ayarlayın.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Yapılandırılmış klasörde tanımlanabilir ayarlara sahip betik bulunamadı veya ayar keşfi başarısız oldu. Tekrar denemek için 'Tanımları Yenile'yi tıklayın.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Ayarlar:",
    SETTINGS_LANGUAGE_AUTO: "Otomatik (Obsidian ile Eşleş)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Ayarlar yenilenemiyor: Python yürütülebilir dosyası bulunamadı. Lütfen Python'un kurulu olduğundan ve PATH'de olduğundan emin olun.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Betik ayar tanımları yenileniyor...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Betik ayar tanımları başarıyla yenilendi!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Betik ayar tanımları yenilenemedi. Ayrıntılar için günlüklere bakın.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Betik çalıştırılamıyor: Python yürütülebilir dosyası bulunamadı. Lütfen kurulumu ve PATH'i kontrol edin.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python betik ayar tanımlarını yenile",
    SETTINGS_SECURITY_WARNING_TITLE: "Güvenlik Uyarısı",
    SETTINGS_SECURITY_WARNING_TEXT: "Rastgele Python betikleri çalıştırmak riskli olabilir. Çalıştırdığınız betiklerin kaynağına güvendiğinizden emin olun, çünkü sisteminize ve verilerinize erişebilirler. Eklenti yazarı ve betik yazarları, çalıştırmayı seçtiğiniz betiklerin neden olduğu veri kaybı veya güvenlik sorunlarından sorumlu değildir. Betikleri kendi sorumluluğunuzda çalıştırın.",
    SETTINGS_LANGUAGE_TITLE: "Eklenti Dili",
    SETTINGS_LANGUAGE_DESC: "Python Bridge eklenti arayüzü için görüntüleme dilini seçin. 'Otomatik', Obsidian'ın dil ayarını takip eder.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Performans İpucu: Geri Bağlantı Önbelleği",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Büyük kasalarda geri bağlantıları alırken (get_backlinks işlevini kullanarak) daha iyi performans için @mnaoumov tarafından geliştirilen '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' topluluk eklentisini yüklemeyi düşünün.",
    NOTICE_INVALID_FOLDER_PATH: "Geçersiz klasör yolu. Lütfen ayarlarda geçerli bir klasör seçin.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Yapılandırılmış Python betikleri klasör yolu '{path}' geçersiz veya bulunamadı. Ayar temizleniyor.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Betik Etkin",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Bu betiğin komutlar, kısayollar veya 'Tümünü Çalıştır' aracılığıyla yürütülmesine izin verin.",
    NOTICE_SCRIPT_DISABLED: "'{scriptName}' betiği ayarlarda devre dışı bırakıldı ve yürütülemez.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Başlangıçta Çalıştır",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidian başladığında bu betiği otomatik olarak çalıştır (yalnızca 'Betik Etkin' de açıksa).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Başlangıç Gecikmesi (saniye)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian başladıktan sonra betiği çalıştırmadan önce bu kadar saniye bekleyin ('Başlangıçta Çalıştır' açıksa geçerlidir). Gecikme olmaması için 0 kullanın.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Kütüphane için PYTHONPATH'ı otomatik ayarla",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Komut dosyalarını çalıştırırken eklenti dizinini otomatik olarak PYTHONPATH'a ekleyerek Python kitaplığının doğrudan içe aktarılmasına izin verir (Önerilir). Devre dışı bırakılırsa, ObsidianPluginDevPythonToJS.py dosyasını komut dosyası klasörünüze kopyalamanız veya sys.path'i manuel olarak yönetmeniz gerekir.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Otomatik PYTHONPATH devre dışı bırakıldı. ObsidianPluginDevPythonToJS.py dosyasının komut dosyası klasörünüzde olduğundan emin olun veya sys.path'i manuel olarak yönetin.",
};

// --- src/lang/id.ts ---
// Indonesian translations
var id = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Pengaturan Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folder Skrip Python",
    SETTINGS_FOLDER_DESC: "Path ke folder yang berisi skrip Python Anda (absolut atau relatif terhadap vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/ke/skrip/anda atau ./scripts-python",
    SETTINGS_PORT_TITLE: "Port Server HTTP",
    SETTINGS_PORT_DESC: "Port untuk server HTTP lokal (1024-65535). Memerlukan restart atau simpan pengaturan untuk menerapkan.",
    SETTINGS_CACHE_TITLE: "Nonaktifkan Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: 'Jalankan Python dengan flag "-B" untuk mencegah penulisan file .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Port HTTP diubah ke",
    NOTICE_PORT_CHANGED_SUFFIX: "Memulai ulang server...",
    NOTICE_PYTHON_MISSING_TITLE: "Kesalahan Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Eksekutable Python tidak ditemukan di PATH.\nHarap instal Python dan pastikan ditambahkan ke variabel lingkungan PATH sistem Anda agar plugin dapat menjalankan skrip.\nFitur plugin yang memerlukan Python tidak akan tersedia.",
    NOTICE_REQUESTS_MISSING_TITLE: "Kesalahan Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Pustaka Python yang diperlukan 'requests' tidak diinstal untuk",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nHarap instal dengan menjalankan:\n{pythonCmd} -m pip install requests\nFitur plugin yang memerlukan Python tidak akan tersedia sampai diinstal.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Port HTTP yang dikonfigurasi tidak valid:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server tidak dimulai. Harap konfigurasikan port yang valid (1-65535) di pengaturan.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "sudah digunakan. Harap pilih port lain di pengaturan atau tutup aplikasi lain yang menggunakannya. Server tidak dimulai.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Gagal memulai server di port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Port tidak valid. Harap masukkan angka antara 0 dan 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Port HTTP berubah (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skrip mungkin menargetkan port lama jika sudah berjalan atau diluncurkan secara eksternal.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Skrip Python tidak ditemukan atau bukan file:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Kesalahan mengakses file skrip:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Menjalankan skrip Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Kesalahan saat menjalankan",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "dengan",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "gagal dengan kode keluar",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Periksa log konsol.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Tidak dapat menemukan eksekutable Python yang valid. Mencoba:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Harap pastikan Python diinstal dan dapat diakses melalui PATH sistem Anda (atau peluncur 'py' di Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Folder skrip Python tidak ditemukan atau tidak valid. Harap periksa pengaturan plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Kesalahan membaca folder skrip:",
    NOTICE_NO_SCRIPTS_FOUND: "Tidak ada skrip Python (.py) yang ditemukan di folder yang dikonfigurasi.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Menjalankan",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "skrip Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Input tidak cocok dengan format yang dibutuhkan.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Jalankan skrip Python tertentu",
    CMD_RUN_ALL_SCRIPTS_NAME: "Jalankan semua skrip Python di folder",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Pilih skrip Python untuk dijalankan...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Kirim",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Pengaturan Khusus Skrip",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Segarkan Pengaturan Skrip",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Pindai ulang folder skrip untuk menemukan atau memperbarui pengaturan yang ditentukan dalam skrip Python Anda.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Segarkan Definisi",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Menyegarkan...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Folder skrip Python belum dikonfigurasi. Harap atur path di atas.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Tidak ada skrip dengan pengaturan yang dapat ditentukan ditemukan di folder yang dikonfigurasi, atau penemuan pengaturan gagal. Klik 'Segarkan Definisi' untuk mencoba lagi.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Pengaturan untuk:",
    SETTINGS_LANGUAGE_AUTO: "Otomatis (Sesuai Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Tidak dapat menyegarkan pengaturan: Eksekusi Python tidak ditemukan. Pastikan Python terinstal dan ada di PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Menyegarkan definisi pengaturan skrip...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definisi pengaturan skrip berhasil disegarkan!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Gagal menyegarkan definisi pengaturan skrip. Periksa log untuk detail.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Tidak dapat menjalankan skrip: Eksekusi Python tidak ditemukan. Periksa instalasi dan PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Segarkan definisi pengaturan skrip Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Peringatan Keamanan",
    SETTINGS_SECURITY_WARNING_TEXT: "Menjalankan skrip Python sembarangan bisa berisiko. Pastikan Anda mempercayai sumber skrip apa pun yang Anda jalankan, karena skrip tersebut dapat mengakses sistem dan data Anda. Penulis plugin dan penulis skrip tidak bertanggung jawab atas kehilangan data atau masalah keamanan apa pun yang disebabkan oleh skrip yang Anda pilih untuk dijalankan. Jalankan skrip dengan risiko Anda sendiri.",
    SETTINGS_LANGUAGE_TITLE: "Bahasa Plugin",
    SETTINGS_LANGUAGE_DESC: "Pilih bahasa tampilan untuk antarmuka plugin Python Bridge. 'Otomatis' mengikuti pengaturan bahasa Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Tips Performa: Cache Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Untuk peningkatan performa saat mengambil backlink (menggunakan fungsi get_backlinks) di vault besar, pertimbangkan untuk menginstal plugin komunitas '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' oleh @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Path folder tidak valid. Harap pilih folder yang valid di pengaturan.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Path folder skrip Python yang dikonfigurasi '{path}' tidak valid atau tidak ditemukan. Menghapus pengaturan.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skrip Diaktifkan",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Izinkan skrip ini dieksekusi melalui perintah, pintasan, atau 'Jalankan Semua'.",
    NOTICE_SCRIPT_DISABLED: "Skrip '{scriptName}' dinonaktifkan di pengaturan dan tidak dapat dieksekusi.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Jalankan saat Startup",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Jalankan skrip ini secara otomatis saat Obsidian dimulai (hanya jika 'Skrip Diaktifkan' juga aktif).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Penundaan Startup (detik)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Tunggu beberapa detik setelah Obsidian dimulai sebelum menjalankan skrip (hanya berlaku jika 'Jalankan saat Startup' aktif). Gunakan 0 jika tidak ada penundaan.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Atur otomatis PYTHONPATH untuk Library",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Secara otomatis menambahkan direktori plugin ke PYTHONPATH saat menjalankan skrip, memungkinkan impor langsung pustaka Python (Disarankan). Jika dinonaktifkan, Anda harus menyalin ObsidianPluginDevPythonToJS.py ke folder skrip Anda atau mengelola sys.path secara manual.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH otomatis dinonaktifkan. Pastikan ObsidianPluginDevPythonToJS.py ada di folder skrip Anda atau kelola sys.path secara manual.",
};

// --- src/lang/pl.ts ---
// Polish translations
var pl = {
    // Settings Tab
    SETTINGS_TAB_TITLE: "Ustawienia Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folder skryptów Python",
    SETTINGS_FOLDER_DESC: "Ścieżka do folderu zawierającego skrypty Python (bezwzględna lub względna do przechowalni).",
    SETTINGS_FOLDER_PLACEHOLDER: "/ścieżka/do/twoich/skryptów lub ./scripts-python",
    SETTINGS_PORT_TITLE: "Port serwera HTTP",
    SETTINGS_PORT_DESC: "Port dla lokalnego serwera HTTP (1024-65535). Wymaga ponownego uruchomienia lub zapisania ustawień, aby zastosować.",
    SETTINGS_CACHE_TITLE: "Wyłącz pamięć podręczną Pythona (__pycache__)",
    SETTINGS_CACHE_DESC: 'Uruchamia Pythona z flagą "-B", aby zapobiec zapisywaniu plików .pyc.',
    // main.ts Notices
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Port HTTP zmieniony na",
    NOTICE_PORT_CHANGED_SUFFIX: "Ponowne uruchamianie serwera...",
    NOTICE_PYTHON_MISSING_TITLE: "Błąd Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Nie znaleziono pliku wykonywalnego Pythona w PATH.\nZainstaluj Pythona i upewnij się, że jest dodany do zmiennej środowiskowej PATH systemu, aby wtyczka mogła uruchamiać skrypty.\nFunkcje wtyczki wymagające Pythona będą niedostępne.",
    NOTICE_REQUESTS_MISSING_TITLE: "Błąd Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Wymagana biblioteka Python 'requests' nie jest zainstalowana dla",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\nZainstaluj ją, uruchamiając:\n{pythonCmd} -m pip install requests\nFunkcje wtyczki wymagające Pythona będą niedostępne do czasu instalacji.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Skonfigurowano nieprawidłowy port HTTP:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Serwer nie został uruchomiony. Skonfiguruj prawidłowy port (1-65535) w ustawieniach.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "jest już używany. Wybierz inny port w ustawieniach lub zamknij inną aplikację, która go używa. Serwer nie został uruchomiony.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Nie udało się uruchomić serwera na porcie",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Nieprawidłowy port. Wprowadź liczbę od 0 do 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Port HTTP zmieniony (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skrypt może celować w stary port, jeśli jest już uruchomiony lub został uruchomiony zewnętrznie.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Nie znaleziono skryptu Python lub nie jest to plik:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Błąd dostępu do pliku skryptu:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Uruchamianie skryptu Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Błąd podczas uruchamiania",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "za pomocą",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "zakończył się niepowodzeniem z kodem wyjścia",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Sprawdź logi konsoli.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Nie można znaleźć prawidłowego pliku wykonywalnego Pythona. Próbowano:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Upewnij się, że Python jest zainstalowany i dostępny za pośrednictwem PATH systemu (lub launchera 'py' w systemie Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Nie znaleziono folderu skryptów Python lub jest on nieprawidłowy. Sprawdź ustawienia wtyczki.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Błąd odczytu folderu skryptów:",
    NOTICE_NO_SCRIPTS_FOUND: "Nie znaleziono skryptów Python (.py) w skonfigurowanym folderze.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Uruchamianie",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "skryptów Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Wprowadzone dane nie pasują do wymaganego formatu.",
    // main.ts Commands
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Uruchom określony skrypt Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Uruchom wszystkie skrypty Python w folderze",
    // UserInputModal
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Wybierz skrypt Python do uruchomienia...",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Wyślij",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Ustawienia Specyficzne dla Skryptu",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Odśwież Ustawienia Skryptów",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Przeskanuj ponownie folder skryptów, aby odkryć lub zaktualizować ustawienia zdefiniowane w skryptach Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Odśwież Definicje",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Odświeżanie...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Folder skryptów Python nie jest skonfigurowany. Ustaw ścieżkę powyżej.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Nie znaleziono skryptów z definiowalnymi ustawieniami w skonfigurowanym folderze lub odkrywanie ustawień nie powiodło się. Kliknij 'Odśwież Definicje', aby spróbować ponownie.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Ustawienia dla:",
    SETTINGS_LANGUAGE_AUTO: "Automatyczny (Jak Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Nie można odświeżyć ustawień: Nie znaleziono pliku wykonywalnego Python. Upewnij się, że Python jest zainstalowany i znajduje się w PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Odświeżanie definicji ustawień skryptów...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definicje ustawień skryptów zostały pomyślnie odświeżone!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Nie udało się odświeżyć definicji ustawień skryptów. Sprawdź logi, aby uzyskać szczegóły.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Nie można uruchomić skryptu: Nie znaleziono pliku wykonywalnego Python. Sprawdź instalację i PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Odśwież definicje ustawień skryptów Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Ostrzeżenie dotyczące bezpieczeństwa",
    SETTINGS_SECURITY_WARNING_TEXT: "Uruchamianie dowolnych skryptów Python może być ryzykowne. Upewnij się, że ufasz źródłu każdego uruchamianego skryptu, ponieważ mogą one uzyskać dostęp do Twojego systemu i danych. Autor wtyczki i autorzy skryptów nie ponoszą odpowiedzialności za utratę danych ani problemy z bezpieczeństwem spowodowane przez skrypty, które zdecydujesz się uruchomić. Uruchamiaj skrypty na własne ryzyko.",
    SETTINGS_LANGUAGE_TITLE: "Język Wtyczki",
    SETTINGS_LANGUAGE_DESC: "Wybierz język wyświetlania interfejsu wtyczki Python Bridge. 'Automatyczny' podąża za ustawieniem języka Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Wskazówka dotycząca wydajności: Pamięć podręczna Backlinków",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Aby poprawić wydajność podczas pobierania backlinków (za pomocą funkcji get_backlinks) w dużych skarbcach, rozważ zainstalowanie wtyczki społecznościowej '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' autorstwa @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Nieprawidłowa ścieżka folderu. Wybierz prawidłowy folder w ustawieniach.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Skonfigurowana ścieżka folderu skryptów Python '{path}' jest nieprawidłowa lub nie znaleziono. Czyszczenie ustawienia.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skrypt Włączony",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Zezwól na wykonywanie tego skryptu za pomocą poleceń, skrótów lub 'Uruchom Wszystko'.",
    NOTICE_SCRIPT_DISABLED: "Skrypt '{scriptName}' jest wyłączony w ustawieniach i nie może zostać wykonany.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Uruchom przy starcie",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Automatycznie uruchom ten skrypt po uruchomieniu Obsidian (tylko jeśli 'Skrypt włączony' jest również zaznaczony).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Opóźnienie startu (sekundy)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Poczekaj tę liczbę sekund po uruchomieniu Obsidian przed uruchomieniem skryptu (dotyczy tylko, gdy opcja 'Uruchom przy starcie' jest włączona). Użyj 0, aby nie było opóźnienia.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Automatycznie ustaw PYTHONPATH dla biblioteki",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Automatycznie dodaje katalog wtyczki do PYTHONPATH podczas uruchamiania skryptów, umożliwiając bezpośredni import biblioteki Python (Zalecane). Jeśli opcja jest wyłączona, musisz skopiować plik ObsidianPluginDevPythonToJS.py do folderu skryptów lub ręcznie zarządzać sys.path.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatyczne ustawianie PYTHONPATH wyłączone. Upewnij się, że plik ObsidianPluginDevPythonToJS.py znajduje się w folderze skryptów lub zarządzaj sys.path ręcznie.",
};

// bn.ts - bn translations
// WARNING: Auto-generated translations below. Please review and correct.
var bn = {
    SETTINGS_TAB_TITLE: "অবসিডিয়ান পাইথন ব্রিজ সেটিংস",
    SETTINGS_FOLDER_TITLE: "পাইথন স্ক্রিপ্ট ফোল্ডার",
    SETTINGS_FOLDER_DESC: "আপনার পাইথন স্ক্রিপ্ট ধারণকারী ফোল্ডারের পাথ (ভল্টের সাপেক্ষে পরম বা আপেক্ষিক)।",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts অথবা ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP সার্ভার পোর্ট",
    SETTINGS_PORT_DESC: "স্থানীয় HTTP সার্ভারের জন্য পোর্ট (1024-65535)। প্রয়োগ করার জন্য রিস্টার্ট বা সেটিংস সংরক্ষণ প্রয়োজন।",
    SETTINGS_CACHE_TITLE: "পাইথন ক্যাশে নিষ্ক্রিয় করুন (__pycache__)",
    SETTINGS_CACHE_DESC: ".pyc ফাইল লেখা প্রতিরোধ করতে \"-B\" ফ্ল্যাগ দিয়ে পাইথন চালান।",
    NOTICE_PLUGIN_NAME: "পাইথন ব্রিজ",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP পোর্ট পরিবর্তন করে",
    NOTICE_PORT_CHANGED_SUFFIX: "সার্ভার রিস্টার্ট করা হচ্ছে...",
    NOTICE_PYTHON_MISSING_TITLE: "পাইথন ব্রিজ ত্রুটি:",
    NOTICE_PYTHON_MISSING_DESC: "PATH-এ পাইথন এক্সিকিউটেবল পাওয়া যায়নি।\\nঅনুগ্রহ করে পাইথন ইনস্টল করুন এবং নিশ্চিত করুন যে এটি আপনার সিস্টেমের PATH এনভায়রনমেন্ট ভেরিয়েবলে যোগ করা হয়েছে যাতে প্লাগইন স্ক্রিপ্ট চালাতে পারে।\\nপাইথন প্রয়োজন এমন প্লাগইন বৈশিষ্ট্যগুলি অনুপলব্ধ থাকবে।",
    NOTICE_REQUESTS_MISSING_TITLE: "পাইথন ব্রিজ ত্রুটি:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "প্রয়োজনীয় পাইথন লাইব্রেরি 'requests' ইনস্টল করা নেই",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "এর জন্য।\\nঅনুগ্রহ করে এটি চালান:\\n{pythonCmd} -m pip install requests\\nপাইথন প্রয়োজন এমন প্লাগইন বৈশিষ্ট্যগুলি ইনস্টল না হওয়া পর্যন্ত অনুপলব্ধ থাকবে।",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "অবৈধ HTTP পোর্ট কনফিগার করা হয়েছে:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "সার্ভার শুরু হয়নি। অনুগ্রহ করে সেটিংসে একটি বৈধ পোর্ট (1-65535) কনফিগার করুন।",
    NOTICE_PORT_IN_USE_PREFIX: "পোর্ট",
    NOTICE_PORT_IN_USE_SUFFIX: "ইতিমধ্যে ব্যবহৃত হচ্ছে। অনুগ্রহ করে সেটিংসে অন্য একটি পোর্ট বেছে নিন বা এটি ব্যবহার করা অন্য অ্যাপ্লিকেশনটি বন্ধ করুন। সার্ভার শুরু হয়নি।",
    NOTICE_SERVER_START_FAILED_PREFIX: "পোর্টে সার্ভার শুরু করতে ব্যর্থ হয়েছে",
    NOTICE_SERVER_START_FAILED_SUFFIX: "।",
    NOTICE_INVALID_PORT_RANGE: "অবৈধ পোর্ট। অনুগ্রহ করে 0 এবং 65535 এর মধ্যে একটি সংখ্যা লিখুন।",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ পাইথন ব্রিজ: HTTP পোর্ট পরিবর্তিত হয়েছে (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ")। স্ক্রিপ্টটি পুরানো পোর্টকে লক্ষ্য করতে পারে যদি এটি ইতিমধ্যে চলছে বা বাহ্যিকভাবে চালু করা হয়েছে।",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "পাইথন স্ক্রিপ্ট পাওয়া যায়নি বা এটি একটি ফাইল নয়:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "স্ক্রিপ্ট ফাইল অ্যাক্সেস করার সময় ত্রুটি:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "পাইথন স্ক্রিপ্ট চালানো হচ্ছে:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "চালানোর সময় ত্রুটি",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "দিয়ে",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "ব্যর্থ হয়েছে এক্সিট কোড",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "সহ। কনসোল লগ পরীক্ষা করুন।",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "একটি বৈধ পাইথন এক্সিকিউটেবল খুঁজে পাওয়া যায়নি। চেষ্টা করা হয়েছে:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "অনুগ্রহ করে নিশ্চিত করুন যে পাইথন ইনস্টল করা আছে এবং আপনার সিস্টেমের PATH (অথবা উইন্ডোজে 'py' লঞ্চার) এর মাধ্যমে অ্যাক্সেসযোগ্য।",
    NOTICE_SCRIPTS_FOLDER_INVALID: "পাইথন স্ক্রিপ্ট ফোল্ডার পাওয়া যায়নি বা অবৈধ। অনুগ্রহ করে প্লাগইন সেটিংস পরীক্ষা করুন।",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "স্ক্রিপ্ট ফোল্ডার পড়ার সময় ত্রুটি:",
    NOTICE_NO_SCRIPTS_FOUND: "কনফিগার করা ফোল্ডারে কোনো পাইথন স্ক্রিপ্ট (.py) পাওয়া যায়নি।",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "চালানো হচ্ছে",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "পাইথন স্ক্রিপ্ট(গুলি)...",
    NOTICE_INPUT_VALIDATION_FAILED: "ইনপুট প্রয়োজনীয় বিন্যাসের সাথে মেলে না।",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "একটি নির্দিষ্ট পাইথন স্ক্রিপ্ট চালান",
    CMD_RUN_ALL_SCRIPTS_NAME: "ফোল্ডারের সমস্ত পাইথন স্ক্রিপ্ট চালান",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "জমা দিন",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "চালানোর জন্য একটি পাইথন স্ক্রিপ্ট নির্বাচন করুন...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "স্ক্রিপ্ট-নির্দিষ্ট সেটিংস",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "স্ক্রিপ্ট সেটিংস রিফ্রেশ করুন",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "আপনার পাইথন স্ক্রিপ্টে সংজ্ঞায়িত সেটিংস আবিষ্কার বা আপডেট করতে স্ক্রিপ্ট ফোল্ডারটি পুনরায় স্ক্যান করুন।",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "সংজ্ঞা রিফ্রেশ করুন",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "রিফ্রেশ করা হচ্ছে...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "পাইথন স্ক্রিপ্ট ফোল্ডার কনফিগার করা হয়নি। অনুগ্রহ করে উপরে পাথ সেট করুন।",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "কনফিগার করা ফোল্ডারে সংজ্ঞায়িত সেটিংস সহ কোনো স্ক্রিপ্ট পাওয়া যায়নি, অথবা সেটিংস আবিষ্কার ব্যর্থ হয়েছে। আবার চেষ্টা করতে 'সংজ্ঞা রিফ্রেশ করুন' ক্লিক করুন।",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "এর জন্য সেটিংস:",
    SETTINGS_LANGUAGE_AUTO: "স্বয়ংক্রিয় (অবসিডিয়ানের সাথে মিল)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "সেটিংস রিফ্রেশ করা যাবে না: পাইথন এক্সিকিউটেবল পাওয়া যায়নি। অনুগ্রহ করে নিশ্চিত করুন পাইথন ইনস্টল করা আছে এবং PATH-এ আছে।",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "স্ক্রিপ্ট সেটিংস সংজ্ঞা রিফ্রেশ করা হচ্ছে...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "স্ক্রিপ্ট সেটিংস সংজ্ঞা সফলভাবে রিফ্রেশ করা হয়েছে!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "স্ক্রিপ্ট সেটিংস সংজ্ঞা রিফ্রেশ করতে ব্যর্থ হয়েছে। বিস্তারিত জানার জন্য লগ পরীক্ষা করুন।",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "স্ক্রিপ্ট চালানো যাবে না: পাইথন এক্সিকিউটেবল পাওয়া যায়নি। অনুগ্রহ করে ইনস্টলেশন এবং PATH পরীক্ষা করুন।",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "পাইথন স্ক্রিপ্ট সেটিংস সংজ্ঞা রিফ্রেশ করুন",
    SETTINGS_SECURITY_WARNING_TITLE: "নিরাপত্তা সতর্কতা",
    SETTINGS_SECURITY_WARNING_TEXT: "নির্বিচারে পাইথন স্ক্রিপ্ট চালানো ঝুঁকিপূর্ণ হতে পারে। আপনি যে স্ক্রিপ্টটি চালান তার উৎসের উপর আস্থা রাখুন, কারণ তারা আপনার সিস্টেম এবং ডেটা অ্যাক্সেস করতে পারে। প্লাগইন লেখক এবং স্ক্রিপ্ট লেখকরা আপনার চালানো স্ক্রিপ্টগুলির কারণে ডেটা ক্ষতি বা নিরাপত্তা সমস্যার জন্য দায়ী নন। নিজের ঝুঁকিতে স্ক্রিপ্ট চালান।",
    SETTINGS_LANGUAGE_TITLE: "প্লাগইন ভাষা",
    SETTINGS_LANGUAGE_DESC: "পাইথন ব্রিজ প্লাগইন ইন্টারফেসের জন্য প্রদর্শনের ভাষা চয়ন করুন। 'স্বয়ংক্রিয়' অবসিডিয়ানের ভাষা সেটিং অনুসরণ করে।",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "পারফরম্যান্স টিপ: ব্যাকলিঙ্ক ক্যাশে",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "বৃহৎ ভল্টে ব্যাকলিঙ্ক পুনরুদ্ধার করার সময় (get_backlinks ফাংশন ব্যবহার করে) উন্নত পারফরম্যান্সের জন্য, @mnaoumov দ্বারা তৈরি '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' কমিউনিটি প্লাগইন ইনস্টল করার কথা বিবেচনা করুন।",
    NOTICE_INVALID_FOLDER_PATH: "অবৈধ ফোল্ডার পাথ। অনুগ্রহ করে সেটিংসে একটি বৈধ ফোল্ডার নির্বাচন করুন।",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "কনফিগার করা পাইথন স্ক্রিপ্ট ফোল্ডার পাথ '{path}' অবৈধ বা পাওয়া যায়নি। সেটিং সাফ করা হচ্ছে।",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "স্ক্রিপ্ট সক্ষম",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "কমান্ড, শর্টকাট বা 'সব চালান' এর মাধ্যমে এই স্ক্রিপ্টটি চালানোর অনুমতি দিন।",
    NOTICE_SCRIPT_DISABLED: "স্ক্রিপ্ট '{scriptName}' সেটিংসে নিষ্ক্রিয় করা আছে এবং চালানো যাবে না।",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "স্টার্টআপে চালান",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidian শুরু হলে এই স্ক্রিপ্টটি স্বয়ংক্রিয়ভাবে চালান (শুধুমাত্র যদি 'স্ক্রিপ্ট সক্ষম' চালু থাকে)।",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "স্টার্টআপ বিলম্ব (সেকেন্ড)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian শুরু হওয়ার পর স্ক্রিপ্টটি চালানোর আগে এই কয়েক সেকেন্ড অপেক্ষা করুন ('স্টার্টআপে চালান' চালু থাকলেই প্রযোজ্য)। কোনো বিলম্ব না চাইলে 0 ব্যবহার করুন।",
    SETTINGS_AUTO_PYTHONPATH_NAME: "লাইব্রেরির জন্য স্বয়ংক্রিয়ভাবে PYTHONPATH সেট করুন",
    SETTINGS_AUTO_PYTHONPATH_DESC: "স্ক্রিপ্ট চালানোর সময় প্লাগইন ডিরেক্টরি স্বয়ংক্রিয়ভাবে PYTHONPATH-এ যোগ করুন, যা পাইথন লাইব্রেরির সরাসরি আমদানি সক্ষম করে (প্রস্তাবিত)। নিষ্ক্রিয় করা থাকলে, আপনাকে অবশ্যই ObsidianPluginDevPythonToJS.py আপনার স্ক্রিপ্ট ফোল্ডারে কপি করতে হবে অথবা sys.path ম্যানুয়ালি পরিচালনা করতে হবে।",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "স্বয়ংক্রিয় PYTHONPATH নিষ্ক্রিয় করা হয়েছে। নিশ্চিত করুন ObsidianPluginDevPythonToJS.py আপনার স্ক্রিপ্ট ফোল্ডারে আছে অথবা sys.path ম্যানুয়ালি পরিচালনা করুন।",
};

// ur.ts - ur translations
// WARNING: Auto-generated translations below. Please review and correct.
var ur = {
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge ترتیبات",
    SETTINGS_FOLDER_TITLE: "Python اسکرپٹس فولڈر",
    SETTINGS_FOLDER_DESC: "آپ کے Python اسکرپٹس پر مشتمل فولڈر کا راستہ (والٹ کے نسبت مطلق یا متعلقہ)۔",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts یا ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP سرور پورٹ",
    SETTINGS_PORT_DESC: "مقامی HTTP سرور کے لیے پورٹ (1024-65535)۔ لاگو کرنے کے لیے دوبارہ شروع یا ترتیبات کو محفوظ کرنے کی ضرورت ہے۔",
    SETTINGS_CACHE_TITLE: "Python کیشے کو غیر فعال کریں (__pycache__)",
    SETTINGS_CACHE_DESC: ".pyc فائلیں لکھنے سے روکنے کے لیے \"-B\" فلیگ کے ساتھ Python چلائیں۔",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP پورٹ تبدیل کر دیا گیا",
    NOTICE_PORT_CHANGED_SUFFIX: "سرور دوبارہ شروع ہو رہا ہے...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge خرابی:",
    NOTICE_PYTHON_MISSING_DESC: "PATH میں Python قابل عمل فائل نہیں ملی۔\\nبراہ کرم Python انسٹال کریں اور یقینی بنائیں کہ یہ آپ کے سسٹم کے PATH ماحولیاتی متغیر میں شامل ہے تاکہ پلگ ان اسکرپٹس چلا سکے۔\\nPython کی ضرورت والے پلگ ان کی خصوصیات دستیاب نہیں ہوں گی۔",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge خرابی:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "مطلوبہ Python لائبریری 'requests' انسٹال نہیں ہے",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "کے لیے۔\\nبراہ کرم اسے چلا کر انسٹال کریں:\\n{pythonCmd} -m pip install requests\\nPython کی ضرورت والے پلگ ان کی خصوصیات انسٹال ہونے تک دستیاب نہیں ہوں گی۔",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "غلط HTTP پورٹ تشکیل دیا گیا ہے:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "سرور شروع نہیں ہوا۔ براہ کرم ترتیبات میں ایک درست پورٹ (1-65535) تشکیل دیں۔",
    NOTICE_PORT_IN_USE_PREFIX: "پورٹ",
    NOTICE_PORT_IN_USE_SUFFIX: "پہلے سے استعمال میں ہے۔ براہ کرم ترتیبات میں دوسرا پورٹ منتخب کریں یا اسے استعمال کرنے والی دوسری ایپلیکیشن بند کریں۔ سرور شروع نہیں ہوا۔",
    NOTICE_SERVER_START_FAILED_PREFIX: "پورٹ پر سرور شروع کرنے میں ناکام",
    NOTICE_SERVER_START_FAILED_SUFFIX: "۔",
    NOTICE_INVALID_PORT_RANGE: "غلط پورٹ۔ براہ کرم 0 اور 65535 کے درمیان ایک نمبر درج کریں۔",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP پورٹ تبدیل ہو گیا (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ")۔ اسکرپٹ پرانے پورٹ کو نشانہ بنا سکتا ہے اگر یہ پہلے سے چل رہا ہے یا بیرونی طور پر لانچ کیا گیا ہے۔",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python اسکرپٹ نہیں ملا یا فائل نہیں ہے:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "اسکرپٹ فائل تک رسائی میں خرابی:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python اسکرپٹ چل رہا ہے:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "چلاتے وقت خرابی",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "کے ساتھ",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "ایگزٹ کوڈ کے ساتھ ناکام",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "کنسول لاگز چیک کریں۔",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "ایک درست Python قابل عمل فائل نہیں مل سکی۔ کوشش کی گئی:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "براہ کرم یقینی بنائیں کہ Python انسٹال ہے اور آپ کے سسٹم کے PATH (یا ونڈوز پر 'py' لانچر) کے ذریعے قابل رسائی ہے۔",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python اسکرپٹس فولڈر نہیں ملا یا غلط ہے۔ براہ کرم پلگ ان کی ترتیبات چیک کریں۔",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "اسکرپٹس فولڈر پڑھنے میں خرابی:",
    NOTICE_NO_SCRIPTS_FOUND: "تشکیل شدہ فولڈر میں کوئی Python اسکرپٹ (.py) نہیں ملا۔",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "چل رہا ہے",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python اسکرپٹ...",
    NOTICE_INPUT_VALIDATION_FAILED: "ان پٹ مطلوبہ فارمیٹ سے میل نہیں کھاتا۔",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "ایک مخصوص Python اسکرپٹ چلائیں",
    CMD_RUN_ALL_SCRIPTS_NAME: "فولڈر میں تمام Python اسکرپٹس چلائیں",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "جمع کرائیں",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "چلانے کے لیے ایک Python اسکرپٹ منتخب کریں...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "اسکرپٹ کے لیے مخصوص ترتیبات",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "اسکرپٹ کی ترتیبات کو تازہ کریں",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "اپنے Python اسکرپٹس میں بیان کردہ ترتیبات کو دریافت کرنے یا اپ ڈیٹ کرنے کے لیے اسکرپٹس فولڈر کو دوبارہ اسکین کریں۔",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "تعریفیں تازہ کریں",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "تازہ کاری ہو رہی ہے...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python اسکرپٹس فولڈر تشکیل نہیں دیا گیا ہے۔ براہ کرم اوپر راستہ متعین کریں۔",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "تشکیل شدہ فولڈر میں قابل تعریف ترتیبات کے ساتھ کوئی اسکرپٹ نہیں ملا، یا ترتیبات کی دریافت ناکام ہوگئی۔ دوبارہ کوشش کرنے کے لیے 'تعریفیں تازہ کریں' پر کلک کریں۔",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "کے لیے ترتیبات:",
    SETTINGS_LANGUAGE_AUTO: "خودکار (Obsidian سے ملائیں)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "ترتیبات کو تازہ نہیں کیا جا سکتا: Python قابل عمل فائل نہیں ملی۔ براہ کرم یقینی بنائیں کہ Python انسٹال ہے اور PATH میں ہے۔",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "اسکرپٹ کی ترتیبات کی تعریفیں تازہ ہو رہی ہیں...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "اسکرپٹ کی ترتیبات کی تعریفیں کامیابی سے تازہ ہو گئیں!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "اسکرپٹ کی ترتیبات کی تعریفیں تازہ کرنے میں ناکام۔ تفصیلات کے لیے لاگز چیک کریں۔",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "اسکرپٹ نہیں چلایا جا سکتا: Python قابل عمل فائل نہیں ملی۔ براہ کرم انسٹالیشن اور PATH چیک کریں۔",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python اسکرپٹ کی ترتیبات کی تعریفیں تازہ کریں",
    SETTINGS_SECURITY_WARNING_TITLE: "سیکیورٹی انتباہ",
    SETTINGS_SECURITY_WARNING_TEXT: "من مانی Python اسکرپٹس چلانا خطرناک ہو سکتا ہے۔ یقینی بنائیں کہ آپ کسی بھی اسکرپٹ کے ماخذ پر بھروسہ کرتے ہیں جسے آپ چلاتے ہیں، کیونکہ وہ آپ کے سسٹم اور ڈیٹا تک رسائی حاصل کر سکتے ہیں۔ پلگ ان مصنف اور اسکرپٹ مصنفین آپ کے منتخب کردہ اسکرپٹس کی وجہ سے ہونے والے کسی بھی ڈیٹا کے نقصان یا سیکیورٹی کے مسائل کے ذمہ دار نہیں ہیں۔ اسکرپٹس کو اپنے خطرے پر چلائیں۔",
    SETTINGS_LANGUAGE_TITLE: "پلگ ان زبان",
    SETTINGS_LANGUAGE_DESC: "Python Bridge پلگ ان انٹرفیس کے لیے ڈسپلے زبان منتخب کریں۔ 'خودکار' Obsidian کی زبان کی ترتیب کی پیروی کرتا ہے۔",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "کارکردگی کا مشورہ: بیک لنک کیش",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "بڑے والٹس میں بیک لنکس حاصل کرتے وقت (get_backlinks فنکشن کا استعمال کرتے ہوئے) بہتر کارکردگی کے لیے، @mnaoumov کی طرف سے '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' کمیونٹی پلگ ان انسٹال کرنے پر غور کریں۔",
    NOTICE_INVALID_FOLDER_PATH: "غلط فولڈر کا راستہ۔ براہ کرم سیٹنگز میں ایک درست فولڈر منتخب کریں۔",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "کنفیگر شدہ پائیتھن اسکرپٹس فولڈر کا راستہ '{path}' غلط ہے یا نہیں ملا۔ سیٹنگ صاف کی جا رہی ہے۔",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "اسکرپٹ فعال ہے",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "اس اسکرپٹ کو کمانڈز، شارٹ کٹس، یا 'سب چلائیں' کے ذریعے عمل میں لانے کی اجازت دیں۔",
    NOTICE_SCRIPT_DISABLED: "اسکرپٹ '{scriptName}' سیٹنگز میں غیر فعال ہے اور اسے عمل میں نہیں لایا جا سکتا۔",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "اسٹارٹ اپ پر چلائیں",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "جب Obsidian شروع ہو تو اس اسکرپٹ کو خود بخود چلائیں (صرف اس صورت میں جب 'اسکرپٹ فعال' بھی آن ہو)۔",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "اسٹارٹ اپ میں تاخیر (سیکنڈ)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian شروع ہونے کے بعد اسکرپٹ چلانے سے پہلے اتنے سیکنڈ انتظار کریں ('اسٹارٹ اپ پر چلائیں' آن ہونے پر ہی لاگو ہوتا ہے)۔ بغیر کسی تاخیر کے 0 استعمال کریں۔",
    SETTINGS_AUTO_PYTHONPATH_NAME: "لائبریری کے لیے PYTHONPATH خودکار طور پر سیٹ کریں",
    SETTINGS_AUTO_PYTHONPATH_DESC: "اسکرپٹ چلاتے وقت پلگ ان ڈائرکٹری کو خودکار طور پر PYTHONPATH میں شامل کریں، جس سے Python لائبریری کی براہ راست درآمد ممکن ہو (تجویز کردہ)۔ اگر غیر فعال ہے تو، آپ کو ObsidianPluginDevPythonToJS.py کو اپنے اسکرپٹ فولڈر میں کاپی کرنا ہوگا یا sys.path کو دستی طور پر منظم کرنا ہوگا۔",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "خودکار PYTHONPATH غیر فعال ہے۔ یقینی بنائیں کہ ObsidianPluginDevPythonToJS.py آپ کے اسکرپٹ فولڈر میں ہے یا sys.path کو دستی طور پر منظم کریں۔",
};

// vi.ts - vi translations
// WARNING: Auto-generated translations below. Please review and correct.
var vi = {
    SETTINGS_TAB_TITLE: "Cài đặt Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Thư mục Script Python",
    SETTINGS_FOLDER_DESC: "Đường dẫn đến thư mục chứa các script Python của bạn (tuyệt đối hoặc tương đối so với vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts hoặc ./scripts-python",
    SETTINGS_PORT_TITLE: "Cổng Máy chủ HTTP",
    SETTINGS_PORT_DESC: "Cổng cho máy chủ HTTP cục bộ (1024-65535). Yêu cầu khởi động lại hoặc lưu cài đặt để áp dụng.",
    SETTINGS_CACHE_TITLE: "Tắt Bộ đệm Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Chạy Python với cờ \"-B\" để ngăn ghi tệp .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Cổng HTTP đã thay đổi thành",
    NOTICE_PORT_CHANGED_SUFFIX: "Đang khởi động lại máy chủ...",
    NOTICE_PYTHON_MISSING_TITLE: "Lỗi Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Không tìm thấy tệp thực thi Python trong PATH.\\nVui lòng cài đặt Python và đảm bảo nó được thêm vào biến môi trường PATH của hệ thống để plugin chạy script.\\nCác tính năng plugin yêu cầu Python sẽ không khả dụng.",
    NOTICE_REQUESTS_MISSING_TITLE: "Lỗi Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Thư viện Python bắt buộc 'requests' chưa được cài đặt cho",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nVui lòng cài đặt bằng cách chạy:\\n{pythonCmd} -m pip install requests\\nCác tính năng plugin yêu cầu Python sẽ không khả dụng cho đến khi được cài đặt.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Cổng HTTP được cấu hình không hợp lệ:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Máy chủ chưa được khởi động. Vui lòng cấu hình cổng hợp lệ (1-65535) trong cài đặt.",
    NOTICE_PORT_IN_USE_PREFIX: "Cổng",
    NOTICE_PORT_IN_USE_SUFFIX: "đã được sử dụng. Vui lòng chọn một cổng khác trong cài đặt hoặc đóng ứng dụng khác đang sử dụng nó. Máy chủ chưa được khởi động.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Không thể khởi động máy chủ trên cổng",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Cổng không hợp lệ. Vui lòng nhập một số từ 0 đến 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Cổng HTTP đã thay đổi (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Script có thể nhắm mục tiêu cổng cũ nếu đã chạy hoặc được khởi chạy từ bên ngoài.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Không tìm thấy script Python hoặc không phải là tệp:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Lỗi truy cập tệp script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Đang chạy script Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Lỗi khi chạy",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "với",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "thất bại với mã thoát",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Kiểm tra nhật ký console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Không thể tìm thấy tệp thực thi Python hợp lệ. Đã thử:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Vui lòng đảm bảo Python được cài đặt và có thể truy cập thông qua PATH của hệ thống (hoặc trình khởi chạy 'py' trên Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Không tìm thấy thư mục script Python hoặc không hợp lệ. Vui lòng kiểm tra cài đặt plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Lỗi đọc thư mục script:",
    NOTICE_NO_SCRIPTS_FOUND: "Không tìm thấy script Python (.py) nào trong thư mục đã cấu hình.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Đang chạy",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Đầu vào không khớp với định dạng yêu cầu.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Chạy một script Python cụ thể",
    CMD_RUN_ALL_SCRIPTS_NAME: "Chạy tất cả script Python trong thư mục",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Gửi",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Chọn một script Python để chạy...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Cài đặt Dành riêng cho Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Làm mới Cài đặt Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Quét lại thư mục script để khám phá hoặc cập nhật các cài đặt được xác định trong script Python của bạn.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Làm mới Định nghĩa",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Đang làm mới...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Thư mục script Python chưa được cấu hình. Vui lòng đặt đường dẫn ở trên.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Không tìm thấy script nào có cài đặt có thể xác định trong thư mục đã cấu hình hoặc khám phá cài đặt không thành công. Nhấp vào 'Làm mới Định nghĩa' để thử lại.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Cài đặt cho:",
    SETTINGS_LANGUAGE_AUTO: "Tự động (Khớp với Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Không thể làm mới cài đặt: Không tìm thấy tệp thực thi Python. Vui lòng đảm bảo Python được cài đặt và nằm trong PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Đang làm mới định nghĩa cài đặt script...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Đã làm mới thành công định nghĩa cài đặt script!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Không thể làm mới định nghĩa cài đặt script. Kiểm tra nhật ký để biết chi tiết.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Không thể chạy script: Không tìm thấy tệp thực thi Python. Vui lòng kiểm tra cài đặt và PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Làm mới định nghĩa cài đặt script Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Cảnh báo Bảo mật",
    SETTINGS_SECURITY_WARNING_TEXT: "Việc thực thi các script Python tùy ý có thể tiềm ẩn rủi ro. Hãy đảm bảo bạn tin tưởng nguồn gốc của bất kỳ script nào bạn chạy, vì chúng có thể truy cập hệ thống và dữ liệu của bạn. Tác giả plugin và tác giả script không chịu trách nhiệm về bất kỳ mất mát dữ liệu hoặc vấn đề bảo mật nào do các script bạn chọn thực thi gây ra. Chạy script với rủi ro của riêng bạn.",
    SETTINGS_LANGUAGE_TITLE: "Ngôn ngữ Plugin",
    SETTINGS_LANGUAGE_DESC: "Chọn ngôn ngữ hiển thị cho giao diện plugin Python Bridge. 'Tự động' tuân theo cài đặt ngôn ngữ của Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Mẹo hiệu suất: Bộ đệm Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Để cải thiện hiệu suất khi truy xuất backlink (sử dụng hàm get_backlinks) trong các kho lớn, hãy cân nhắc cài đặt plugin cộng đồng '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' của @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Đường dẫn thư mục không hợp lệ. Vui lòng chọn một thư mục hợp lệ trong cài đặt.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Đường dẫn thư mục tập lệnh Python đã định cấu hình '{path}' không hợp lệ hoặc không tìm thấy. Đang xóa cài đặt.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Đã Bật",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Cho phép script này được thực thi thông qua lệnh, phím tắt hoặc 'Chạy Tất cả'.",
    NOTICE_SCRIPT_DISABLED: "Script '{scriptName}' đã bị tắt trong cài đặt và không thể thực thi.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Chạy khi khởi động",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Tự động chạy tập lệnh này khi Obsidian khởi động (chỉ khi 'Tập lệnh được bật' cũng đang bật).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Độ trễ khởi động (giây)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Đợi số giây này sau khi Obsidian khởi động trước khi chạy tập lệnh (chỉ áp dụng nếu 'Chạy khi khởi động' đang bật). Sử dụng 0 nếu không có độ trễ.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Tự động đặt PYTHONPATH cho Thư viện",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Tự động thêm thư mục plugin vào PYTHONPATH khi chạy script, cho phép nhập trực tiếp thư viện Python (Khuyến nghị). Nếu bị tắt, bạn phải sao chép ObsidianPluginDevPythonToJS.py vào thư mục script của mình hoặc quản lý sys.path thủ công.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH tự động đã bị tắt. Đảm bảo ObsidianPluginDevPythonToJS.py nằm trong thư mục script của bạn hoặc quản lý sys.path thủ công.",
};

// th.ts - th translations
// WARNING: Auto-generated translations below. Please review and correct.
var th = {
    SETTINGS_TAB_TITLE: "การตั้งค่า Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "โฟลเดอร์สคริปต์ Python",
    SETTINGS_FOLDER_DESC: "พาธไปยังโฟลเดอร์ที่มีสคริปต์ Python ของคุณ (สัมบูรณ์หรือสัมพัทธ์กับ vault)",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts หรือ ./scripts-python",
    SETTINGS_PORT_TITLE: "พอร์ตเซิร์ฟเวอร์ HTTP",
    SETTINGS_PORT_DESC: "พอร์ตสำหรับเซิร์فเวอร์ HTTP ในเครื่อง (1024-65535) ต้องรีสตาร์ทหรือบันทึกการตั้งค่าเพื่อนำไปใช้",
    SETTINGS_CACHE_TITLE: "ปิดใช้งานแคช Python (__pycache__)",
    SETTINGS_CACHE_DESC: "รัน Python ด้วยแฟล็ก \"-B\" เพื่อป้องกันการเขียนไฟล์ .pyc",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "พอร์ต HTTP เปลี่ยนเป็น",
    NOTICE_PORT_CHANGED_SUFFIX: "กำลังรีสตาร์ทเซิร์ฟเวอร์...",
    NOTICE_PYTHON_MISSING_TITLE: "ข้อผิดพลาด Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "ไม่พบไฟล์ปฏิบัติการ Python ใน PATH\\nโปรดติดตั้ง Python และตรวจสอบให้แน่ใจว่าได้เพิ่มลงในตัวแปรสภาพแวดล้อม PATH ของระบบเพื่อให้ปลั๊กอินรันสคริปต์ได้\\nคุณสมบัติปลั๊กอินที่ต้องใช้ Python จะไม่สามารถใช้งานได้",
    NOTICE_REQUESTS_MISSING_TITLE: "ข้อผิดพลาด Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "ไลบรารี Python ที่จำเป็น 'requests' ไม่ได้ติดตั้งสำหรับ",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nโปรดติดตั้งโดยรัน:\\n{pythonCmd} -m pip install requests\\nคุณสมบัติปลั๊กอินที่ต้องใช้ Python จะไม่สามารถใช้งานได้จนกว่าจะติดตั้ง",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "กำหนดค่าพอร์ต HTTP ไม่ถูกต้อง:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "เซิร์ฟเวอร์ยังไม่ได้เริ่ม โปรดกำหนดค่าพอร์ตที่ถูกต้อง (1-65535) ในการตั้งค่า",
    NOTICE_PORT_IN_USE_PREFIX: "พอร์ต",
    NOTICE_PORT_IN_USE_SUFFIX: "มีการใช้งานอยู่แล้ว โปรดเลือกพอร์ตอื่นในการตั้งค่าหรือปิดแอปพลิเคชันอื่นที่ใช้งานอยู่ เซิร์ฟเวอร์ยังไม่ได้เริ่ม",
    NOTICE_SERVER_START_FAILED_PREFIX: "ไม่สามารถเริ่มเซิร์ฟเวอร์บนพอร์ต",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "พอร์ตไม่ถูกต้อง โปรดป้อนตัวเลขระหว่าง 0 ถึง 65535",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: พอร์ต HTTP เปลี่ยนไป (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ") สคริปต์อาจกำหนดเป้าหมายไปที่พอร์ตเก่าหากกำลังทำงานอยู่แล้วหรือเปิดใช้งานจากภายนอก",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "ไม่พบสคริปต์ Python หรือไม่ใช่ไฟล์:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "ข้อผิดพลาดในการเข้าถึงไฟล์สคริปต์:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "กำลังรันสคริปต์ Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "ข้อผิดพลาดในการรัน",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "ด้วย",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "ล้มเหลวด้วยรหัสออก",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "ตรวจสอบบันทึกคอนโซล",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "ไม่พบไฟล์ปฏิบัติการ Python ที่ถูกต้อง ลอง:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "โปรดตรวจสอบให้แน่ใจว่า Python ได้รับการติดตั้งและสามารถเข้าถึงได้ผ่าน PATH ของระบบ (หรือตัวเรียกใช้ 'py' บน Windows)",
    NOTICE_SCRIPTS_FOLDER_INVALID: "ไม่พบโฟลเดอร์สคริปต์ Python หรือไม่ถูกต้อง โปรดตรวจสอบการตั้งค่าปลั๊กอิน",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "ข้อผิดพลาดในการอ่านโฟลเดอร์สคริปต์:",
    NOTICE_NO_SCRIPTS_FOUND: "ไม่พบสคริปต์ Python (.py) ในโฟลเดอร์ที่กำหนดค่าไว้",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "กำลังรัน",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "สคริปต์ Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "อินพุตไม่ตรงกับรูปแบบที่ต้องการ",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "รันสคริปต์ Python ที่ระบุ",
    CMD_RUN_ALL_SCRIPTS_NAME: "รันสคริปต์ Python ทั้งหมดในโฟลเดอร์",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "ส่ง",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "เลือกสคริปต์ Python ที่จะรัน...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "การตั้งค่าเฉพาะสคริปต์",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "รีเฟรชการตั้งค่าสคริปต์",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "สแกนโฟลเดอร์สคริปต์อีกครั้งเพื่อค้นหาหรืออัปเดตการตั้งค่าที่กำหนดไว้ในสคริปต์ Python ของคุณ",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "รีเฟรชคำจำกัดความ",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "กำลังรีเฟรช...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "โฟลเดอร์สคริปต์ Python ไม่ได้กำหนดค่าไว้ โปรดตั้งค่าพาธด้านบน",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "ไม่พบสคริปต์ที่มีการตั้งค่าที่กำหนดได้ในโฟลเดอร์ที่กำหนดค่าไว้ หรือการค้นหาการตั้งค่าล้มเหลว คลิก 'รีเฟรชคำจำกัดความ' เพื่อลองอีกครั้ง",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "การตั้งค่าสำหรับ:",
    SETTINGS_LANGUAGE_AUTO: "อัตโนมัติ (ตรงกับ Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "ไม่สามารถรีเฟรชการตั้งค่า: ไม่พบไฟล์ปฏิบัติการ Python โปรดตรวจสอบให้แน่ใจว่า Python ได้รับการติดตั้งและอยู่ใน PATH",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "กำลังรีเฟรชคำจำกัดความการตั้งค่าสคริปต์...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "รีเฟรชคำจำกัดความการตั้งค่าสคริปต์สำเร็จแล้ว!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "ไม่สามารถรีเฟรชคำจำกัดความการตั้งค่าสคริปต์ ตรวจสอบบันทึกเพื่อดูรายละเอียด",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "ไม่สามารถรันสคริปต์: ไม่พบไฟล์ปฏิบัติการ Python โปรดตรวจสอบการติดตั้งและ PATH",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "รีเฟรชคำจำกัดความการตั้งค่าสคริปต์ Python",
    SETTINGS_SECURITY_WARNING_TITLE: "คำเตือนด้านความปลอดภัย",
    SETTINGS_SECURITY_WARNING_TEXT: "การรันสคริปต์ Python ใดๆ อาจมีความเสี่ยง โปรดตรวจสอบให้แน่ใจว่าคุณเชื่อถือแหล่งที่มาของสคริปต์ใดๆ ที่คุณรัน เนื่องจากสามารถเข้าถึงระบบและข้อมูลของคุณได้ ผู้เขียนปลั๊กอินและผู้เขียนสคริปต์จะไม่รับผิดชอบต่อการสูญหายของข้อมูลหรือปัญหาด้านความปลอดภัยใดๆ ที่เกิดจากสคริปต์ที่คุณเลือกที่จะรัน รันสคริปต์ด้วยความเสี่ยงของคุณเอง",
    SETTINGS_LANGUAGE_TITLE: "ภาษาปลั๊กอิน",
    SETTINGS_LANGUAGE_DESC: "เลือกภาษาที่แสดงสำหรับอินเทอร์เฟซปลั๊กอิน Python Bridge 'อัตโนมัติ' จะเป็นไปตามการตั้งค่าภาษาของ Obsidian",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "เคล็ดลับประสิทธิภาพ: Backlink Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "เพื่อประสิทธิภาพที่ดีขึ้นในการดึงข้อมูล Backlink (โดยใช้ฟังก์ชัน get_backlinks) ใน Vault ขนาดใหญ่ ลองพิจารณาติดตั้งปลั๊กอินชุมชน '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' โดย @mnaoumov",
    NOTICE_INVALID_FOLDER_PATH: "เส้นทางโฟลเดอร์ไม่ถูกต้อง โปรดเลือกโฟลเดอร์ที่ถูกต้องในการตั้งค่า",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "เส้นทางโฟลเดอร์สคริปต์ Python ที่กำหนดค่า '{path}' ไม่ถูกต้องหรือไม่พบ กำลังล้างการตั้งค่า",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "สคริปต์เปิดใช้งานอยู่",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "อนุญาตให้สคริปต์นี้ทำงานผ่านคำสั่ง ทางลัด หรือ 'เรียกใช้ทั้งหมด'",
    NOTICE_SCRIPT_DISABLED: "สคริปต์ '{scriptName}' ถูกปิดใช้งานในการตั้งค่าและไม่สามารถดำเนินการได้",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "ทำงานเมื่อเริ่มต้น",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "เรียกใช้สคริปต์นี้โดยอัตโนมัติเมื่อ Obsidian เริ่มทำงาน (เฉพาะเมื่อ 'เปิดใช้งานสคริปต์' เปิดอยู่ด้วย)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "ความล่าช้าในการเริ่มต้น (วินาที)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "รอเป็นจำนวนวินาทีหลังจาก Obsidian เริ่มทำงานก่อนที่จะเรียกใช้สคริปต์ (ใช้ได้เฉพาะเมื่อ 'ทำงานเมื่อเริ่มต้น' เปิดอยู่) ใช้ 0 หากไม่ต้องการความล่าช้า",
    SETTINGS_AUTO_PYTHONPATH_NAME: "ตั้งค่า PYTHONPATH อัตโนมัติสำหรับไลบรารี",
    SETTINGS_AUTO_PYTHONPATH_DESC: "เพิ่มไดเรกทอรีปลั๊กอินไปยัง PYTHONPATH โดยอัตโนมัติเมื่อเรียกใช้สคริปต์ ทำให้สามารถนำเข้าไลบรารี Python ได้โดยตรง (แนะนำ) หากปิดใช้งาน คุณต้องคัดลอก ObsidianPluginDevPythonToJS.py ไปยังโฟลเดอร์สคริปต์ของคุณ หรือจัดการ sys.path ด้วยตนเอง",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "ปิดใช้งาน PYTHONPATH อัตโนมัติแล้ว ตรวจสอบให้แน่ใจว่า ObsidianPluginDevPythonToJS.py อยู่ในโฟลเดอร์สคริปต์ของคุณ หรือจัดการ sys.path ด้วยตนเอง",
};

// fil.ts - fil translations
// WARNING: Auto-generated translations below. Please review and correct.
var fil = {
    SETTINGS_TAB_TITLE: "Mga Setting ng Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folder ng mga Python Script",
    SETTINGS_FOLDER_DESC: "Path sa folder na naglalaman ng iyong mga Python script (absolute o relative sa vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts o ./scripts-python",
    SETTINGS_PORT_TITLE: "Port ng HTTP Server",
    SETTINGS_PORT_DESC: "Port para sa lokal na HTTP server (1024-65535). Nangangailangan ng restart o pag-save ng mga setting para mailapat.",
    SETTINGS_CACHE_TITLE: "Huwag paganahin ang Python Cache (__pycache__)",
    SETTINGS_CACHE_DESC: "Patakbuhin ang Python gamit ang \"-B\" flag para maiwasan ang pagsulat ng mga .pyc file.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Nagbago ang HTTP port sa",
    NOTICE_PORT_CHANGED_SUFFIX: "Nire-restart ang server...",
    NOTICE_PYTHON_MISSING_TITLE: "Error sa Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Hindi mahanap ang Python executable sa PATH.\\nPaki-install ang Python at tiyaking naidagdag ito sa PATH environment variable ng iyong system para mapatakbo ng plugin ang mga script.\\nHindi magiging available ang mga feature ng plugin na nangangailangan ng Python.",
    NOTICE_REQUESTS_MISSING_TITLE: "Error sa Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Ang kinakailangang Python library na 'requests' ay hindi naka-install para sa",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nPaki-install ito sa pamamagitan ng pagpapatakbo ng:\\n{pythonCmd} -m pip install requests\\nHindi magiging available ang mga feature ng plugin na nangangailangan ng Python hanggang sa mai-install ito.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Hindi wastong HTTP port ang na-configure:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Hindi nagsimula ang server. Paki-configure ang wastong port (1-65535) sa mga setting.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "ay ginagamit na. Pakiusap pumili ng ibang port sa mga setting o isara ang ibang application na gumagamit nito. Hindi nagsimula ang server.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Nabigong simulan ang server sa port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Hindi wastong port. Mangyaring maglagay ng numero sa pagitan ng 0 at 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Nagbago ang HTTP Port (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Maaaring i-target ng script ang lumang port kung ito ay tumatakbo na o inilunsad sa labas.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Hindi mahanap ang Python script o hindi ito isang file:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Error sa pag-access ng script file:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Pinapatakbo ang Python script:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Error sa pagpapatakbo",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "gamit ang",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "nabigo gamit ang exit code",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Suriin ang mga log ng console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Hindi makahanap ng wastong Python executable. Sinubukan:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Pakitiyak na naka-install ang Python at accessible sa pamamagitan ng PATH ng iyong system (o ang 'py' launcher sa Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Hindi mahanap ang folder ng mga Python script o hindi wasto. Paki-check ang mga setting ng plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Error sa pagbasa ng folder ng mga script:",
    NOTICE_NO_SCRIPTS_FOUND: "Walang nahanap na Python script (.py) sa na-configure na folder.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Pinapatakbo",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python script...",
    NOTICE_INPUT_VALIDATION_FAILED: "Hindi tumutugma ang input sa kinakailangang format.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Patakbuhin ang isang partikular na Python script",
    CMD_RUN_ALL_SCRIPTS_NAME: "Patakbuhin ang lahat ng Python script sa folder",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Ipasa",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Pumili ng Python script na patatakbuhin...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Mga Setting na Partikular sa Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "I-refresh ang Mga Setting ng Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "I-scan muli ang folder ng mga script para matuklasan o ma-update ang mga setting na tinukoy sa loob ng iyong mga Python script.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "I-refresh ang Mga Depinisyon",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Nire-refresh...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Hindi naka-configure ang folder ng mga Python script. Paki-set ang path sa itaas.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Walang nahanap na script na may mga setting na maaaring tukuyin sa na-configure na folder, o nabigo ang pagtuklas ng mga setting. I-click ang 'I-refresh ang Mga Depinisyon' para subukang muli.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Mga Setting para sa:",
    SETTINGS_LANGUAGE_AUTO: "Awtomatiko (Itugma sa Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Hindi ma-refresh ang mga setting: Hindi mahanap ang Python executable. Pakitiyak na naka-install ang Python at nasa PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Nire-refresh ang mga depinisyon ng setting ng script...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Matagumpay na na-refresh ang mga depinisyon ng setting ng script!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Nabigong i-refresh ang mga depinisyon ng setting ng script. Suriin ang mga log para sa mga detalye.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Hindi mapatakbo ang script: Hindi mahanap ang Python executable. Paki-check ang instalasyon at PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "I-refresh ang mga depinisyon ng setting ng Python script",
    SETTINGS_SECURITY_WARNING_TITLE: "Babala sa Seguridad",
    SETTINGS_SECURITY_WARNING_TEXT: "Maaaring mapanganib ang pagpapatakbo ng arbitrary na mga Python script. Tiyaking pinagkakatiwalaan mo ang pinagmulan ng anumang script na iyong pinapatakbo, dahil maaari nilang ma-access ang iyong system at data. Ang may-akda ng plugin at mga may-akda ng script ay hindi responsable para sa anumang pagkawala ng data o mga isyu sa seguridad na dulot ng mga script na pinili mong patakbuhin. Patakbuhin ang mga script sa iyong sariling panganib.",
    SETTINGS_LANGUAGE_TITLE: "Wika ng Plugin",
    SETTINGS_LANGUAGE_DESC: "Piliin ang display language para sa interface ng Python Bridge plugin. Ang 'Awtomatiko' ay sumusunod sa setting ng wika ng Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Tip sa Performance: Backlink Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Para sa pinahusay na performance kapag kumukuha ng mga backlink (gamit ang get_backlinks function) sa malalaking vault, isaalang-alang ang pag-install ng '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' community plugin ni @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Hindi wastong path ng folder. Mangyaring pumili ng wastong folder sa mga setting.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Ang naka-configure na path ng folder ng mga script ng Python '{path}' ay hindi wasto o hindi natagpuan. Kinaklaro ang setting.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Naka-enable ang Script",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Payagan ang script na ito na ma-execute sa pamamagitan ng mga command, shortcut, o 'Run All'.",
    NOTICE_SCRIPT_DISABLED: "Naka-disable ang script na '{scriptName}' sa mga setting at hindi ma-execute.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Patakbuhin sa Startup",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Awtomatikong patakbuhin ang script na ito kapag nagsimula ang Obsidian (kung naka-on din ang 'Script Enabled').",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Pagkaantala sa Startup (segundo)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Maghintay ng ganitong bilang ng segundo pagkatapos magsimula ang Obsidian bago patakbuhin ang script (nalalapat lamang kung naka-on ang 'Patakbuhin sa Startup'). Gumamit ng 0 para walang pagkaantala.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Awtomatikong itakda ang PYTHONPATH para sa Library",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Awtomatikong idagdag ang direktoryo ng plugin sa PYTHONPATH kapag nagpapatakbo ng mga script, na nagpapahintulot sa direktang pag-import ng Python library (Inirerekomenda). Kung hindi pinagana, dapat mong kopyahin ang ObsidianPluginDevPythonToJS.py sa iyong folder ng mga script o manu-manong pamahalaan ang sys.path.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Hindi pinagana ang awtomatikong PYTHONPATH. Tiyaking nasa iyong script folder ang ObsidianPluginDevPythonToJS.py o manu-manong pamahalaan ang sys.path.",
};

// fa.ts - fa translations
// WARNING: Auto-generated translations below. Please review and correct.
var fa = {
    SETTINGS_TAB_TITLE: "تنظیمات Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "پوشه اسکریپت‌های پایتون",
    SETTINGS_FOLDER_DESC: "مسیر پوشه‌ای که حاوی اسکریپت‌های پایتون شماست (مطلق یا نسبی به والت).",
    SETTINGS_FOLDER_PLACEHOLDER: "/path/to/your/scripts یا ./scripts-python",
    SETTINGS_PORT_TITLE: "پورت سرور HTTP",
    SETTINGS_PORT_DESC: "پورت برای سرور HTTP محلی (1024-65535). برای اعمال نیاز به راه‌اندازی مجدد یا ذخیره تنظیمات دارد.",
    SETTINGS_CACHE_TITLE: "غیرفعال کردن کش پایتون (__pycache__)",
    SETTINGS_CACHE_DESC: "پایتون را با پرچم \"-B\" اجرا کنید تا از نوشتن فایل‌های .pyc جلوگیری شود.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "پورت HTTP به",
    NOTICE_PORT_CHANGED_SUFFIX: "تغییر کرد. در حال راه‌اندازی مجدد سرور...",
    NOTICE_PYTHON_MISSING_TITLE: "خطای Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "فایل اجرایی پایتون در PATH یافت نشد.\\nلطفاً پایتون را نصب کنید و اطمینان حاصل کنید که به متغیر محیطی PATH سیستم شما اضافه شده است تا افزونه بتواند اسکریپت‌ها را اجرا کند.\\nویژگی‌های افزونه که به پایتون نیاز دارند در دسترس نخواهند بود.",
    NOTICE_REQUESTS_MISSING_TITLE: "خطای Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "کتابخانه پایتون مورد نیاز 'requests' برای",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "نصب نشده است.\\nلطفاً آن را با اجرای دستور زیر نصب کنید:\\n{pythonCmd} -m pip install requests\\nویژگی‌های افزونه که به پایتون نیاز دارند تا زمان نصب در دسترس نخواهند بود.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "پورت HTTP نامعتبر پیکربندی شده است:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "سرور شروع نشد. لطفاً یک پورت معتبر (1-65535) را در تنظیمات پیکربندی کنید.",
    NOTICE_PORT_IN_USE_PREFIX: "پورت",
    NOTICE_PORT_IN_USE_SUFFIX: "در حال حاضر استفاده می‌شود. لطفاً پورت دیگری را در تنظیمات انتخاب کنید یا برنامه دیگری که از آن استفاده می‌کند را ببندید. سرور شروع نشد.",
    NOTICE_SERVER_START_FAILED_PREFIX: "شروع به کار سرور روی پورت",
    NOTICE_SERVER_START_FAILED_SUFFIX: "ناموفق بود.",
    NOTICE_INVALID_PORT_RANGE: "پورت نامعتبر است. لطفاً عددی بین 0 تا 65535 وارد کنید.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: پورت HTTP تغییر کرد (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). اسکریپت ممکن است پورت قدیمی را هدف قرار دهد اگر از قبل در حال اجرا باشد یا از خارج راه‌اندازی شده باشد.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "اسکریپت پایتون یافت نشد یا یک فایل نیست:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "خطا در دسترسی به فایل اسکریپت:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "در حال اجرای اسکریپت پایتون:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "خطا در اجرای",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "با",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "با کد خروج",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "ناموفق بود. لاگ‌های کنسول را بررسی کنید.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "فایل اجرایی پایتون معتبری یافت نشد. تلاش شد:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "لطفاً اطمینان حاصل کنید که پایتون نصب شده و از طریق PATH سیستم شما (یا لانچر 'py' در ویندوز) قابل دسترسی است.",
    NOTICE_SCRIPTS_FOLDER_INVALID: "پوشه اسکریپت‌های پایتون یافت نشد یا نامعتبر است. لطفاً تنظیمات افزونه را بررسی کنید.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "خطا در خواندن پوشه اسکریپت‌ها:",
    NOTICE_NO_SCRIPTS_FOUND: "هیچ اسکریپت پایتون (.py) در پوشه پیکربندی شده یافت نشد.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "در حال اجرا",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "اسکریپت پایتون...",
    NOTICE_INPUT_VALIDATION_FAILED: "ورودی با فرمت مورد نیاز مطابقت ندارد.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "اجرای یک اسکریپت پایتون خاص",
    CMD_RUN_ALL_SCRIPTS_NAME: "اجرای تمام اسکریپت‌های پایتون در پوشه",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "ارسال",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "یک اسکریپت پایتون برای اجرا انتخاب کنید...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "تنظیمات مخصوص اسکریپت",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "بازخوانی تنظیمات اسکریپت",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "پوشه اسکریپت‌ها را برای کشف یا به‌روزرسانی تنظیمات تعریف شده در اسکریپت‌های پایتون خود دوباره اسکن کنید.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "بازخوانی تعاریف",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "در حال بازخوانی...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "پوشه اسکریپت‌های پایتون پیکربندی نشده است. لطفاً مسیر را در بالا تنظیم کنید.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "هیچ اسکریپتی با تنظیمات قابل تعریف در پوشه پیکربندی شده یافت نشد، یا کشف تنظیمات ناموفق بود. برای تلاش مجدد روی 'بازخوانی تعاریف' کلیک کنید.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "تنظیمات برای:",
    SETTINGS_LANGUAGE_AUTO: "خودکار (مطابق با Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "نمی‌توان تنظیمات را بازخوانی کرد: فایل اجرایی پایتون یافت نشد. لطفاً اطمینان حاصل کنید که پایتون نصب شده و در PATH قرار دارد.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "در حال بازخوانی تعاریف تنظیمات اسکریپت...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "تعاریف تنظیمات اسکریپت با موفقیت بازخوانی شد!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "بازخوانی تعاریف تنظیمات اسکریپت ناموفق بود. برای جزئیات لاگ‌ها را بررسی کنید.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "نمی‌توان اسکریپت را اجرا کرد: فایل اجرایی پایتون یافت نشد. لطفاً نصب و PATH را بررسی کنید.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "بازخوانی تعاریف تنظیمات اسکریپت پایتون",
    SETTINGS_SECURITY_WARNING_TITLE: "هشدار امنیتی",
    SETTINGS_SECURITY_WARNING_TEXT: "اجرای اسکریپت‌های پایتون دلخواه می‌تواند خطرناک باشد. اطمینان حاصل کنید که به منبع هر اسکریپتی که اجرا می‌کنید اعتماد دارید، زیرا آنها می‌توانند به سیستم و داده‌های شما دسترسی پیدا کنند. نویسنده افزونه و نویسندگان اسکریپت مسئولیتی در قبال از دست دادن داده‌ها یا مشکلات امنیتی ناشی از اسکریپت‌هایی که برای اجرا انتخاب می‌کنید، ندارند. اسکریپت‌ها را با مسئولیت خود اجرا کنید.",
    SETTINGS_LANGUAGE_TITLE: "زبان افزونه",
    SETTINGS_LANGUAGE_DESC: "زبان نمایش رابط کاربری افزونه Python Bridge را انتخاب کنید. 'خودکار' از تنظیمات زبان Obsidian پیروی می‌کند.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "نکته عملکرد: حافظه پنهان بک‌لینک",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "برای بهبود عملکرد هنگام بازیابی بک‌لینک‌ها (با استفاده از تابع get_backlinks) در والت‌های بزرگ، نصب افزونه جامعه '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' توسط @mnaoumov را در نظر بگیرید.",
    NOTICE_INVALID_FOLDER_PATH: "مسیر پوشه نامعتبر است. لطفاً یک پوشه معتبر در تنظیمات انتخاب کنید.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "مسیر پوشه اسکریپت پایتون پیکربندی شده '{path}' نامعتبر است یا یافت نشد. در حال پاک کردن تنظیمات.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "اسکریپت فعال شد",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "اجازه دهید این اسکریپت از طریق دستورات، میانبرها یا «اجرای همه» اجرا شود.",
    NOTICE_SCRIPT_DISABLED: "اسکریپت '{scriptName}' در تنظیمات غیرفعال است و قابل اجرا نیست.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "اجرا در هنگام راه‌اندازی",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "این اسکریپت را به طور خودکار هنگام شروع Obsidian اجرا کنید (فقط در صورتی که 'اسکریپت فعال' نیز روشن باشد).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "تأخیر راه‌اندازی (ثانیه)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "این تعداد ثانیه پس از شروع Obsidian صبر کنید و سپس اسکریپت را اجرا کنید (فقط در صورتی اعمال می‌شود که 'اجرا در هنگام راه‌اندازی' روشن باشد). برای عدم تأخیر از 0 استفاده کنید.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "تنظیم خودکار PYTHONPATH برای کتابخانه",
    SETTINGS_AUTO_PYTHONPATH_DESC: "هنگام اجرای اسکریپت‌ها، دایرکتوری افزونه را به‌طور خودکار به PYTHONPATH اضافه می‌کند و امکان وارد کردن مستقیم کتابخانه پایتون را فراهم می‌کند (توصیه می‌شود). اگر غیرفعال باشد، باید ObsidianPluginDevPythonToJS.py را در پوشه اسکریپت‌های خود کپی کنید یا sys.path را به‌صورت دستی مدیریت کنید.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH خودکار غیرفعال شد. اطمینان حاصل کنید که ObsidianPluginDevPythonToJS.py در پوشه اسکریپت شما قرار دارد یا sys.path را به صورت دستی مدیریت کنید.",
};

// ms.ts - ms translations
// WARNING: Auto-generated translations below. Please review and correct.
var ms = {
    SETTINGS_TAB_TITLE: "Tetapan Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folder Skrip Python",
    SETTINGS_FOLDER_DESC: "Laluan ke folder yang mengandungi skrip Python anda (mutlak atau relatif kepada vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/laluan/ke/skrip/anda atau ./skrip-python",
    SETTINGS_PORT_TITLE: "Port Pelayan HTTP",
    SETTINGS_PORT_DESC: "Port untuk pelayan HTTP tempatan (1024-65535). Memerlukan mulakan semula atau simpan tetapan untuk digunakan.",
    SETTINGS_CACHE_TITLE: "Lumpuhkan Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Jalankan Python dengan bendera \"-B\" untuk mengelakkan penulisan fail .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Port HTTP ditukar kepada",
    NOTICE_PORT_CHANGED_SUFFIX: "Memulakan semula pelayan...",
    NOTICE_PYTHON_MISSING_TITLE: "Ralat Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Fail boleh laku Python tidak ditemui dalam PATH.\\nSila pasang Python dan pastikan ia ditambahkan pada pembolehubah persekitaran PATH sistem anda agar plugin dapat menjalankan skrip.\\nCiri plugin yang memerlukan Python tidak akan tersedia.",
    NOTICE_REQUESTS_MISSING_TITLE: "Ralat Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Pustaka Python yang diperlukan 'requests' tidak dipasang untuk",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nSila pasangkannya dengan menjalankan:\\n{pythonCmd} -m pip install requests\\nCiri plugin yang memerlukan Python tidak akan tersedia sehingga dipasang.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Port HTTP yang dikonfigurasikan tidak sah:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Pelayan tidak dimulakan. Sila konfigurasikan port yang sah (1-65535) dalam tetapan.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "sudah digunakan. Sila pilih port lain dalam tetapan atau tutup aplikasi lain yang menggunakannya. Pelayan tidak dimulakan.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Gagal memulakan pelayan pada port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Port tidak sah. Sila masukkan nombor antara 0 dan 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Port HTTP berubah (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skrip mungkin menyasarkan port lama jika sudah berjalan atau dilancarkan secara luaran.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Skrip Python tidak ditemui atau bukan fail:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Ralat mengakses fail skrip:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Menjalankan skrip Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Ralat menjalankan",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "dengan",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "gagal dengan kod keluar",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Semak log konsol.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Tidak dapat mencari fail boleh laku Python yang sah. Mencuba:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Sila pastikan Python dipasang dan boleh diakses melalui PATH sistem anda (atau pelancar 'py' pada Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Folder skrip Python tidak ditemui atau tidak sah. Sila semak tetapan plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Ralat membaca folder skrip:",
    NOTICE_NO_SCRIPTS_FOUND: "Tiada skrip Python (.py) ditemui dalam folder yang dikonfigurasikan.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Menjalankan",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "skrip Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Input tidak sepadan dengan format yang diperlukan.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Jalankan skrip Python tertentu",
    CMD_RUN_ALL_SCRIPTS_NAME: "Jalankan semua skrip Python dalam folder",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Hantar",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Pilih skrip Python untuk dijalankan...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Tetapan Khusus Skrip",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Segarkan Semula Tetapan Skrip",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Imbas semula folder skrip untuk menemui atau mengemas kini tetapan yang ditentukan dalam skrip Python anda.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Segarkan Semula Definisi",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Menyegarkan semula...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Folder skrip Python tidak dikonfigurasikan. Sila tetapkan laluan di atas.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Tiada skrip dengan tetapan yang boleh ditentukan ditemui dalam folder yang dikonfigurasikan, atau penemuan tetapan gagal. Klik 'Segarkan Semula Definisi' untuk mencuba lagi.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Tetapan untuk:",
    SETTINGS_LANGUAGE_AUTO: "Automatik (Padankan Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Tidak dapat menyegarkan semula tetapan: Fail boleh laku Python tidak ditemui. Sila pastikan Python dipasang dan berada dalam PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Menyegarkan semula definisi tetapan skrip...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definisi tetapan skrip berjaya disegarkan semula!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Gagal menyegarkan semula definisi tetapan skrip. Semak log untuk butiran.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Tidak dapat menjalankan skrip: Fail boleh laku Python tidak ditemui. Sila semak pemasangan dan PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Segarkan semula definisi tetapan skrip Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Amaran Keselamatan",
    SETTINGS_SECURITY_WARNING_TEXT: "Menjalankan skrip Python sewenang-wenangnya boleh berisiko. Pastikan anda mempercayai sumber mana-mana skrip yang anda jalankan, kerana ia boleh mengakses sistem dan data anda. Pengarang plugin dan pengarang skrip tidak bertanggungjawab atas sebarang kehilangan data atau isu keselamatan yang disebabkan oleh skrip yang anda pilih untuk dijalankan. Jalankan skrip atas risiko anda sendiri.",
    SETTINGS_LANGUAGE_TITLE: "Bahasa Plugin",
    SETTINGS_LANGUAGE_DESC: "Pilih bahasa paparan untuk antara muka plugin Python Bridge. 'Automatik' mengikut tetapan bahasa Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Petua Prestasi: Cache Pautan Balik",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Untuk prestasi yang lebih baik semasa mendapatkan pautan balik (menggunakan fungsi get_backlinks) dalam vault besar, pertimbangkan untuk memasang plugin komuniti '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' oleh @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Laluan folder tidak sah. Sila pilih folder yang sah dalam tetapan.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Laluan folder skrip Python yang dikonfigurasikan '{path}' tidak sah atau tidak ditemui. Mengosongkan tetapan.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skrip Didayakan",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Benarkan skrip ini dilaksanakan melalui arahan, pintasan atau 'Jalankan Semua'.",
    NOTICE_SCRIPT_DISABLED: "Skrip '{scriptName}' dilumpuhkan dalam tetapan dan tidak boleh dilaksanakan.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Jalankan semasa Permulaan",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Jalankan skrip ini secara automatik apabila Obsidian dimulakan (hanya jika 'Skrip Didayakan' juga dihidupkan).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Kelewatan Permulaan (saat)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Tunggu beberapa saat selepas Obsidian dimulakan sebelum menjalankan skrip (hanya terpakai jika 'Jalankan semasa Permulaan' dihidupkan). Gunakan 0 untuk tiada kelewatan.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Tetapkan PYTHONPATH secara automatik untuk Perpustakaan",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Tambah direktori pemalam secara automatik ke PYTHONPATH semasa menjalankan skrip, membenarkan import terus pustaka Python (Disyorkan). Jika dilumpuhkan, anda mesti menyalin ObsidianPluginDevPythonToJS.py ke folder skrip anda atau mengurus sys.path secara manual.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automatik dilumpuhkan. Pastikan ObsidianPluginDevPythonToJS.py berada dalam folder skrip anda atau urus sys.path secara manual.",
};

// nl.ts - nl translations
// WARNING: Auto-generated translations below. Please review and correct.
var nl = {
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Instellingen",
    SETTINGS_FOLDER_TITLE: "Python Scripts Map",
    SETTINGS_FOLDER_DESC: "Pad naar de map met uw Python-scripts (absoluut of relatief ten opzichte van de vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/pad/naar/uw/scripts of ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP Server Poort",
    SETTINGS_PORT_DESC: "Poort voor de lokale HTTP-server (1024-65535). Vereist herstarten of opslaan van instellingen om toe te passen.",
    SETTINGS_CACHE_TITLE: "Python Cache uitschakelen (__pycache__)",
    SETTINGS_CACHE_DESC: "Voer Python uit met de \"-B\" vlag om het schrijven van .pyc-bestanden te voorkomen.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP-poort gewijzigd naar",
    NOTICE_PORT_CHANGED_SUFFIX: "Server opnieuw opstarten...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Fout:",
    NOTICE_PYTHON_MISSING_DESC: "Python uitvoerbaar bestand niet gevonden in PATH.\\nInstalleer Python en zorg ervoor dat het is toegevoegd aan de PATH-omgevingsvariabele van uw systeem zodat de plugin scripts kan uitvoeren.\\nPlugin-functies die Python vereisen, zijn niet beschikbaar.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Fout:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "De vereiste Python-bibliotheek 'requests' is niet geïnstalleerd voor",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nInstalleer deze door uit te voeren:\\n{pythonCmd} -m pip install requests\\nPlugin-functies die Python vereisen, zijn niet beschikbaar totdat deze is geïnstalleerd.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Ongeldige HTTP-poort geconfigureerd:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server niet gestart. Configureer een geldige poort (1-65535) in de instellingen.",
    NOTICE_PORT_IN_USE_PREFIX: "Poort",
    NOTICE_PORT_IN_USE_SUFFIX: "is al in gebruik. Kies een andere poort in de instellingen of sluit de andere toepassing die deze gebruikt. Server niet gestart.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Kon server niet starten op poort",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Ongeldige poort. Voer een getal in tussen 0 en 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP-poort gewijzigd (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Script richt zich mogelijk op de oude poort als het al actief is of extern is gestart.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python-script niet gevonden of is geen bestand:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Fout bij toegang tot scriptbestand:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python-script uitvoeren:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Fout bij uitvoeren",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "met",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "mislukt met exitcode",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Controleer console logs.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Kon geen geldig Python uitvoerbaar bestand vinden. Geprobeerd:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Zorg ervoor dat Python is geïnstalleerd en toegankelijk is via de PATH van uw systeem (of de 'py'-launcher op Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python scripts map niet gevonden of ongeldig. Controleer de plugin-instellingen.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Fout bij lezen van scripts map:",
    NOTICE_NO_SCRIPTS_FOUND: "Geen Python-scripts (.py) gevonden in de geconfigureerde map.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Uitvoeren",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python-script(s)...",
    NOTICE_INPUT_VALIDATION_FAILED: "Invoer komt niet overeen met het vereiste formaat.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Een specifiek Python-script uitvoeren",
    CMD_RUN_ALL_SCRIPTS_NAME: "Alle Python-scripts in map uitvoeren",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Verzenden",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Selecteer een Python-script om uit te voeren...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Script-specifieke Instellingen",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Scriptinstellingen Vernieuwen",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Scan de scripts map opnieuw om instellingen te ontdekken of bij te werken die in uw Python-scripts zijn gedefinieerd.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Definities Vernieuwen",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Vernieuwen...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python scripts map is niet geconfigureerd. Stel het pad hierboven in.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Geen scripts met definieerbare instellingen gevonden in de geconfigureerde map, of het ontdekken van instellingen is mislukt. Klik op 'Definities Vernieuwen' om opnieuw te proberen.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Instellingen voor:",
    SETTINGS_LANGUAGE_AUTO: "Automatisch (Match Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Kan instellingen niet vernieuwen: Python uitvoerbaar bestand niet gevonden. Zorg ervoor dat Python is geïnstalleerd en in PATH staat.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Scriptinstellingsdefinities vernieuwen...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Scriptinstellingsdefinities succesvol vernieuwd!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Kon scriptinstellingsdefinities niet vernieuwen. Controleer logs voor details.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Kan script niet uitvoeren: Python uitvoerbaar bestand niet gevonden. Controleer installatie en PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python scriptinstellingsdefinities vernieuwen",
    SETTINGS_SECURITY_WARNING_TITLE: "Veiligheidswaarschuwing",
    SETTINGS_SECURITY_WARNING_TEXT: "Het uitvoeren van willekeurige Python-scripts kan riskant zijn. Zorg ervoor dat u de bron vertrouwt van elk script dat u uitvoert, aangezien deze toegang kunnen krijgen tot uw systeem en gegevens. De auteur van de plugin en de auteurs van de scripts zijn niet verantwoordelijk voor gegevensverlies of beveiligingsproblemen veroorzaakt door scripts die u kiest uit te voeren. Voer scripts uit op eigen risico.",
    SETTINGS_LANGUAGE_TITLE: "Plugin Taal",
    SETTINGS_LANGUAGE_DESC: "Kies de weergavetaal voor de Python Bridge plugin interface. 'Automatisch' volgt de taalinstelling van Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Prestatietip: Backlink Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Voor betere prestaties bij het ophalen van backlinks (met de functie get_backlinks) in grote kluizen, overweeg de community-plug-in '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' van @mnaoumov te installeren.",
    NOTICE_INVALID_FOLDER_PATH: "Ongeldig mappad. Selecteer een geldige map in de instellingen.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Geconfigureerd mappad voor Python-scripts '{path}' is ongeldig of niet gevonden. Instelling wissen.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Ingeschakeld",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Sta toe dat dit script wordt uitgevoerd via commando's, sneltoetsen of 'Alles Uitvoeren'.",
    NOTICE_SCRIPT_DISABLED: "Script '{scriptName}' is uitgeschakeld in de instellingen en kan niet worden uitgevoerd.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Uitvoeren bij opstarten",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Voer dit script automatisch uit wanneer Obsidian start (alleen als 'Script ingeschakeld' ook aan staat).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Opstartvertraging (seconden)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Wacht dit aantal seconden nadat Obsidian is gestart voordat het script wordt uitgevoerd (alleen van toepassing als 'Uitvoeren bij opstarten' is ingeschakeld). Gebruik 0 voor geen vertraging.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "PYTHONPATH automatisch instellen voor bibliotheek",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Voegt automatisch de plug-inmap toe aan PYTHONPATH bij het uitvoeren van scripts, waardoor directe import van de Python-bibliotheek mogelijk is (Aanbevolen). Indien uitgeschakeld, moet u ObsidianPluginDevPythonToJS.py naar uw scriptmap kopiëren of sys.path handmatig beheren.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatische PYTHONPATH uitgeschakeld. Zorg ervoor dat ObsidianPluginDevPythonToJS.py zich in uw scriptmap bevindt of beheer sys.path handmatig.",
};

// uk.ts - uk translations
// WARNING: Auto-generated translations below. Please review and correct.
var uk = {
    SETTINGS_TAB_TITLE: "Налаштування Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Папка скриптів Python",
    SETTINGS_FOLDER_DESC: "Шлях до папки, що містить ваші скрипти Python (абсолютний або відносний до сховища).",
    SETTINGS_FOLDER_PLACEHOLDER: "/шлях/до/ваших/скриптів або ./scripts-python",
    SETTINGS_PORT_TITLE: "Порт HTTP-сервера",
    SETTINGS_PORT_DESC: "Порт для локального HTTP-сервера (1024-65535). Потребує перезапуску або збереження налаштувань для застосування.",
    SETTINGS_CACHE_TITLE: "Вимкнути кеш Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Запускати Python з прапорцем \"-B\", щоб запобігти запису файлів .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Порт HTTP змінено на",
    NOTICE_PORT_CHANGED_SUFFIX: "Перезапуск сервера...",
    NOTICE_PYTHON_MISSING_TITLE: "Помилка Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Виконуваний файл Python не знайдено в PATH.\\nБудь ласка, встановіть Python і переконайтеся, що він доданий до змінної середовища PATH вашої системи, щоб плагін міг запускати скрипти.\\nФункції плагіна, що потребують Python, будуть недоступні.",
    NOTICE_REQUESTS_MISSING_TITLE: "Помилка Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Необхідну бібліотеку Python 'requests' не встановлено для",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nБудь ласка, встановіть її, виконавши:\\n{pythonCmd} -m pip install requests\\nФункції плагіна, що потребують Python, будуть недоступні до встановлення.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Налаштовано недійсний порт HTTP:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Сервер не запущено. Будь ласка, налаштуйте дійсний порт (1-65535) у налаштуваннях.",
    NOTICE_PORT_IN_USE_PREFIX: "Порт",
    NOTICE_PORT_IN_USE_SUFFIX: "вже використовується. Будь ласка, виберіть інший порт у налаштуваннях або закрийте іншу програму, що його використовує. Сервер не запущено.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Не вдалося запустити сервер на порту",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Недійсний порт. Будь ласка, введіть число від 0 до 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Порт HTTP змінено (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Скрипт може націлюватися на старий порт, якщо він уже запущений або запущений ззовні.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Скрипт Python не знайдено або це не файл:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Помилка доступу до файлу скрипта:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Запуск скрипта Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Помилка запуску",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "з",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "завершився з кодом виходу",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Перевірте логи консолі.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Не вдалося знайти дійсний виконуваний файл Python. Спробовано:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Будь ласка, переконайтеся, що Python встановлено та доступно через PATH вашої системи (або лаунчер 'py' у Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Папку скриптів Python не знайдено або вона недійсна. Будь ласка, перевірте налаштування плагіна.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Помилка читання папки скриптів:",
    NOTICE_NO_SCRIPTS_FOUND: "У налаштованій папці не знайдено скриптів Python (.py).",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Запуск",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "скриптів Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Введені дані не відповідають потрібному формату.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Запустити конкретний скрипт Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Запустити всі скрипти Python у папці",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Надіслати",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Виберіть скрипт Python для запуску...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Налаштування для конкретного скрипта",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Оновити налаштування скриптів",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Повторно проскануйте папку скриптів, щоб виявити або оновити налаштування, визначені у ваших скриптах Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Оновити визначення",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Оновлення...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Папку скриптів Python не налаштовано. Будь ласка, вкажіть шлях вище.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "У налаштованій папці не знайдено скриптів з визначеними налаштуваннями, або виявлення налаштувань не вдалося. Натисніть 'Оновити визначення', щоб спробувати ще раз.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Налаштування для:",
    SETTINGS_LANGUAGE_AUTO: "Автоматично (Як Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Неможливо оновити налаштування: Виконуваний файл Python не знайдено. Будь ласка, переконайтеся, що Python встановлено та знаходиться в PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Оновлення визначень налаштувань скриптів...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Визначення налаштувань скриптів успішно оновлено!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Не вдалося оновити визначення налаштувань скриптів. Перевірте логи для деталей.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Неможливо запустити скрипт: Виконуваний файл Python не знайдено. Будь ласка, перевірте встановлення та PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Оновити визначення налаштувань скриптів Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Попередження про безпеку",
    SETTINGS_SECURITY_WARNING_TEXT: "Виконання довільних скриптів Python може бути ризикованим. Переконайтеся, що ви довіряєте джерелу будь-якого скрипта, який ви запускаєте, оскільки він може отримати доступ до вашої системи та даних. Автор плагіна та автори скриптів не несуть відповідальності за будь-яку втрату даних або проблеми безпеки, спричинені скриптами, які ви вирішили виконати. Запускайте скрипти на свій страх і ризик.",
    SETTINGS_LANGUAGE_TITLE: "Мова плагіна",
    SETTINGS_LANGUAGE_DESC: "Виберіть мову відображення для інтерфейсу плагіна Python Bridge. 'Автоматично' відповідає налаштуванню мови Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Порада щодо продуктивності: Кеш зворотних посилань",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Для покращення продуктивності під час отримання зворотних посилань (за допомогою функції get_backlinks) у великих сховищах розгляньте можливість встановлення плагіна спільноти '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' від @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Недійсний шлях до папки. Будь ласка, виберіть дійсну папку в налаштуваннях.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Налаштований шлях до папки скриптів Python '{path}' недійсний або не знайдений. Очищення налаштування.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Скрипт Увімкнено",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Дозволити виконання цього скрипта за допомогою команд, сполучень клавіш або 'Виконати все'.",
    NOTICE_SCRIPT_DISABLED: "Скрипт '{scriptName}' вимкнено в налаштуваннях, і його неможливо виконати.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Запускати при старті",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Автоматично запускати цей скрипт при старті Obsidian (тільки якщо 'Скрипт увімкнено' також активовано).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Затримка запуску (секунди)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Зачекайте вказану кількість секунд після запуску Obsidian перед виконанням скрипту (застосовується, тільки якщо увімкнено 'Запускати при старті'). Використовуйте 0 для відсутності затримки.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Автоматично встановити PYTHONPATH для бібліотеки",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Автоматично додавати каталог плагіна до PYTHONPATH під час запуску скриптів, дозволяючи прямий імпорт бібліотеки Python (Рекомендовано). Якщо вимкнено, ви повинні скопіювати ObsidianPluginDevPythonToJS.py до вашої папки скриптів або керувати sys.path вручну.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Автоматичний PYTHONPATH вимкнено. Переконайтеся, що ObsidianPluginDevPythonToJS.py знаходиться у вашій папці скриптів, або керуйте sys.path вручну.",
};

// el.ts - el translations
// WARNING: Auto-generated translations below. Please review and correct.
var el = {
    SETTINGS_TAB_TITLE: "Ρυθμίσεις Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Φάκελος Python Scripts",
    SETTINGS_FOLDER_DESC: "Διαδρομή προς το φάκελο που περιέχει τα Python scripts σας (απόλυτη ή σχετική με το vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/διαδρομή/προς/τα/scripts σας ή ./scripts-python",
    SETTINGS_PORT_TITLE: "Θύρα HTTP Server",
    SETTINGS_PORT_DESC: "Θύρα για τον τοπικό HTTP server (1024-65535). Απαιτεί επανεκκίνηση ή αποθήκευση ρυθμίσεων για εφαρμογή.",
    SETTINGS_CACHE_TITLE: "Απενεργοποίηση Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Εκτελέστε την Python με τη σημαία \"-B\" για να αποτρέψετε την εγγραφή αρχείων .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Η θύρα HTTP άλλαξε σε",
    NOTICE_PORT_CHANGED_SUFFIX: "Επανεκκίνηση διακομιστή...",
    NOTICE_PYTHON_MISSING_TITLE: "Σφάλμα Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Το εκτελέσιμο αρχείο Python δεν βρέθηκε στο PATH.\\nΠαρακαλώ εγκαταστήστε την Python και βεβαιωθείτε ότι έχει προστεθεί στη μεταβλητή περιβάλλοντος PATH του συστήματός σας για να μπορεί το plugin να εκτελεί scripts.\\nΟι λειτουργίες του plugin που απαιτούν Python δεν θα είναι διαθέσιμες.",
    NOTICE_REQUESTS_MISSING_TITLE: "Σφάλμα Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Η απαιτούμενη βιβλιοθήκη Python 'requests' δεν είναι εγκατεστημένη για",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nΠαρακαλώ εγκαταστήστε την εκτελώντας:\\n{pythonCmd} -m pip install requests\\nΟι λειτουργίες του plugin που απαιτούν Python δεν θα είναι διαθέσιμες μέχρι να εγκατασταθεί.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Μη έγκυρη θύρα HTTP έχει διαμορφωθεί:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Ο διακομιστής δεν ξεκίνησε. Παρακαλώ διαμορφώστε μια έγκυρη θύρα (1-65535) στις ρυθμίσεις.",
    NOTICE_PORT_IN_USE_PREFIX: "Η θύρα",
    NOTICE_PORT_IN_USE_SUFFIX: "χρησιμοποιείται ήδη. Παρακαλώ επιλέξτε άλλη θύρα στις ρυθμίσεις ή κλείστε την άλλη εφαρμογή που τη χρησιμοποιεί. Ο διακομιστής δεν ξεκίνησε.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Αποτυχία έναρξης διακομιστή στη θύρα",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Μη έγκυρη θύρα. Εισαγάγετε έναν αριθμό μεταξύ 0 και 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Η θύρα HTTP άλλαξε (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Το script ενδέχεται να στοχεύει την παλιά θύρα εάν εκτελείται ήδη ή έχει εκκινηθεί εξωτερικά.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Το script Python δεν βρέθηκε ή δεν είναι αρχείο:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Σφάλμα πρόσβασης στο αρχείο script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Εκτέλεση script Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Σφάλμα κατά την εκτέλεση",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "με",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "απέτυχε με κωδικό εξόδου",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Ελέγξτε τα αρχεία καταγραφής της κονσόλας.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Δεν ήταν δυνατή η εύρεση έγκυρου εκτελέσιμου αρχείου Python. Προσπάθεια:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Βεβαιωθείτε ότι η Python είναι εγκατεστημένη και προσβάσιμη μέσω του PATH του συστήματός σας (ή του εκκινητή 'py' στα Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Ο φάκελος Python scripts δεν βρέθηκε ή είναι μη έγκυρος. Ελέγξτε τις ρυθμίσεις του plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Σφάλμα ανάγνωσης φακέλου scripts:",
    NOTICE_NO_SCRIPTS_FOUND: "Δεν βρέθηκαν scripts Python (.py) στον διαμορφωμένο φάκελο.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Εκτέλεση",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script(s) Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Η είσοδος δεν ταιριάζει με την απαιτούμενη μορφή.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Εκτέλεση συγκεκριμένου script Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Εκτέλεση όλων των scripts Python στο φάκελο",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Υποβολή",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Επιλέξτε ένα script Python για εκτέλεση...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Ρυθμίσεις Συγκεκριμένου Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Ανανέωση Ρυθμίσεων Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Σαρώστε ξανά το φάκελο scripts για να ανακαλύψετε ή να ενημερώσετε τις ρυθμίσεις που ορίζονται στα Python scripts σας.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Ανανέωση Ορισμών",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Ανανέωση...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Ο φάκελος Python scripts δεν έχει διαμορφωθεί. Ορίστε τη διαδρομή παραπάνω.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Δεν βρέθηκαν scripts με ορίσιμες ρυθμίσεις στον διαμορφωμένο φάκελο ή η ανακάλυψη ρυθμίσεων απέτυχε. Κάντε κλικ στο 'Ανανέωση Ορισμών' για να δοκιμάσετε ξανά.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Ρυθμίσεις για:",
    SETTINGS_LANGUAGE_AUTO: "Αυτόματο (Ταίριασμα με Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Δεν είναι δυνατή η ανανέωση των ρυθμίσεων: Το εκτελέσιμο αρχείο Python δεν βρέθηκε. Βεβαιωθείτε ότι η Python είναι εγκατεστημένη και βρίσκεται στο PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Ανανέωση ορισμών ρυθμίσεων script...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Οι ορισμοί ρυθμίσεων script ανανεώθηκαν με επιτυχία!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Αποτυχία ανανέωσης ορισμών ρυθμίσεων script. Ελέγξτε τα αρχεία καταγραφής για λεπτομέρειες.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Δεν είναι δυνατή η εκτέλεση του script: Το εκτελέσιμο αρχείο Python δεν βρέθηκε. Ελέγξτε την εγκατάσταση και το PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Ανανέωση ορισμών ρυθμίσεων script Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Προειδοποίηση Ασφαλείας",
    SETTINGS_SECURITY_WARNING_TEXT: "Η εκτέλεση αυθαίρετων scripts Python μπορεί να είναι επικίνδυνη. Βεβαιωθείτε ότι εμπιστεύεστε την πηγή οποιουδήποτε script εκτελείτε, καθώς μπορούν να έχουν πρόσβαση στο σύστημα και τα δεδομένα σας. Ο συγγραφέας του plugin και οι συγγραφείς των scripts δεν ευθύνονται για τυχόν απώλεια δεδομένων ή ζητήματα ασφαλείας που προκαλούνται από τα scripts που επιλέγετε να εκτελέσετε. Εκτελέστε τα scripts με δική σας ευθύνη.",
    SETTINGS_LANGUAGE_TITLE: "Γλώσσα Plugin",
    SETTINGS_LANGUAGE_DESC: "Επιλέξτε τη γλώσσα εμφάνισης για τη διεπαφή του plugin Python Bridge. Η επιλογή 'Αυτόματο' ακολουθεί τη ρύθμιση γλώσσας του Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Συμβουλή απόδοσης: Προσωρινή μνήμη Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Για βελτιωμένη απόδοση κατά την ανάκτηση backlinks (χρησιμοποιώντας τη συνάρτηση get_backlinks) σε μεγάλα vaults, εξετάστε το ενδεχόμενο εγκατάστασης του κοινοτικού plugin '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' από τον @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Μη έγκυρη διαδρομή φακέλου. Επιλέξτε έναν έγκυρο φάκελο στις ρυθμίσεις.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Η διαμορφωμένη διαδρομή φακέλου σεναρίων Python '{path}' είναι μη έγκυρη ή δεν βρέθηκε. Εκκαθάριση ρύθμισης.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Ενεργοποιημένο Σενάριο",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Να επιτρέπεται η εκτέλεση αυτού του σεναρίου μέσω εντολών, συντομεύσεων ή 'Εκτέλεση Όλων'.",
    NOTICE_SCRIPT_DISABLED: "Το σενάριο '{scriptName}' είναι απενεργοποιημένο στις ρυθμίσεις και δεν είναι δυνατό να εκτελεστεί.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Εκτέλεση κατά την εκκίνηση",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Αυτόματη εκτέλεση αυτού του σεναρίου κατά την εκκίνηση του Obsidian (μόνο εάν είναι ενεργοποιημένο και το 'Σενάριο Ενεργοποιημένο').",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Καθυστέρηση εκκίνησης (δευτερόλεπτα)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Περιμένετε τόσα δευτερόλεπτα μετά την εκκίνηση του Obsidian πριν εκτελέσετε το σενάριο (ισχύει μόνο εάν είναι ενεργοποιημένο το 'Εκτέλεση κατά την εκκίνηση'). Χρησιμοποιήστε 0 για καμία καθυστέρηση.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Αυτόματη ρύθμιση PYTHONPATH για τη Βιβλιοθήκη",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Προσθέτει αυτόματα τον κατάλογο του plugin στο PYTHONPATH κατά την εκτέλεση σεναρίων, επιτρέποντας την απευθείας εισαγωγή της βιβλιοθήκης Python (Συνιστάται). Εάν απενεργοποιηθεί, πρέπει να αντιγράψετε το ObsidianPluginDevPythonToJS.py στον φάκελο των σεναρίων σας ή να διαχειριστείτε μη αυτόματα το sys.path.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Η αυτόματη ρύθμιση PYTHONPATH απενεργοποιήθηκε. Βεβαιωθείτε ότι το ObsidianPluginDevPythonToJS.py βρίσκεται στον φάκελο των σεναρίων σας ή διαχειριστείτε το sys.path μη αυτόματα.",
};

// sv.ts - sv translations
// WARNING: Auto-generated translations below. Please review and correct.
var sv = {
    SETTINGS_TAB_TITLE: "Inställningar för Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Mapp för Python-skript",
    SETTINGS_FOLDER_DESC: "Sökväg till mappen som innehåller dina Python-skript (absolut eller relativt till valvet).",
    SETTINGS_FOLDER_PLACEHOLDER: "/sökväg/till/dina/skript eller ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP-serverport",
    SETTINGS_PORT_DESC: "Port för den lokala HTTP-servern (1024-65535). Kräver omstart eller sparande av inställningar för att tillämpas.",
    SETTINGS_CACHE_TITLE: "Inaktivera Python Cache (__pycache__)",
    SETTINGS_CACHE_DESC: "Kör Python med flaggan \"-B\" för att förhindra att .pyc-filer skrivs.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP-port ändrad till",
    NOTICE_PORT_CHANGED_SUFFIX: "Startar om servern...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Fel:",
    NOTICE_PYTHON_MISSING_DESC: "Python-exekverbar fil hittades inte i PATH.\\nInstallera Python och se till att den läggs till i systemets PATH-miljövariabel för att pluginet ska kunna köra skript.\\nPlugin-funktioner som kräver Python kommer inte att vara tillgängliga.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Fel:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Det nödvändiga Python-biblioteket 'requests' är inte installerat för",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nInstallera det genom att köra:\\n{pythonCmd} -m pip install requests\\nPlugin-funktioner som kräver Python kommer inte att vara tillgängliga förrän det är installerat.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Ogiltig HTTP-port konfigurerad:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Servern startades inte. Konfigurera en giltig port (1-65535) i inställningarna.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "används redan. Välj en annan port i inställningarna eller stäng det andra programmet som använder den. Servern startades inte.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Kunde inte starta servern på port",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Ogiltig port. Ange ett nummer mellan 0 och 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP-port ändrad (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skriptet kan rikta in sig på den gamla porten om det redan körs eller startas externt.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python-skript hittades inte eller är inte en fil:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Fel vid åtkomst till skriptfil:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Kör Python-skript:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Fel vid körning",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "med",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "misslyckades med exitkod",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Kontrollera konsolloggar.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Kunde inte hitta en giltig Python-exekverbar fil. Försökte:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Se till att Python är installerat och tillgängligt via systemets PATH (eller 'py'-startaren i Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Mappen för Python-skript hittades inte eller är ogiltig. Kontrollera plugin-inställningarna.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Fel vid läsning av skriptmapp:",
    NOTICE_NO_SCRIPTS_FOUND: "Inga Python-skript (.py) hittades i den konfigurerade mappen.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Kör",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python-skript...",
    NOTICE_INPUT_VALIDATION_FAILED: "Inmatningen matchar inte det nödvändiga formatet.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Kör ett specifikt Python-skript",
    CMD_RUN_ALL_SCRIPTS_NAME: "Kör alla Python-skript i mappen",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Skicka",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Välj ett Python-skript att köra...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Skriptspecifika inställningar",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Uppdatera skriptinställningar",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Skanna om skriptmappen för att upptäcka eller uppdatera inställningar som definierats i dina Python-skript.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Uppdatera definitioner",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Uppdaterar...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Mappen för Python-skript är inte konfigurerad. Ange sökvägen ovan.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Inga skript med definierbara inställningar hittades i den konfigurerade mappen, eller så misslyckades inställningsupptäckten. Klicka på 'Uppdatera definitioner' för att försöka igen.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Inställningar för:",
    SETTINGS_LANGUAGE_AUTO: "Automatisk (Matcha Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Kan inte uppdatera inställningar: Python-exekverbar fil hittades inte. Se till att Python är installerat och finns i PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Uppdaterar definitioner för skriptinställningar...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definitioner för skriptinställningar har uppdaterats!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Kunde inte uppdatera definitioner för skriptinställningar. Kontrollera loggar för detaljer.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Kan inte köra skript: Python-exekverbar fil hittades inte. Kontrollera installation och PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Uppdatera definitioner för Python-skriptinställningar",
    SETTINGS_SECURITY_WARNING_TITLE: "Säkerhetsvarning",
    SETTINGS_SECURITY_WARNING_TEXT: "Att köra godtyckliga Python-skript kan vara riskabelt. Se till att du litar på källan till alla skript du kör, eftersom de kan komma åt ditt system och dina data. Plugin-författaren och skriptförfattarna ansvarar inte för dataförlust eller säkerhetsproblem som orsakas av skript du väljer att köra. Kör skript på egen risk.",
    SETTINGS_LANGUAGE_TITLE: "Plugin-språk",
    SETTINGS_LANGUAGE_DESC: "Välj visningsspråk för Python Bridge-pluginets gränssnitt. 'Automatisk' följer Obsidians språkinställning.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Prestandatips: Backlink Cache",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "För förbättrad prestanda vid hämtning av bakåtlänkar (med funktionen get_backlinks) i stora valv, överväg att installera community-pluginet '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' av @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Ogiltig mappsökväg. Välj en giltig mapp i inställningarna.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Konfigurerad sökväg för Python-skriptmapp '{path}' är ogiltig eller hittades inte. Rensar inställning.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skript Aktiverat",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Tillåt att detta skript körs via kommandon, genvägar eller 'Kör alla'.",
    NOTICE_SCRIPT_DISABLED: "Skriptet '{scriptName}' är inaktiverat i inställningarna och kan inte köras.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Kör vid start",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Kör detta skript automatiskt när Obsidian startar (endast om 'Skript aktiverat' också är på).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Startfördröjning (sekunder)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Vänta så här många sekunder efter att Obsidian har startat innan skriptet körs (gäller endast om 'Kör vid start' är aktiverat). Använd 0 för ingen fördröjning.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Ställ in PYTHONPATH automatiskt för biblioteket",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Lägg automatiskt till plugin-katalogen i PYTHONPATH när skript körs, vilket möjliggör direktimport av Python-biblioteket (Rekommenderas). Om inaktiverat måste du kopiera ObsidianPluginDevPythonToJS.py till din skriptmapp eller hantera sys.path manuellt.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatisk PYTHONPATH inaktiverad. Se till att ObsidianPluginDevPythonToJS.py finns i din skriptmapp eller hantera sys.path manuellt.",
};

// fi.ts - fi translations
// WARNING: Auto-generated translations below. Please review and correct.
var fi = {
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge -asetukset",
    SETTINGS_FOLDER_TITLE: "Python-skriptien kansio",
    SETTINGS_FOLDER_DESC: "Polku kansioon, joka sisältää Python-skriptisi (absoluuttinen tai suhteessa vaultiin).",
    SETTINGS_FOLDER_PLACEHOLDER: "/polku/skripteihisi tai ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP-palvelimen portti",
    SETTINGS_PORT_DESC: "Paikallisen HTTP-palvelimen portti (1024-65535). Vaatii uudelleenkäynnistyksen tai asetusten tallentamisen penerapan.",
    SETTINGS_CACHE_TITLE: "Poista Python-välimuisti käytöstä (__pycache__)",
    SETTINGS_CACHE_DESC: "Aja Python \"-B\"-lipulla estääksesi .pyc-tiedostojen kirjoittamisen.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP-portti vaihdettu porttiin",
    NOTICE_PORT_CHANGED_SUFFIX: "Käynnistetään palvelin uudelleen...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge -virhe:",
    NOTICE_PYTHON_MISSING_DESC: "Python-suoritettavaa tiedostoa ei löytynyt PATH-muuttujasta.\\nAsenna Python ja varmista, että se on lisätty järjestelmän PATH-ympäristömuuttujaan, jotta lisäosa voi suorittaa skriptejä.\\nPythonia vaativat lisäosan ominaisuudet eivät ole käytettävissä.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge -virhe:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Vaadittua Python-kirjastoa 'requests' ei ole asennettu kohteelle",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nAsenna se suorittamalla:\\n{pythonCmd} -m pip install requests\\nPythonia vaativat lisäosan ominaisuudet eivät ole käytettävissä ennen asennusta.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Virheellinen HTTP-portti määritetty:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Palvelinta ei käynnistetty. Määritä kelvollinen portti (1-65535) asetuksissa.",
    NOTICE_PORT_IN_USE_PREFIX: "Portti",
    NOTICE_PORT_IN_USE_SUFFIX: "on jo käytössä. Valitse toinen portti asetuksista tai sulje sitä käyttävä sovellus. Palvelinta ei käynnistetty.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Palvelimen käynnistäminen portissa",
    NOTICE_SERVER_START_FAILED_SUFFIX: "epäonnistui.",
    NOTICE_INVALID_PORT_RANGE: "Virheellinen portti. Anna numero väliltä 0–65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP-portti muuttui (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skripti saattaa kohdistaa vanhaan porttiin, jos se on jo käynnissä tai käynnistetty ulkoisesti.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python-skriptiä ei löytynyt tai se ei ole tiedosto:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Virhe skriptitiedoston käytössä:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Suoritetaan Python-skriptiä:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Virhe suoritettaessa",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "komennolla",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "epäonnistui poistumiskoodilla",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Tarkista konsolilokit.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Kelvollista Python-suoritettavaa tiedostoa ei löytynyt. Yritetty:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Varmista, että Python on asennettu ja käytettävissä järjestelmän PATH-muuttujan kautta (tai 'py'-käynnistimellä Windowsissa).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Python-skriptien kansiota ei löytynyt tai se on virheellinen. Tarkista lisäosan asetukset.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Virhe luettaessa skriptikansiota:",
    NOTICE_NO_SCRIPTS_FOUND: "Määritetystä kansiosta ei löytynyt Python-skriptejä (.py).",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Suoritetaan",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python-skripti(ä)...",
    NOTICE_INPUT_VALIDATION_FAILED: "Syöte ei vastaa vaadittua muotoa.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Suorita tietty Python-skripti",
    CMD_RUN_ALL_SCRIPTS_NAME: "Suorita kaikki Python-skriptit kansiossa",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Lähetä",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Valitse suoritettava Python-skripti...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Skriptikohtaiset Asetukset",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Päivitä Skriptiasetukset",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Skannaa skriptikansio uudelleen löytääksesi tai päivittääksesi Python-skripteissäsi määritellyt asetukset.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Päivitä Määritelmät",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Päivitetään...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Python-skriptien kansiota ei ole määritetty. Aseta polku yllä.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Määritetystä kansiosta ei löytynyt skriptejä, joilla olisi määriteltäviä asetuksia, tai asetusten löytäminen epäonnistui. Napsauta 'Päivitä Määritelmät' yrittääksesi uudelleen.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Asetukset kohteelle:",
    SETTINGS_LANGUAGE_AUTO: "Automaattinen (Vastaa Obsidiania)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Asetuksia ei voi päivittää: Python-suoritettavaa tiedostoa ei löytynyt. Varmista, että Python on asennettu ja PATH-muuttujassa.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Päivitetään skriptiasetusten määrittelyjä...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Skriptiasetusten määrittelyt päivitetty onnistuneesti!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Skriptiasetusten määrittelyjen päivitys epäonnistui. Tarkista lokit lisätietoja varten.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Skriptiä ei voi suorittaa: Python-suoritettavaa tiedostoa ei löytynyt. Tarkista asennus ja PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Päivitä Python-skriptiasetusten määrittelyt",
    SETTINGS_SECURITY_WARNING_TITLE: "Turvallisuusvaroitus",
    SETTINGS_SECURITY_WARNING_TEXT: "Mielivaltaisten Python-skriptien suorittaminen voi olla riskialtista. Varmista, että luotat minkä tahansa suorittamasi skriptin lähteeseen, sillä ne voivat käyttää järjestelmääsi ja tietojasi. Lisäosan tekijä ja skriptien tekijät eivät ole vastuussa mistään tietojen menetyksestä tai tietoturvaongelmista, jotka johtuvat valitsemistasi skripteistä. Suorita skriptit omalla vastuullasi.",
    SETTINGS_LANGUAGE_TITLE: "Lisäosan Kieli",
    SETTINGS_LANGUAGE_DESC: "Valitse Python Bridge -lisäosan käyttöliittymän näyttökieli. 'Automaattinen' noudattaa Obsidianin kieliasetusta.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Suorituskykyvinkki: Palautuslinkkien välimuisti",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Parantaaksesi suorituskykyä palautuslinkkejä haettaessa (käyttäen get_backlinks-funktiota) suurissa holveissa, harkitse @mnaoumov:n kehittämän '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' -yhteisölaajennuksen asentamista.",
    NOTICE_INVALID_FOLDER_PATH: "Virheellinen kansion polku. Valitse kelvollinen kansio asetuksista.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Määritetty Python-skriptikansion polku '{path}' on virheellinen tai sitä ei löydy. Tyhjennetään asetusta.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skripti Käytössä",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Salli tämän skriptin suorittaminen komentojen, pikanäppäinten tai 'Suorita kaikki' kautta.",
    NOTICE_SCRIPT_DISABLED: "Skripti '{scriptName}' on poistettu käytöstä asetuksista, eikä sitä voi suorittaa.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Suorita käynnistyksen yhteydessä",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Suorita tämä skripti automaattisesti Obsidianin käynnistyessä (vain jos 'Skripti käytössä' on myös päällä).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Käynnistysviive (sekuntia)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Odota näin monta sekuntia Obsidianin käynnistymisen jälkeen ennen skriptin suorittamista (koskee vain, jos 'Suorita käynnistyksen yhteydessä' on päällä). Käytä 0, jos et halua viivettä.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Aseta PYTHONPATH automaattisesti kirjastolle",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Lisää automaattisesti laajennushakemiston PYTHONPATHiin komentosarjoja suoritettaessa, mikä mahdollistaa Python-kirjaston suoran tuonnin (Suositus). Jos se on poistettu käytöstä, sinun on kopioitava ObsidianPluginDevPythonToJS.py komentosarjakansioosi tai hallittava sys.pathia manuaalisesti.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automaattinen PYTHONPATH pois käytöstä. Varmista, että ObsidianPluginDevPythonToJS.py on komentosarjakansiossasi tai hallitse sys.pathia manuaalisesti.",
};

// hu.ts - hu translations
// WARNING: Auto-generated translations below. Please review and correct.
var hu = {
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge Beállítások",
    SETTINGS_FOLDER_TITLE: "Python Szkriptek Mappája",
    SETTINGS_FOLDER_DESC: "A Python-szkripteket tartalmazó mappa elérési útja (abszolút vagy a vault-hoz képest relatív).",
    SETTINGS_FOLDER_PLACEHOLDER: "/elérési/út/a/szkriptekhez vagy ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP Szerver Port",
    SETTINGS_PORT_DESC: "A helyi HTTP-szerver portja (1024-65535). Alkalmazásához újraindítás vagy a beállítások mentése szükséges.",
    SETTINGS_CACHE_TITLE: "Python Gyorsítótár Letiltása (__pycache__)",
    SETTINGS_CACHE_DESC: "Futtassa a Pythont a \"-B\" kapcsolóval a .pyc fájlok írásának megakadályozásához.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP port erre változott:",
    NOTICE_PORT_CHANGED_SUFFIX: "Szerver újraindítása...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge Hiba:",
    NOTICE_PYTHON_MISSING_DESC: "A Python végrehajtható fájl nem található a PATH-ban.\\nTelepítse a Pythont, és győződjön meg róla, hogy hozzá van adva a rendszer PATH környezeti változójához, hogy a bővítmény futtathassa a szkripteket.\\nA Python-t igénylő bővítményfunkciók nem lesznek elérhetők.",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge Hiba:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "A szükséges Python könyvtár ('requests') nincs telepítve ehhez:",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nTelepítse a következő parancs futtatásával:\\n{pythonCmd} -m pip install requests\\nA Python-t igénylő bővítményfunkciók a telepítésig nem lesznek elérhetők.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Érvénytelen HTTP port van beállítva:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "A szerver nem indult el. Kérjük, állítson be érvényes portot (1-65535) a beállításokban.",
    NOTICE_PORT_IN_USE_PREFIX: "A(z)",
    NOTICE_PORT_IN_USE_SUFFIX: "port már használatban van. Kérjük, válasszon másik portot a beállításokban, vagy zárja be a portot használó másik alkalmazást. A szerver nem indult el.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Nem sikerült elindítani a szervert a(z)",
    NOTICE_SERVER_START_FAILED_SUFFIX: "porton.",
    NOTICE_INVALID_PORT_RANGE: "Érvénytelen port. Kérjük, adjon meg egy számot 0 és 65535 között.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP port megváltozott (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). A szkript a régi portot célozhatja meg, ha már fut, vagy külsőleg lett elindítva.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "A Python szkript nem található, vagy nem fájl:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Hiba a szkriptfájl elérésekor:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Python szkript futtatása:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Hiba a(z)",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "futtatásakor ezzel:",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "sikertelenül zárult a(z)",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "kilépési kóddal. Ellenőrizze a konzolnaplókat.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Nem található érvényes Python végrehajtható fájl. Próbálkozás:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Győződjön meg róla, hogy a Python telepítve van, és elérhető a rendszer PATH-ján keresztül (vagy a 'py' indítóval Windows-on).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "A Python szkriptek mappája nem található vagy érvénytelen. Ellenőrizze a bővítmény beállításait.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Hiba a szkriptek mappájának olvasásakor:",
    NOTICE_NO_SCRIPTS_FOUND: "Nem található Python szkript (.py) a beállított mappában.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Futtatás",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python szkript...",
    NOTICE_INPUT_VALIDATION_FAILED: "A bevitel nem felel meg a szükséges formátumnak.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Meghatározott Python szkript futtatása",
    CMD_RUN_ALL_SCRIPTS_NAME: "Minden Python szkript futtatása a mappában",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Küldés",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Válasszon ki egy futtatandó Python szkriptet...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Szkript-specifikus Beállítások",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Szkriptbeállítások Frissítése",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Vizsgálja át újra a szkriptek mappáját a Python szkriptekben definiált beállítások felfedezéséhez vagy frissítéséhez.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Definíciók Frissítése",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Frissítés...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "A Python szkriptek mappája nincs beállítva. Kérjük, adja meg fent az elérési utat.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Nem található definiálható beállításokkal rendelkező szkript a beállított mappában, vagy a beállítások felfedezése sikertelen volt. Kattintson a 'Definíciók Frissítése' gombra az újbóli próbálkozáshoz.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Beállítások ehhez:",
    SETTINGS_LANGUAGE_AUTO: "Automatikus (Obsidian alapján)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Nem lehet frissíteni a beállításokat: A Python végrehajtható fájl nem található. Győződjön meg róla, hogy a Python telepítve van és a PATH-ban van.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Szkriptbeállítás-definíciók frissítése...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Szkriptbeállítás-definíciók sikeresen frissítve!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Nem sikerült frissíteni a szkriptbeállítás-definíciókat. Ellenőrizze a naplókat a részletekért.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Nem lehet futtatni a szkriptet: A Python végrehajtható fájl nem található. Ellenőrizze a telepítést és a PATH-ot.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Python szkriptbeállítás-definíciók frissítése",
    SETTINGS_SECURITY_WARNING_TITLE: "Biztonsági Figyelmeztetés",
    SETTINGS_SECURITY_WARNING_TEXT: "Tetszőleges Python szkriptek futtatása kockázatos lehet. Győződjön meg róla, hogy megbízik a futtatott szkript forrásában, mivel azok hozzáférhetnek a rendszeréhez és adataihoz. A bővítmény szerzője és a szkriptek szerzői nem felelősek az Ön által futtatott szkriptek által okozott adatvesztésért vagy biztonsági problémákért. Futtassa a szkripteket saját felelősségére.",
    SETTINGS_LANGUAGE_TITLE: "Bővítmény Nyelve",
    SETTINGS_LANGUAGE_DESC: "Válassza ki a Python Bridge bővítmény felületének megjelenítési nyelvét. Az 'Automatikus' az Obsidian nyelvi beállítását követi.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Teljesítmény Tipp: Visszahivatkozás Gyorsítótár",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "A visszahivatkozások lekérésének (a get_backlinks funkció használatával) javított teljesítményéhez nagy tárolókban fontolja meg a @mnaoumov által készített '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' közösségi bővítmény telepítését.",
    NOTICE_INVALID_FOLDER_PATH: "Érvénytelen mappa elérési út. Kérjük, válasszon érvényes mappát a beállításokban.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "A beállított Python szkriptek mappa elérési útja ('{path}') érvénytelen vagy nem található. Beállítás törlése.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Szkript Engedélyezve",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Engedélyezi a szkript végrehajtását parancsokkal, gyorsbillentyűkkel vagy az 'Összes futtatása' paranccsal.",
    NOTICE_SCRIPT_DISABLED: "A(z) '{scriptName}' szkript le van tiltva a beállításokban, és nem hajtható végre.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Futtatás indításkor",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "A szkript automatikus futtatása az Obsidian indításakor (csak akkor, ha a 'Szkript engedélyezve' is be van kapcsolva).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Indítási késleltetés (másodperc)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Várjon ennyi másodpercet az Obsidian indítása után a szkript futtatása előtt (csak akkor érvényes, ha a 'Futtatás indításkor' be van kapcsolva). Használjon 0-t, ha nincs késleltetés.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "PYTHONPATH automatikus beállítása a könyvtárhoz",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Automatikusan hozzáadja a bővítménykönyvtárat a PYTHONPATH-hoz szkriptek futtatásakor, lehetővé téve a Python könyvtár közvetlen importálását (Ajánlott). Ha le van tiltva, át kell másolnia az ObsidianPluginDevPythonToJS.py fájlt a szkriptmappájába, vagy manuálisan kell kezelnie a sys.path-t.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatikus PYTHONPATH letiltva. Győződjön meg róla, hogy az ObsidianPluginDevPythonToJS.py a szkriptmappájában van, vagy kezelje manuálisan a sys.path-t.",
};

// ro.ts - ro translations
// WARNING: Auto-generated translations below. Please review and correct.
var ro = {
    SETTINGS_TAB_TITLE: "Setări Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folder Scripturi Python",
    SETTINGS_FOLDER_DESC: "Calea către folderul care conține scripturile Python (absolută sau relativă la vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/cale/catre/scripturi sau ./scripts-python",
    SETTINGS_PORT_TITLE: "Port Server HTTP",
    SETTINGS_PORT_DESC: "Portul pentru serverul HTTP local (1024-65535). Necesită repornire sau salvarea setărilor pentru a aplica.",
    SETTINGS_CACHE_TITLE: "Dezactivare Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Rulați Python cu flag-ul \"-B\" pentru a preveni scrierea fișierelor .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Portul HTTP a fost schimbat în",
    NOTICE_PORT_CHANGED_SUFFIX: "Se repornește serverul...",
    NOTICE_PYTHON_MISSING_TITLE: "Eroare Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Executabilul Python nu a fost găsit în PATH.\\nVă rugăm să instalați Python și să vă asigurați că este adăugat la variabila de mediu PATH a sistemului pentru ca pluginul să ruleze scripturi.\\nFuncționalitățile pluginului care necesită Python nu vor fi disponibile.",
    NOTICE_REQUESTS_MISSING_TITLE: "Eroare Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Biblioteca Python necesară 'requests' nu este instalată pentru",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nVă rugăm să o instalați rulând:\\n{pythonCmd} -m pip install requests\\nFuncționalitățile pluginului care necesită Python nu vor fi disponibile până la instalare.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Port HTTP invalid configurat:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Serverul nu a pornit. Vă rugăm să configurați un port valid (1-65535) în setări.",
    NOTICE_PORT_IN_USE_PREFIX: "Portul",
    NOTICE_PORT_IN_USE_SUFFIX: "este deja utilizat. Vă rugăm să alegeți alt port în setări sau să închideți cealaltă aplicație care îl folosește. Serverul nu a pornit.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Nu s-a putut porni serverul pe portul",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Port invalid. Vă rugăm să introduceți un număr între 0 și 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Portul HTTP s-a schimbat (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Scriptul ar putea viza portul vechi dacă rulează deja sau a fost lansat extern.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Scriptul Python nu a fost găsit sau nu este un fișier:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Eroare la accesarea fișierului script:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Se rulează scriptul Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Eroare la rularea",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "cu",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "a eșuat cu codul de ieșire",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Verificați logurile consolei.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Nu s-a putut găsi un executabil Python valid. Încercat:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Vă rugăm să vă asigurați că Python este instalat și accesibil prin PATH-ul sistemului (sau lansatorul 'py' pe Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Folderul scripturilor Python nu a fost găsit sau este invalid. Verificați setările pluginului.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Eroare la citirea folderului scripturilor:",
    NOTICE_NO_SCRIPTS_FOUND: "Nu s-au găsit scripturi Python (.py) în folderul configurat.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Se rulează",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "script(uri) Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Intrarea nu corespunde formatului necesar.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Rulează un script Python specific",
    CMD_RUN_ALL_SCRIPTS_NAME: "Rulează toate scripturile Python din folder",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Trimite",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Selectați un script Python de rulat...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Setări Specifice Scriptului",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Reîmprospătare Setări Script",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Rescanați folderul scripturilor pentru a descoperi sau actualiza setările definite în scripturile Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Reîmprospătare Definiții",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Se reîmprospătează...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Folderul scripturilor Python nu este configurat. Vă rugăm să setați calea mai sus.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Nu s-au găsit scripturi cu setări definibile în folderul configurat sau descoperirea setărilor a eșuat. Apăsați 'Reîmprospătare Definiții' pentru a reîncerca.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Setări pentru:",
    SETTINGS_LANGUAGE_AUTO: "Automat (Potrivire Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Nu se pot reîmprospăta setările: Executabilul Python nu a fost găsit. Vă rugăm să vă asigurați că Python este instalat și în PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Se reîmprospătează definițiile setărilor scriptului...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definițiile setărilor scriptului au fost reîmprospătate cu succes!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Nu s-au putut reîmprospăta definițiile setărilor scriptului. Verificați logurile pentru detalii.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Nu se poate rula scriptul: Executabilul Python nu a fost găsit. Verificați instalarea și PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Reîmprospătare definiții setări script Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Avertisment de Securitate",
    SETTINGS_SECURITY_WARNING_TEXT: "Executarea scripturilor Python arbitrare poate fi riscantă. Asigurați-vă că aveți încredere în sursa oricărui script pe care îl rulați, deoarece acestea pot accesa sistemul și datele dvs. Autorul pluginului și autorii scripturilor nu sunt responsabili pentru nicio pierdere de date sau probleme de securitate cauzate de scripturile pe care alegeți să le executați. Rulați scripturile pe propriul risc.",
    SETTINGS_LANGUAGE_TITLE: "Limba Pluginului",
    SETTINGS_LANGUAGE_DESC: "Alegeți limba de afișare pentru interfața pluginului Python Bridge. 'Automat' urmează setarea de limbă a Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Sfat de performanță: Cache Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Pentru performanțe îmbunătățite la preluarea backlink-urilor (folosind funcția get_backlinks) în vault-uri mari, luați în considerare instalarea pluginului comunitar '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' de @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Cale folder invalidă. Vă rugăm să selectați un folder valid în setări.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Calea folderului de scripturi Python configurată '{path}' este invalidă sau nu a fost găsită. Se șterge setarea.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Script Activat",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Permiteți executarea acestui script prin comenzi, comenzi rapide sau 'Executare Toate'.",
    NOTICE_SCRIPT_DISABLED: "Scriptul '{scriptName}' este dezactivat în setări și nu poate fi executat.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Rulează la pornire",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Rulează automat acest script la pornirea Obsidian (doar dacă și 'Script Activat' este pornit).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Întârziere la pornire (secunde)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Așteaptă acest număr de secunde după pornirea Obsidian înainte de a rula scriptul (se aplică doar dacă 'Rulează la pornire' este activat). Folosește 0 pentru nicio întârziere.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Setați automat PYTHONPATH pentru bibliotecă",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Adaugă automat directorul pluginului la PYTHONPATH la rularea scripturilor, permițând importul direct al bibliotecii Python (Recomandat). Dacă este dezactivat, trebuie să copiați ObsidianPluginDevPythonToJS.py în folderul dvs. de scripturi sau să gestionați manual sys.path.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH automat dezactivat. Asigurați-vă că ObsidianPluginDevPythonToJS.py se află în folderul dvs. de scripturi sau gestionați manual sys.path.",
};

// cs.ts - cs translations
// WARNING: Auto-generated translations below. Please review and correct.
var cs = {
    SETTINGS_TAB_TITLE: "Nastavení Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Složka Python skriptů",
    SETTINGS_FOLDER_DESC: "Cesta ke složce obsahující vaše Python skripty (absolutní nebo relativní k vaultu).",
    SETTINGS_FOLDER_PLACEHOLDER: "/cesta/k/vašim/skriptům nebo ./scripts-python",
    SETTINGS_PORT_TITLE: "Port HTTP serveru",
    SETTINGS_PORT_DESC: "Port pro lokální HTTP server (1024-65535). Vyžaduje restart nebo uložení nastavení pro aplikaci.",
    SETTINGS_CACHE_TITLE: "Zakázat Python Cache (__pycache__)",
    SETTINGS_CACHE_DESC: "Spusťte Python s příznakem \"-B\", abyste zabránili zápisu .pyc souborů.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP port změněn na",
    NOTICE_PORT_CHANGED_SUFFIX: "Restartuji server...",
    NOTICE_PYTHON_MISSING_TITLE: "Chyba Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Spustitelný soubor Pythonu nebyl nalezen v PATH.\\nNainstalujte prosím Python a ujistěte se, že je přidán do systémové proměnné prostředí PATH, aby plugin mohl spouštět skripty.\\nFunkce pluginu vyžadující Python nebudou dostupné.",
    NOTICE_REQUESTS_MISSING_TITLE: "Chyba Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Požadovaná knihovna Pythonu 'requests' není nainstalována pro",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nNainstalujte ji spuštěním:\\n{pythonCmd} -m pip install requests\\nFunkce pluginu vyžadující Python nebudou dostupné, dokud nebude nainstalována.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Nakonfigurován neplatný HTTP port:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Server nebyl spuštěn. Nakonfigurujte prosím platný port (1-65535) v nastavení.",
    NOTICE_PORT_IN_USE_PREFIX: "Port",
    NOTICE_PORT_IN_USE_SUFFIX: "je již používán. Zvolte prosím jiný port v nastavení nebo ukončete jinou aplikaci, která jej používá. Server nebyl spuštěn.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Nepodařilo se spustit server na portu",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Neplatný port. Zadejte prosím číslo mezi 0 a 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: HTTP port změněn (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Skript může cílit na starý port, pokud již běží nebo byl spuštěn externě.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Python skript nebyl nalezen nebo není soubor:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Chyba při přístupu k souboru skriptu:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Spouštím Python skript:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Chyba při spouštění",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "s",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "selhal s návratovým kódem",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Zkontrolujte logy konzole.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Nelze najít platný spustitelný soubor Pythonu. Zkoušeno:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Ujistěte se, že je Python nainstalován a dostupný přes systémovou proměnnou PATH (nebo spouštěč 'py' ve Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Složka Python skriptů nebyla nalezena nebo je neplatná. Zkontrolujte nastavení pluginu.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Chyba při čtení složky skriptů:",
    NOTICE_NO_SCRIPTS_FOUND: "V nakonfigurované složce nebyly nalezeny žádné Python skripty (.py).",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Spouštím",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "Python skript(y)...",
    NOTICE_INPUT_VALIDATION_FAILED: "Vstup neodpovídá požadovanému formátu.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Spustit konkrétní Python skript",
    CMD_RUN_ALL_SCRIPTS_NAME: "Spustit všechny Python skripty ve složce",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Odeslat",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Vyberte Python skript ke spuštění...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Nastavení Specifická pro Skript",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Obnovit Nastavení Skriptů",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Znovu proskenujte složku skriptů pro zjištění nebo aktualizaci nastavení definovaných ve vašich Python skriptech.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Obnovit Definice",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Obnovuji...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Složka Python skriptů není nakonfigurována. Nastavte prosím cestu výše.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "V nakonfigurované složce nebyly nalezeny žádné skripty s definovatelnými nastaveními, nebo se zjištění nastavení nezdařilo. Klikněte na 'Obnovit Definice' pro opakování.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Nastavení pro:",
    SETTINGS_LANGUAGE_AUTO: "Automaticky (Podle Obsidianu)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Nelze obnovit nastavení: Spustitelný soubor Pythonu nebyl nalezen. Ujistěte se, že je Python nainstalován a v PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Obnovuji definice nastavení skriptů...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Definice nastavení skriptů úspěšně obnoveny!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Nepodařilo se obnovit definice nastavení skriptů. Zkontrolujte logy pro detaily.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Nelze spustit skript: Spustitelný soubor Pythonu nebyl nalezen. Zkontrolujte instalaci a PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Obnovit definice nastavení Python skriptů",
    SETTINGS_SECURITY_WARNING_TITLE: "Bezpečnostní Varování",
    SETTINGS_SECURITY_WARNING_TEXT: "Spouštění libovolných Python skriptů může být riskantní. Ujistěte se, že důvěřujete zdroji jakéhokoli skriptu, který spouštíte, protože mohou přistupovat k vašemu systému a datům. Autor pluginu a autoři skriptů nejsou zodpovědní za žádnou ztrátu dat nebo bezpečnostní problémy způsobené skripty, které se rozhodnete spustit. Spouštějte skripty na vlastní nebezpečí.",
    SETTINGS_LANGUAGE_TITLE: "Jazyk Pluginu",
    SETTINGS_LANGUAGE_DESC: "Zvolte jazyk zobrazení pro rozhraní pluginu Python Bridge. 'Automaticky' se řídí nastavením jazyka Obsidianu.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Tip pro výkon: Mezipaměť zpětných odkazů",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Pro zlepšení výkonu při načítání zpětných odkazů (pomocí funkce get_backlinks) ve velkých trezorech zvažte instalaci komunitního pluginu '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' od @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Neplatná cesta ke složce. Vyberte prosím platnou složku v nastavení.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Nakonfigurovaná cesta ke složce skriptů Python '{path}' je neplatná nebo nebyla nalezena. Vymazání nastavení.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Skript Povolen",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Povolit spuštění tohoto skriptu pomocí příkazů, zkratek nebo 'Spustit vše'.",
    NOTICE_SCRIPT_DISABLED: "Skript '{scriptName}' je v nastavení zakázán a nelze jej spustit.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Spustit při startu",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Automaticky spustit tento skript při startu Obsidianu (pouze pokud je také zapnuto 'Skript povolen').",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Zpoždění startu (sekundy)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Počkejte tento počet sekund po startu Obsidianu před spuštěním skriptu (platí pouze pokud je zapnuto 'Spustit při startu'). Použijte 0 pro žádné zpoždění.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Automaticky nastavit PYTHONPATH pro knihovnu",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Automaticky přidá adresář pluginu do PYTHONPATH při spouštění skriptů, což umožňuje přímý import knihovny Python (Doporučeno). Pokud je zakázáno, musíte zkopírovat ObsidianPluginDevPythonToJS.py do složky se skripty nebo spravovat sys.path ručně.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "Automatické nastavení PYTHONPATH zakázáno. Ujistěte se, že soubor ObsidianPluginDevPythonToJS.py je ve vaší složce skriptů, nebo spravujte sys.path ručně.",
};

// sw.ts - sw translations
// WARNING: Auto-generated translations below. Please review and correct.
var sw = {
    SETTINGS_TAB_TITLE: "Mipangilio ya Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Folda ya Hati za Python",
    SETTINGS_FOLDER_DESC: "Njia ya folda iliyo na hati zako za Python (kamili au inayohusiana na vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/njia/ya/hati/zako au ./scripts-python",
    SETTINGS_PORT_TITLE: "Lango la Seva ya HTTP",
    SETTINGS_PORT_DESC: "Lango la seva ya HTTP ya ndani (1024-65535). Inahitaji kuanzisha upya au kuhifadhi mipangilio ili kutumika.",
    SETTINGS_CACHE_TITLE: "Zima Kashe ya Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Endesha Python na bendera ya \"-B\" kuzuia uandishi wa faili za .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Lango la HTTP limebadilishwa kuwa",
    NOTICE_PORT_CHANGED_SUFFIX: "Inaanzisha upya seva...",
    NOTICE_PYTHON_MISSING_TITLE: "Hitilafu ya Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Faili tekelezi ya Python haikupatikana kwenye PATH.\\nTafadhali sakinisha Python na uhakikishe imeongezwa kwenye kigezo cha mazingira cha PATH cha mfumo wako ili programu-jalizi iweze kuendesha hati.\\nVipengele vya programu-jalizi vinavyohitaji Python havitapatikana.",
    NOTICE_REQUESTS_MISSING_TITLE: "Hitilafu ya Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Maktaba ya Python inayohitajika 'requests' haijasakinishwa kwa",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nTafadhali isakinishe kwa kuendesha:\\n{pythonCmd} -m pip install requests\\nVipengele vya programu-jalizi vinavyohitaji Python havitapatikana hadi isakinishwe.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Lango batili la HTTP limeundwa:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Seva haikuanzishwa. Tafadhali unda lango halali (1-65535) katika mipangilio.",
    NOTICE_PORT_IN_USE_PREFIX: "Lango",
    NOTICE_PORT_IN_USE_SUFFIX: "tayari linatumika. Tafadhali chagua lango lingine katika mipangilio au funga programu nyingine inayolitumia. Seva haikuanzishwa.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Imeshindwa kuanzisha seva kwenye lango",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Lango batili. Tafadhali weka nambari kati ya 0 na 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Lango la HTTP limebadilika (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Hati inaweza kulenga lango la zamani ikiwa tayari inaendeshwa au ilizinduliwa kutoka nje.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Hati ya Python haikupatikana au si faili:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Hitilafu kufikia faili ya hati:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Inaendesha hati ya Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Hitilafu kuendesha",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "na",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "imeshindwa na msimbo wa kutoka",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Angalia kumbukumbu za koni.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Haikuweza kupata faili tekelezi halali ya Python. Imejaribu:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Tafadhali hakikisha Python imesakinishwa na inapatikana kupitia PATH ya mfumo wako (au kizindua 'py' kwenye Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Folda ya hati za Python haikupatikana au si sahihi. Tafadhali angalia mipangilio ya programu-jalizi.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Hitilafu kusoma folda ya hati:",
    NOTICE_NO_SCRIPTS_FOUND: "Hakuna hati za Python (.py) zilizopatikana kwenye folda iliyoundwa.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Inaendesha",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "hati za Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Ingizo halilingani na umbizo linalohitajika.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Endesha hati maalum ya Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Endesha hati zote za Python kwenye folda",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Wasilisha",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Chagua hati ya Python ya kuendesha...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Mipangilio Maalum ya Hati",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Onyesha Upya Mipangilio ya Hati",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Changanua tena folda ya hati ili kugundua au kusasisha mipangilio iliyofafanuliwa ndani ya hati zako za Python.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Onyesha Upya Ufafanuzi",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Inaonyesha upya...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Folda ya hati za Python haijaundwa. Tafadhali weka njia hapo juu.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Hakuna hati zilizo na mipangilio inayoweza kufafanuliwa zilizopatikana kwenye folda iliyoundwa, au ugunduzi wa mipangilio umeshindwa. Bofya 'Onyesha Upya Ufafanuzi' ili kujaribu tena.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Mipangilio ya:",
    SETTINGS_LANGUAGE_AUTO: "Otomatiki (Linganisha na Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Haiwezi kuonyesha upya mipangilio: Faili tekelezi ya Python haikupatikana. Tafadhali hakikisha Python imesakinishwa na iko kwenye PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Inaonyesha upya ufafanuzi wa mipangilio ya hati...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Ufafanuzi wa mipangilio ya hati umeonyeshwa upya kwa mafanikio!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Imeshindwa kuonyesha upya ufafanuzi wa mipangilio ya hati. Angalia kumbukumbu kwa maelezo.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Haiwezi kuendesha hati: Faili tekelezi ya Python haikupatikana. Tafadhali angalia usakinishaji na PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Onyesha upya ufafanuzi wa mipangilio ya hati ya Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Onyo la Usalama",
    SETTINGS_SECURITY_WARNING_TEXT: "Kuendesha hati holela za Python kunaweza kuwa hatari. Hakikisha unaamini chanzo cha hati yoyote unayoendesha, kwani zinaweza kufikia mfumo na data yako. Mwandishi wa programu-jalizi na waandishi wa hati hawawajibikii upotevu wowote wa data au masuala ya usalama yanayosababishwa na hati unazochagua kutekeleza. Endesha hati kwa hatari yako mwenyewe.",
    SETTINGS_LANGUAGE_TITLE: "Lugha ya Programu-jalizi",
    SETTINGS_LANGUAGE_DESC: "Chagua lugha ya kuonyesha kwa kiolesura cha programu-jalizi ya Python Bridge. 'Otomatiki' hufuata mpangilio wa lugha wa Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Kidokezo cha Utendaji: Kashe ya Viungo vya Nyuma",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Kwa utendakazi ulioboreshwa wakati wa kurejesha viungo vya nyuma (kwa kutumia chaguo la kukokotoa la get_backlinks) katika kuba kubwa, zingatia kusakinisha programu-jalizi ya jumuiya ya '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' na @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Njia batili ya folda. Tafadhali chagua folda halali katika mipangilio.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Njia ya folda ya hati za Python iliyosanidiwa '{path}' si sahihi au haipatikani. Inafuta mpangilio.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Hati Imewashwa",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Ruhusu hati hii itekelezwe kupitia amri, njia za mkato, au 'Endesha Zote'.",
    NOTICE_SCRIPT_DISABLED: "Hati '{scriptName}' imezimwa katika mipangilio na haiwezi kutekelezwa.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Endesha Wakati wa Kuanza",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Endesha hati hii kiotomatiki wakati Obsidian inapoanza (tu ikiwa 'Hati Imewashwa' pia imewashwa).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Kuchelewa Kuanza (sekunde)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Subiri sekunde hizi nyingi baada ya Obsidian kuanza kabla ya kuendesha hati (inatumika tu ikiwa 'Endesha Wakati wa Kuanza' imewashwa). Tumia 0 bila kuchelewa.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Weka PYTHONPATH kiotomatiki kwa Maktaba",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Ongeza kiotomatiki saraka ya programu-jalizi kwenye PYTHONPATH wakati wa kuendesha hati, kuruhusu uagizaji wa moja kwa moja wa maktaba ya Python (Inapendekezwa). Ikiwa imezimwa, lazima unakili ObsidianPluginDevPythonToJS.py kwenye folda yako ya hati au udhibiti sys.path mwenyewe.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH otomatiki imezimwa. Hakikisha ObsidianPluginDevPythonToJS.py iko kwenye folda yako ya hati au dhibiti sys.path mwenyewe.",
};

// ha.ts - ha translations
// WARNING: Auto-generated translations below. Please review and correct.
var ha = {
    SETTINGS_TAB_TITLE: "Saitunan Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Jakkar Rubutun Python",
    SETTINGS_FOLDER_DESC: "Hanyar zuwa jakkar da ke dauke da rubutun Python naka (cikakke ko dangane da vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/hanya/zuwa/rubutunka ko ./scripts-python",
    SETTINGS_PORT_TITLE: "Tashar Sabar HTTP",
    SETTINGS_PORT_DESC: "Tasha don sabar HTTP ta gida (1024-65535). Yana buƙatar sake kunnawa ko adana saituna don amfani.",
    SETTINGS_CACHE_TITLE: "Kashe Cache na Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Gudun Python da tutar \"-B\" don hana rubuta fayilolin .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "An canza tashar HTTP zuwa",
    NOTICE_PORT_CHANGED_SUFFIX: "Sake kunna sabar...",
    NOTICE_PYTHON_MISSING_TITLE: "Kuskuren Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Ba a sami mai aiwatar da Python a cikin PATH ba.\\nDa fatan za a shigar da Python kuma tabbatar an ƙara shi zuwa madaidaicin yanayin PATH na tsarin ku don plugin ya iya gudanar da rubutu.\\nAbubuwan plugin da ke buƙatar Python ba za su kasance ba.",
    NOTICE_REQUESTS_MISSING_TITLE: "Kuskuren Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Ba a shigar da ɗakin karatu na Python da ake buƙata 'requests' ba don",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nDa fatan za a shigar da shi ta hanyar gudanarwa:\\n{pythonCmd} -m pip install requests\\nAbubuwan plugin da ke buƙatar Python ba za su kasance ba har sai an shigar.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "An saita tashar HTTP mara inganci:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Ba a fara sabar ba. Da fatan za a saita tasha mai inganci (1-65535) a cikin saituna.",
    NOTICE_PORT_IN_USE_PREFIX: "Tasha",
    NOTICE_PORT_IN_USE_SUFFIX: "ta riga ta kasance cikin amfani. Da fatan za a zaɓi wata tasha a cikin saituna ko rufe wani aikace-aikacen da ke amfani da ita. Ba a fara sabar ba.",
    NOTICE_SERVER_START_FAILED_PREFIX: "An kasa fara sabar a tashar",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Tashar da ba ta da inganci. Da fatan za a shigar da lamba tsakanin 0 da 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: An canza Tashar HTTP (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Rubutun na iya nufin tsohuwar tasha idan tana gudana ko an ƙaddamar da ita daga waje.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Ba a sami rubutun Python ba ko ba fayil ba ne:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Kuskure wajen samun damar fayil ɗin rubutu:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Ana gudanar da rubutun Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Kuskure wajen gudanarwa",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "da",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "ya kasa da lambar fita",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Duba log ɗin na'ura mai kwakwalwa.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "An kasa samun ingantaccen mai aiwatar da Python. An gwada:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Da fatan za a tabbatar an shigar da Python kuma ana iya samun damar ta ta hanyar PATH na tsarin ku (ko mai ƙaddamar da 'py' a kan Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Ba a sami jakkar rubutun Python ba ko mara inganci. Da fatan za a duba saitunan plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Kuskure wajen karanta jakkar rubutu:",
    NOTICE_NO_SCRIPTS_FOUND: "Ba a sami rubutun Python (.py) a cikin jakkar da aka saita ba.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Ana gudanarwa",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "rubutun Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Shigarwar ba ta dace da tsarin da ake buƙata ba.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Gudun takamaiman rubutun Python",
    CMD_RUN_ALL_SCRIPTS_NAME: "Gudun duk rubutun Python a cikin jaka",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Gabatar",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Zaɓi rubutun Python don gudana...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Saitunan Musamman na Rubutu",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Sake Sabunta Saitunan Rubutu",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Sake duba jakkar rubutu don gano ko sabunta saitunan da aka ayyana a cikin rubutun Python naka.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Sake Sabunta Ma'anoni",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Ana sake sabuntawa...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Ba a saita jakkar rubutun Python ba. Da fatan za a saita hanyar a sama.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Ba a sami rubutu tare da saitunan da za a iya ayyanawa a cikin jakkar da aka saita ba, ko kuma gano saitunan ya kasa. Danna 'Sake Sabunta Ma'anoni' don sake gwadawa.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Saituna don:",
    SETTINGS_LANGUAGE_AUTO: "Atomatik (Daidaita da Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "An kasa sake sabunta saituna: Ba a sami mai aiwatar da Python ba. Da fatan za a tabbatar an shigar da Python kuma yana cikin PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Ana sake sabunta ma'anonin saitunan rubutu...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "An sake sabunta ma'anonin saitunan rubutu cikin nasara!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "An kasa sake sabunta ma'anonin saitunan rubutu. Duba log don cikakken bayani.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "An kasa gudanar da rubutu: Ba a sami mai aiwatar da Python ba. Da fatan za a duba shigarwa da PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Sake sabunta ma'anonin saitunan rubutun Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Gargaɗin Tsaro",
    SETTINGS_SECURITY_WARNING_TEXT: "Gudanar da rubutun Python na son rai na iya zama mai haɗari. Tabbatar ka amince da tushen kowane rubutun da kake gudanarwa, saboda suna iya samun damar tsarin ka da bayananka. Marubucin plugin da marubutan rubutu ba su da alhakin kowane asarar bayanai ko matsalolin tsaro da rubutun da ka zaɓa ya haifar. Gudanar da rubutu a kan haɗarinka.",
    SETTINGS_LANGUAGE_TITLE: "Harshen Plugin",
    SETTINGS_LANGUAGE_DESC: "Zaɓi harshen nuni don mahallin plugin na Python Bridge. 'Atomatik' yana bin saitin harshe na Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Tukwici na Aiki: Ma'ajiyar Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Don ingantaccen aiki lokacin da ake dawo da backlinks (ta amfani da aikin get_backlinks) a cikin manyan vaults, yi la'akari da shigar da plugin na al'umma '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' ta @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Hanyar babban fayil mara inganci. Da fatan za a zaɓi babban fayil mai inganci a cikin saituna.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Hanyar babban fayil ɗin rubutun Python da aka saita '{path}' ba ta da inganci ko ba a samo ta ba. Share saitin.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "An kunna Script",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Bada damar aiwatar da wannan rubutun ta hanyar umarni, gajerun hanyoyi, ko 'Run All'.",
    NOTICE_SCRIPT_DISABLED: "An kashe Script '{scriptName}' a cikin saituna kuma ba za a iya aiwatar da shi ba.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Gudun Lokacin Farawa",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Gudun wannan rubutun ta atomatik lokacin da Obsidian ya fara (kawai idan 'An kunna Script' shima yana kunne).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Jinkirin Farawa (sakanni)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Jira wannan adadin sakanni bayan Obsidian ya fara kafin gudanar da rubutun (yana aiki ne kawai idan 'Gudun Lokacin Farawa' yana kunne). Yi amfani da 0 don babu jinkiri.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Saita PYTHONPATH ta atomatik don Laburare",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Ƙara babban fayil ɗin plugin ta atomatik zuwa PYTHONPATH lokacin gudanar da rubutun, yana ba da damar shigo da laburaren Python kai tsaye (An ba da shawarar). Idan an kashe, dole ne ka kwafi ObsidianPluginDevPythonToJS.py zuwa babban fayil ɗin rubutun ka ko sarrafa sys.path da hannu.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "An kashe PYTHONPATH ta atomatik. Tabbatar cewa ObsidianPluginDevPythonToJS.py yana cikin babban fayil ɗin rubutun ka ko sarrafa sys.path da hannu.",
};

// yo.ts - yo translations
// WARNING: Auto-generated translations below. Please review and correct.
var yo = {
    SETTINGS_TAB_TITLE: "Ètò Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Fóldà Àwọn Akosílẹ̀ Python",
    SETTINGS_FOLDER_DESC: "Ọ̀nà sí fóldà tí ó ní àwọn akosílẹ̀ Python rẹ (pàtàkì tàbí ní ìbámu pẹ̀lú vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/ọ̀nà/sí/àwọn/akosílẹ̀/rẹ tàbí ./scripts-python",
    SETTINGS_PORT_TITLE: "Ibùdó Máyà HTTP",
    SETTINGS_PORT_DESC: "Ibùdó fún máyà HTTP àdúgbò (1024-65535). Ó nílò àtúnbẹ̀rẹ̀ tàbí ìpamọ́ ètò láti lò ó.",
    SETTINGS_CACHE_TITLE: "Pa Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Ṣiṣẹ́ Python pẹ̀lú àsíá \"-B\" láti dènà kíkọ àwọn fáìlì .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Ibùdó HTTP ti yípadà sí",
    NOTICE_PORT_CHANGED_SUFFIX: "Àtúnbẹ̀rẹ̀ máyà...",
    NOTICE_PYTHON_MISSING_TITLE: "Àṣìṣe Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "A kò rí olùṣiṣẹ́ Python nínú PATH.\\nJọ̀wọ́ fi Python sori ẹ̀rọ kí o sì rí i dájú pé a ti fi kún ọ̀nà PATH àyíká ètò rẹ kí plugin lè ṣiṣẹ́ àwọn akosílẹ̀.\\nÀwọn ẹ̀yà plugin tí ó nílò Python kò ní sí.",
    NOTICE_REQUESTS_MISSING_TITLE: "Àṣìṣe Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Ilé-ìkàwé Python tí a nílò 'requests' kò sí fún",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nJọ̀wọ́ fi í sori ẹ̀rọ nípa ṣíṣe:\\n{pythonCmd} -m pip install requests\\nÀwọn ẹ̀yà plugin tí ó nílò Python kò ní sí títí a ó fi sori ẹ̀rọ.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Ibùdó HTTP tí a ṣètò kò tọ́:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Máyà kò bẹ̀rẹ̀. Jọ̀wọ́ ṣètò ibùdó tó tọ́ (1-65535) nínú ètò.",
    NOTICE_PORT_IN_USE_PREFIX: "Ibùdó",
    NOTICE_PORT_IN_USE_SUFFIX: "wà ní lílò tẹ́lẹ̀. Jọ̀wọ́ yan ibùdó mìíràn nínú ètò tàbí pa ohun èlò mìíràn tí ó ń lò ó. Máyà kò bẹ̀rẹ̀.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Ìbẹ̀rẹ̀ máyà lórí ibùdó",
    NOTICE_SERVER_START_FAILED_SUFFIX: "kùnà.",
    NOTICE_INVALID_PORT_RANGE: "Ibudo ti ko tọ. Jọwọ tẹ nọmba sii laarin 0 ati 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Ibùdó HTTP ti yípadà (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Akosílẹ̀ lè máa fojú sí ibùdó àtijọ́ tí ó bá ti ń ṣiṣẹ́ tàbí tí a bá ti gbéléwọ́ láti ìta.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "A kò rí akosílẹ̀ Python tàbí kì í ṣe fáìlì:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Àṣìṣe ní wíwọlé sí fáìlì akosílẹ̀:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Ṣíṣe akosílẹ̀ Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Àṣìṣe ní ṣíṣe",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "pẹ̀lú",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "kùnà pẹ̀lú koodu ìjáde",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Ṣàyẹ̀wò àwọn àkọsílẹ̀ console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "A kò lè rí olùṣiṣẹ́ Python tó tọ́. A gbìyànjú:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Jọ̀wọ́ rí i dájú pé a ti fi Python sori ẹ̀rọ àti pé ó wà nípasẹ̀ PATH ètò rẹ (tàbí olùgbéléwọ́ 'py' lórí Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "A kò rí fóldà àwọn akosílẹ̀ Python tàbí kò tọ́. Jọ̀wọ́ ṣàyẹ̀wò ètò plugin.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Àṣìṣe ní kíkà fóldà àwọn akosílẹ̀:",
    NOTICE_NO_SCRIPTS_FOUND: "A kò rí akosílẹ̀ Python (.py) kankan nínú fóldà tí a ṣètò.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Ṣíṣe",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "akosílẹ̀ Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Ìtẹnumọ́ kò bá ìtòlẹ́sẹẹsẹ tí a nílò mu.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Ṣiṣẹ́ akosílẹ̀ Python kan pàtó",
    CMD_RUN_ALL_SCRIPTS_NAME: "Ṣiṣẹ́ gbogbo akosílẹ̀ Python nínú fóldà",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Fisilẹ",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Yan akosílẹ̀ Python láti ṣiṣẹ́...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Ètò Pàtó fún Akosílẹ̀",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Tún Ètò Akosílẹ̀ Wò",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Tún ṣàyẹ̀wò fóldà àwọn akosílẹ̀ láti ṣàwárí tàbí mú ètò tí a ṣàlàyé nínú àwọn akosílẹ̀ Python rẹ dojú ìwọ̀n.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Tún Àwọn Ìtumọ̀ Wò",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Ní títúnwò...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Fóldà àwọn akosílẹ̀ Python kò tíì sí ní ṣíṣètò. Jọ̀wọ́ ṣètò ọ̀nà ní òkè.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "A kò rí akosílẹ̀ pẹ̀lú ètò tí a lè ṣàlàyé nínú fóldà tí a ṣètò, tàbí ìṣàwárí ètò kùnà. Tẹ 'Tún Àwọn Ìtumọ̀ Wò' láti gbìyànjú lẹ́ẹ̀kan sí i.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Ètò fún:",
    SETTINGS_LANGUAGE_AUTO: "Aifọwọyi (Bá Obsidian mu)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "A kò lè tún ètò wò: A kò rí olùṣiṣẹ́ Python. Jọ̀wọ́ rí i dájú pé a ti fi Python sori ẹ̀rọ àti pé ó wà nínú PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Ní títún àwọn ìtumọ̀ ètò akosílẹ̀ wò...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Àwọn ìtumọ̀ ètò akosílẹ̀ ti tún wò ní àṣeyọrí!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Ìtúnwò àwọn ìtumọ̀ ètò akosílẹ̀ kùnà. Ṣàyẹ̀wò àwọn àkọsílẹ̀ fún àlàyé.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "A kò lè ṣiṣẹ́ akosílẹ̀: A kò rí olùṣiṣẹ́ Python. Jọ̀wọ́ ṣàyẹ̀wò ìfisori ẹ̀rọ àti PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Tún àwọn ìtumọ̀ ètò akosílẹ̀ Python wò",
    SETTINGS_SECURITY_WARNING_TITLE: "Ìkìlọ̀ Ààbò",
    SETTINGS_SECURITY_WARNING_TEXT: "Ṣíṣe àwọn akosílẹ̀ Python láìsí ìṣọ́ra lè léwu. Rí i dájú pé o gbẹ́kẹ̀lé orísun akosílẹ̀ èyíkéyìí tí o bá ń ṣiṣẹ́, nítorí wọ́n lè wọlé sí ètò àti dátà rẹ. Onkọ̀wé plugin àti àwọn onkọ̀wé akosílẹ̀ kò ní ṣe ìdájọ́ fún ìpàdánù dátà tàbí àwọn ọ̀ràn ààbò tí ó bá ṣẹlẹ̀ látàrí àwọn akosílẹ̀ tí o bá yàn láti ṣiṣẹ́. Ṣiṣẹ́ àwọn akosílẹ̀ lórí ewu tìrẹ.",
    SETTINGS_LANGUAGE_TITLE: "Èdè Plugin",
    SETTINGS_LANGUAGE_DESC: "Yan èdè ìfihàn fún ìwojú plugin Python Bridge. 'Aifọwọyi' ń tẹ̀lé ètò èdè Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Àbá Iṣẹ́ ṣíṣe: Cache Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Fún iṣẹ́ ṣíṣe tó dára síi nígbà tí o bá ń gba àwọn backlink (lílo iṣẹ́ get_backlinks) nínú àwọn vault ńlá, ronú láti fi plugin àwùjọ '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' láti ọwọ́ @mnaoumov sínú ẹ̀rọ.",
    NOTICE_INVALID_FOLDER_PATH: "Opopona folda ti ko tọ. Jọwọ yan folda to tọ ninu awọn eto.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Ọna folda awọn iwe afọwọkọ Python ti a tunto '{path}' ko wulo tabi ko ri. Ko eto kuro.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Iwe Afọwọkọ Ti ṣiṣẹ",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Gba iwe afọwọkọ yii laaye lati ṣiṣẹ nipasẹ awọn aṣẹ, awọn ọna abuja, tabi 'Ṣiṣe Gbogbo'.",
    NOTICE_SCRIPT_DISABLED: "Iwe afọwọkọ '{scriptName}' jẹ alaabo ninu awọn eto ati pe ko le ṣiṣẹ.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Ṣiṣe ni Ibẹrẹ",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Ṣiṣe iwe afọwọkọ yii laifọwọyi nigbati Obsidian ba bẹrẹ (nikan ti 'Iwe afọwọkọ Ti ṣiṣẹ' ba tun wa ni titan).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Idaduro Ibẹrẹ (iṣẹju-aaya)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Duro fun iye awọn aaya yii lẹhin ti Obsidian bẹrẹ ṣaaju ṣiṣe iwe afọwọkọ naa (kan nikan ti 'Ṣiṣe ni Ibẹrẹ' ba wa ni titan). Lo 0 fun ko si idaduro.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Ṣeto PYTHONPATH laifọwọyi fun Ile-ikawe",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Ṣafikun itọsọna itanna si PYTHONPATH laifọwọyi nigbati o nṣiṣẹ awọn iwe afọwọkọ, gbigba gbigbe wọle taara ti ile-ikawe Python (Iṣeduro). Ti o ba jẹ alaabo, o gbọdọ daakọ ObsidianPluginDevPythonToJS.py si folda iwe afọwọkọ rẹ tabi ṣakoso sys.path pẹlu ọwọ.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH aifọwọyi alaabo. Rii daju pe ObsidianPluginDevPythonToJS.py wa ninu folda iwe afọwọkọ rẹ tabi ṣakoso sys.path pẹlu ọwọ.",
};

// ig.ts - ig translations
// WARNING: Auto-generated translations below. Please review and correct.
var ig = {
    SETTINGS_TAB_TITLE: "Ntọala Obsidian Python Bridge",
    SETTINGS_FOLDER_TITLE: "Nchekwa edemede Python",
    SETTINGS_FOLDER_DESC: "Ụzọ gaa na nchekwa nwere edemede Python gị (zuru oke ma ọ bụ dabere na vault).",
    SETTINGS_FOLDER_PLACEHOLDER: "/ụzọ/gaa/na/edemede/gị ma ọ bụ ./scripts-python",
    SETTINGS_PORT_TITLE: "Ọdụ ụgbọ mmiri HTTP Server",
    SETTINGS_PORT_DESC: "Ọdụ ụgbọ mmiri maka sava HTTP mpaghara (1024-65535). Chọrọ ịmalitegharị ma ọ bụ chekwaa ntọala iji tinye.",
    SETTINGS_CACHE_TITLE: "Gbanyụọ Cache Python (__pycache__)",
    SETTINGS_CACHE_DESC: "Gbaa Python na ọkọlọtọ \"-B\" iji gbochie ide faịlụ .pyc.",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "Agbanweela ọdụ ụgbọ mmiri HTTP ka ọ bụrụ",
    NOTICE_PORT_CHANGED_SUFFIX: "Na-amalitegharị sava...",
    NOTICE_PYTHON_MISSING_TITLE: "Njehie Python Bridge:",
    NOTICE_PYTHON_MISSING_DESC: "Ahụghị onye na-eme Python na PATH.\\nBiko wụnye Python ma hụ na agbakwunyere ya na mgbanwe gburugburu PATH sistemụ gị ka ngwa mgbakwunye wee nwee ike ịgba edemede.\\nAtụmatụ ngwa mgbakwunye chọrọ Python agaghị adị.",
    NOTICE_REQUESTS_MISSING_TITLE: "Njehie Python Bridge:",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "Etinyeghị ọba akwụkwọ Python achọrọ 'requests' maka",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: ".\\nBiko wụnye ya site na ịgba ọsọ:\\n{pythonCmd} -m pip install requests\\nAtụmatụ ngwa mgbakwunye chọrọ Python agaghị adị ruo mgbe etinyere ya.",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "Ahaziri ọdụ ụgbọ mmiri HTTP ezighi ezi:",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "Amaliteghị sava. Biko hazie ọdụ ụgbọ mmiri ziri ezi (1-65535) na ntọala.",
    NOTICE_PORT_IN_USE_PREFIX: "Ọdụ ụgbọ mmiri",
    NOTICE_PORT_IN_USE_SUFFIX: "anọworị n'iji. Biko họrọ ọdụ ụgbọ mmiri ọzọ na ntọala ma ọ bụ mechie ngwa ọzọ na-eji ya. Amaliteghị sava.",
    NOTICE_SERVER_START_FAILED_PREFIX: "Ọdịda ịmalite sava na ọdụ ụgbọ mmiri",
    NOTICE_SERVER_START_FAILED_SUFFIX: ".",
    NOTICE_INVALID_PORT_RANGE: "Ọdụ ụgbọ mmiri ezighi ezi. Biko tinye nọmba n'etiti 0 na 65535.",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge: Ọdụ ụgbọ mmiri HTTP agbanweela (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: "). Edemede nwere ike ịchọ ọdụ ụgbọ mmiri ochie ma ọ bụrụ na ọ na-agba ọsọ ma ọ bụ malite ya na mpụga.",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "Ahụghị edemede Python ma ọ bụ abụghị faịlụ:",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "Njehie ịnweta faịlụ edemede:",
    NOTICE_RUNNING_SCRIPT_PREFIX: "Na-agba edemede Python:",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "Njehie ịgba ọsọ",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "na",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "kụrụ afọ n'ala na koodu ọpụpụ",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "Lelee ndekọ console.",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "Enweghị ike ịchọta onye na-eme Python ziri ezi. Anwara:",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "Biko hụ na etinyere Python ma nwee ike ịnweta ya site na PATH sistemụ gị (ma ọ bụ onye mmalite 'py' na Windows).",
    NOTICE_SCRIPTS_FOLDER_INVALID: "Ahụghị nchekwa edemede Python ma ọ bụ ezighi ezi. Biko lelee ntọala ngwa mgbakwunye.",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "Njehie ịgụ nchekwa edemede:",
    NOTICE_NO_SCRIPTS_FOUND: "Ahụghị edemede Python (.py) ọ bụla na nchekwa ahaziri.",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "Na-agba",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "edemede Python...",
    NOTICE_INPUT_VALIDATION_FAILED: "Ntinye adabaghị n'ụdị achọrọ.",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "Gbaa otu edemede Python kpọmkwem",
    CMD_RUN_ALL_SCRIPTS_NAME: "Gbaa edemede Python niile dị na nchekwa",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "Nyefee",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "Họrọ edemede Python ka ị gbaa...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "Ntọala Pụrụ Iche Maka Edemede",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "Megharịa Ntọala Edemede",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "Nyochaa nchekwa edemede ọzọ iji chọpụta ma ọ bụ melite ntọala akọwapụtara n'ime edemede Python gị.",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "Megharịa Nkọwa",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "Na-emegharị...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "Ahazibeghị nchekwa edemede Python. Biko tọọ ụzọ n'elu.",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "Ahụghị edemede nwere ntọala enwere ike ịkọwa na nchekwa ahaziri, ma ọ bụ nchọpụta ntọala kụrụ afọ n'ala. Pịa 'Megharịa Nkọwa' iji nwaa ọzọ.",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "Ntọala maka:",
    SETTINGS_LANGUAGE_AUTO: "Akpaaka (Dakọtara na Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "Enweghị ike imegharị ntọala: Ahụghị onye na-eme Python. Biko hụ na etinyere Python ma nọrọ na PATH.",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "Na-emegharị nkọwa ntọala edemede...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "Emegharịala nkọwa ntọala edemede nke ọma!",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "Ọdịda imegharị nkọwa ntọala edemede. Lelee ndekọ maka nkọwa.",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "Enweghị ike ịgba edemede: Ahụghị onye na-eme Python. Biko lelee ntinye na PATH.",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "Megharịa nkọwa ntọala edemede Python",
    SETTINGS_SECURITY_WARNING_TITLE: "Ịdọ aka ná ntị Nche",
    SETTINGS_SECURITY_WARNING_TEXT: "Ịgba edemede Python na-enweghị isi nwere ike ịdị ize ndụ. Hụ na ị tụkwasịrị obi na isi mmalite nke edemede ọ bụla ị na-agba, n'ihi na ha nwere ike ịnweta sistemụ na data gị. Onye edemede ngwa mgbakwunye na ndị edemede edemede abụghị maka mfu data ọ bụla ma ọ bụ nsogbu nchekwa nke edemede ị họọrọ ịgba kpatara. Gbaa edemede n'ihe ize ndụ nke gị.",
    SETTINGS_LANGUAGE_TITLE: "Asụsụ Ngwa Mgbakwunye",
    SETTINGS_LANGUAGE_DESC: "Họrọ asụsụ ngosi maka interface ngwa mgbakwunye Python Bridge. 'Akpaaka' na-agbaso ntọala asụsụ Obsidian.",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "Ndụmọdụ Arụmọrụ: Cache Backlink",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "Maka arụmọrụ ka mma mgbe ị na-eweghachite backlinks (iji ọrụ get_backlinks) na nnukwu vaults, tụlee ịwụnye ngwa mgbakwunye obodo '[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)' site na @mnaoumov.",
    NOTICE_INVALID_FOLDER_PATH: "Ụzọ nchekwa ezighi ezi. Biko họrọ nchekwa ziri ezi na ntọala.",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "Ụzọ nchekwa edemede Python ahaziri '{path}' ezighi ezi ma ọ bụ ahụghị ya. Ihichapụ ntọala.",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "Edere edemede Enyere aka",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "Kwe ka edemede a mee site na iwu, ụzọ mkpirisi, ma ọ bụ 'Gbaa niile'.",
    NOTICE_SCRIPT_DISABLED: "Edemede '{scriptName}' nwere nkwarụ na ntọala na enweghị ike ime ya.",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "Gbaa ọsọ na mmalite",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Na-agba ọsọ edemede a na-akpaghị aka mgbe Obsidian malitere (naanị ma ọ bụrụ na 'Ederede agbanyere' dịkwa).",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "Nkwụsị mmalite (sekọnd)",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Chere ọtụtụ sekọnd ndị a mgbe Obsidian malitere tupu ịgba ọsọ edemede ahụ (na-emetụta naanị ma ọ bụrụ na 'Gbaa ọsọ na mmalite' dị). Jiri 0 maka enweghị igbu oge.",
    SETTINGS_AUTO_PYTHONPATH_NAME: "Tọọ PYTHONPATH na akpaghị aka maka ọba akwụkwọ",
    SETTINGS_AUTO_PYTHONPATH_DESC: "Tinye akpaghị aka ndekọ ngwa mgbakwunye na PYTHONPATH mgbe ị na-agba ọsọ edemede, na-enye ohere mbubata ozugbo nke ọba akwụkwọ Python (Akwadoro). Ọ bụrụ na nkwarụ, ị ga-edepụtaghachi ObsidianPluginDevPythonToJS.py na folda edemede gị ma ọ bụ jikwaa sys.path aka.",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "PYTHONPATH akpaaka nwere nkwarụ. Gbaa mbọ hụ na ObsidianPluginDevPythonToJS.py dị na folda edemede gị ma ọ bụ jikwaa sys.path aka.",
};

// zht.ts - zht translations
// WARNING: Auto-generated translations below. Please review and correct.
var zht = {
    SETTINGS_TAB_TITLE: "Obsidian Python Bridge 設定",
    SETTINGS_FOLDER_TITLE: "Python 腳本資料夾",
    SETTINGS_FOLDER_DESC: "包含您的 Python 腳本的資料夾路徑（絕對路徑或相對於 vault 的路徑）。",
    SETTINGS_FOLDER_PLACEHOLDER: "/您的/腳本/路徑 或 ./scripts-python",
    SETTINGS_PORT_TITLE: "HTTP 伺服器端口",
    SETTINGS_PORT_DESC: "本地 HTTP 伺服器的端口（1024-65535）。需要重新啟動或儲存設定才能套用。",
    SETTINGS_CACHE_TITLE: "停用 Python 快取 (__pycache__)",
    SETTINGS_CACHE_DESC: "使用 \"-B\" 標誌運行 Python 以防止寫入 .pyc 檔案。",
    NOTICE_PLUGIN_NAME: "Python Bridge",
    NOTICE_PORT_CHANGED_PREFIX: "HTTP 端口已更改為",
    NOTICE_PORT_CHANGED_SUFFIX: "正在重新啟動伺服器...",
    NOTICE_PYTHON_MISSING_TITLE: "Python Bridge 錯誤：",
    NOTICE_PYTHON_MISSING_DESC: "在 PATH 中找不到 Python 可執行檔。\\n請安裝 Python 並確保它已添加到您系統的 PATH 環境變數中，以便插件運行腳本。\\n需要 Python 的插件功能將無法使用。",
    NOTICE_REQUESTS_MISSING_TITLE: "Python Bridge 錯誤：",
    NOTICE_REQUESTS_MISSING_DESC_PREFIX: "所需的 Python 函式庫 'requests' 未安裝於",
    NOTICE_REQUESTS_MISSING_DESC_SUFFIX: "。\\n請運行以下指令安裝：\\n{pythonCmd} -m pip install requests\\n需要 Python 的插件功能在安裝前將無法使用。",
    NOTICE_INVALID_PORT_CONFIG_PREFIX: "設定了無效的 HTTP 端口：",
    NOTICE_INVALID_PORT_CONFIG_SUFFIX: "伺服器未啟動。請在設定中配置一個有效的端口（1-65535）。",
    NOTICE_PORT_IN_USE_PREFIX: "端口",
    NOTICE_PORT_IN_USE_SUFFIX: "已被使用。請在設定中選擇另一個端口或關閉正在使用它的其他應用程式。伺服器未啟動。",
    NOTICE_SERVER_START_FAILED_PREFIX: "無法在端口上啟動伺服器",
    NOTICE_SERVER_START_FAILED_SUFFIX: "。",
    NOTICE_INVALID_PORT_RANGE: "連接埠無效。請輸入 0 到 65535 之間的數字。",
    NOTICE_PORT_MISMATCH_WARNING_PREFIX: "⚠️ Python Bridge：HTTP 端口已更改 (",
    NOTICE_PORT_MISMATCH_WARNING_MIDDLE: "->",
    NOTICE_PORT_MISMATCH_WARNING_SUFFIX: ")。如果腳本已在運行或從外部啟動，它可能會指向舊端口。",
    NOTICE_SCRIPT_NOT_FOUND_PREFIX: "找不到 Python 腳本或它不是一個檔案：",
    NOTICE_SCRIPT_ACCESS_ERROR_PREFIX: "存取腳本檔案時出錯：",
    NOTICE_RUNNING_SCRIPT_PREFIX: "正在運行 Python 腳本：",
    NOTICE_SCRIPT_ERROR_RUNNING_PREFIX: "運行時出錯",
    NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE: "使用",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE: "失敗，退出代碼為",
    NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX: "請檢查控制台日誌。",
    NOTICE_PYTHON_EXEC_NOT_FOUND_PREFIX: "找不到有效的 Python 可執行檔。已嘗試：",
    NOTICE_PYTHON_EXEC_NOT_FOUND_SUFFIX: "請確保已安裝 Python 並且可以通過系統的 PATH（或 Windows 上的 'py' 啟動器）訪問。",
    NOTICE_SCRIPTS_FOLDER_INVALID: "找不到 Python 腳本資料夾或無效。請檢查插件設定。",
    NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX: "讀取腳本資料夾時出錯：",
    NOTICE_NO_SCRIPTS_FOUND: "在設定的資料夾中找不到 Python 腳本 (.py)。",
    NOTICE_RUNNING_ALL_SCRIPTS_PREFIX: "正在運行",
    NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX: "個 Python 腳本...",
    NOTICE_INPUT_VALIDATION_FAILED: "輸入不符合所需格式。",
    CMD_RUN_SPECIFIC_SCRIPT_NAME: "運行特定的 Python 腳本",
    CMD_RUN_ALL_SCRIPTS_NAME: "運行資料夾中的所有 Python 腳本",
    MODAL_USER_INPUT_SUBMIT_BUTTON: "提交",
    MODAL_SELECT_SCRIPT_PLACEHOLDER: "選擇要運行的 Python 腳本...",
    SETTINGS_SCRIPT_SETTINGS_TITLE: "腳本特定設定",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME: "重新整理腳本設定",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC: "重新掃描腳本資料夾以發現或更新您的 Python 腳本中定義的設定。",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT: "重新整理定義",
    SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING: "正在重新整理...",
    SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED: "未設定 Python 腳本資料夾。請在上方設定路徑。",
    SETTINGS_NO_SCRIPT_SETTINGS_FOUND: "在設定的資料夾中找不到具有可定義設定的腳本，或者設定發現失敗。點擊「重新整理定義」重試。",
    SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX: "設定：",
    SETTINGS_LANGUAGE_AUTO: "自動 (匹配 Obsidian)",
    NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH: "無法重新整理設定：找不到 Python 可執行檔。請確保已安裝 Python 並在 PATH 中。",
    NOTICE_REFRESHING_SCRIPT_SETTINGS: "正在重新整理腳本設定定義...",
    NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS: "腳本設定定義已成功重新整理！",
    NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED: "重新整理腳本設定定義失敗。請檢查日誌以獲取詳細資訊。",
    NOTICE_PYTHON_EXEC_MISSING_FOR_RUN: "無法運行腳本：找不到 Python 可執行檔。請檢查安裝和 PATH。",
    CMD_REFRESH_SCRIPT_SETTINGS_NAME: "重新整理 Python 腳本設定定義",
    SETTINGS_SECURITY_WARNING_TITLE: "安全警告",
    SETTINGS_SECURITY_WARNING_TEXT: "執行任意 Python 腳本可能存在風險。請確保您信任所運行腳本的來源，因為它們可以訪問您的系統和數據。插件作者和腳本作者對您選擇執行的腳本造成的任何數據丟失或安全問題概不負責。運行腳本需自擔風險。",
    SETTINGS_LANGUAGE_TITLE: "插件語言",
    SETTINGS_LANGUAGE_DESC: "選擇 Python Bridge 插件界面的顯示語言。「自動」將遵循 Obsidian 的語言設定。",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_TITLE: "效能提示：反向連結快取",
    SETTINGS_BACKLINK_CACHE_RECOMMENDATION_DESC: "為了在大型儲存庫中擷取反向連結（使用 get_backlinks 函數）時提高效能，請考慮安裝由 @mnaoumov 開發的「[Backlink Cache](https://github.com/mnaoumov/obsidian-backlink-cache)」社群外掛。",
    NOTICE_INVALID_FOLDER_PATH: "資料夾路徑無效。請在設定中選擇一個有效的資料夾。",
    NOTICE_INVALID_STARTUP_FOLDER_PATH: "設定的 Python 指令碼資料夾路徑 '{path}' 無效或找不到。正在清除設定。",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME: "腳本已啟用",
    SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC: "允許透過指令、快捷鍵或「全部執行」來執行此腳本。",
    NOTICE_SCRIPT_DISABLED: "腳本 '{scriptName}' 已在設定中停用，無法執行。",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME: "啟動時執行",
    SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC: "Obsidian 啟動時自動執行此腳本（僅當「腳本已啟用」也開啟時）。",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME: "啟動延遲（秒）",
    SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC: "Obsidian 啟動後等待這麼多秒再執行腳本（僅當「啟動時執行」開啟時適用）。使用 0 表示無延遲。",
    SETTINGS_AUTO_PYTHONPATH_NAME: "為庫自動設定 PYTHONPATH",
    SETTINGS_AUTO_PYTHONPATH_DESC: "執行腳本時自動將插件目錄添加到 PYTHONPATH，允許直接導入 Python 庫（推薦）。如果停用，您必須將 ObsidianPluginDevPythonToJS.py 複製到您的腳本資料夾或手動管理 sys.path。",
    NOTICE_AUTO_PYTHONPATH_DISABLED_DESC: "自動 PYTHONPATH 已停用。請確保 ObsidianPluginDevPythonToJS.py 在您的腳本資料夾中，或手動管理 sys.path。",
};

// Register all available languages with their translation objects
const translations = {
    en, fr, es, de, zh, ar, pt, ru, ja, hi, ko, it, tr, id, pl,
    bn, ur, vi, th, fil, fa, ms, nl, uk, el, sv, fi, hu, ro, cs,
    sw, ha, yo, ig, zht
};
let activeTranslations = en; // Default to English
/**
 * Loads the translations based on the plugin setting or Obsidian's locale.
 * @param plugin The instance of the ObsidianPythonBridge plugin to access settings.
 */
function loadTranslations(plugin) {
    const userChoice = plugin.settings.pluginLanguage;
    let targetLocale = null;
    plugin.logDebug(`User language choice: ${userChoice}`);
    // 1. Check user's explicit choice in settings
    if (userChoice && userChoice !== 'auto' && translations[userChoice]) {
        targetLocale = userChoice;
        plugin.logDebug(`Using locale from plugin setting: ${targetLocale}`);
    }
    // 2. If choice is 'auto' or invalid, use detection logic
    else {
        const storageLocale = window.localStorage.getItem("language");
        const momentLocale = momentExports.locale();
        plugin.logDebug(`Debug Locales - localStorage: ${storageLocale}, moment.locale(): ${momentLocale}`);
        if (storageLocale && typeof storageLocale === "string") {
            targetLocale = storageLocale;
            plugin.logDebug(`Using locale from localStorage: ${targetLocale}`);
        }
        else if (momentLocale) {
            targetLocale = momentLocale;
            plugin.logDebug(`localStorage empty, using locale from moment.locale(): ${targetLocale}`);
        }
        else {
            plugin.logDebug(`Both localStorage and moment.locale() are unavailable.`);
        }
    }
    // Now, load translations based on the determined targetLocale
    if (targetLocale && translations[targetLocale]) {
        // Exact match (e.g., 'fr', 'en')
        activeTranslations = translations[targetLocale];
        plugin.logDebug(`Loaded translations for exact locale '${targetLocale}'`);
    }
    else if (targetLocale) {
        // Try base language if exact match failed (e.g., 'en' from 'en-gb')
        const baseLocale = targetLocale.split("-")[0];
        if (translations[baseLocale]) {
            activeTranslations = translations[baseLocale];
            plugin.logDebug(`Loaded translations for base locale '${baseLocale}' (from '${targetLocale}')`);
        }
        else {
            // Fallback to English if neither exact nor base locale is found
            activeTranslations = en;
            plugin.logDebug(`Locale '${targetLocale}' (or base '${baseLocale}') not found, falling back to 'en'.`);
        }
    }
    else {
        // Fallback to English if no locale could be determined
        activeTranslations = en;
        plugin.logDebug(`No target locale determined, falling back to 'en'.`);
    }
}
/**
 * Gets the translated string for a given key.
 * @param key The key of the string to translate.
 * @returns The translated string, or the key itself if not found.
 */
function t(key) {
    var _a;
    return (_a = activeTranslations[key]) !== null && _a !== void 0 ? _a : key;
}
/**
 * Returns a record of available languages, mapping the language code
 * to its native name (or English name if native is unavailable/unsuitable).
 */
function getAvailableLanguages() {
    // Add new languages here with their native names
    return {
        en: "English",
        fr: "Français",
        es: "Español",
        de: "Deutsch",
        zh: "简体中文", // Simplified Chinese
        ar: "العربية",
        pt: "Português", // Assumed Brazilian/Generic
        ru: "Русский",
        ja: "日本語",
        hi: "हिन्दी",
        ko: "한국어",
        it: "Italiano",
        tr: "Türkçe",
        id: "Bahasa Indonesia",
        pl: "Polski",
        bn: "বাংলা", // Bengali
        ur: "اردو", // Urdu
        vi: "Tiếng Việt", // Vietnamese
        th: "ไทย", // Thai
        fil: "Filipino", // Filipino (Tagalog)
        fa: "فارسی", // Persian (Farsi)
        ms: "Bahasa Melayu", // Malay
        nl: "Nederlands", // Dutch
        uk: "Українська", // Ukrainian
        el: "Ελληνικά", // Greek
        sv: "Svenska", // Swedish (Represents Scandinavian)
        fi: "Suomi", // Finnish
        hu: "Magyar", // Hungarian
        ro: "Română", // Romanian
        cs: "Čeština", // Czech
        sw: "Kiswahili", // Swahili
        ha: "Hausa", // Hausa
        yo: "Yorùbá", // Yoruba
        ig: "Igbo", // Igbo
        zht: "繁體中文", // Traditional Chinese
    };
}

// --- src/environment_checker.ts ---
// Handles checking the Python environment (executable, required libraries).
/**
 * Checks if Python is accessible and the 'requests' library is installed.
 * Stores the found executable in `plugin.pythonExecutable`.
 * Shows persistent notifications if issues are found.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns {Promise<boolean>} True if environment is OK, false otherwise.
 */
function checkPythonEnvironment(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        plugin.logInfo("Checking Python environment...");
        plugin.pythonExecutable = null; // Reset before check
        const pythonCmd = yield findPythonExecutable(plugin);
        if (!pythonCmd) {
            plugin.logError("Python executable not found during environment check.");
            showPythonMissingNotification();
            return false;
        } // Indicate failure
        plugin.logInfo(`Found Python executable: ${pythonCmd}`);
        plugin.pythonExecutable = pythonCmd; // Store the found command
        // Check for 'requests'
        const requestsInstalled = yield checkPythonModule(plugin, pythonCmd, "requests");
        if (!requestsInstalled) {
            plugin.logError(`Python module 'requests' not found using ${pythonCmd}.`);
            showRequestsMissingNotification(plugin, pythonCmd);
            return false;
        } // Indicate failure
        // Check for 'PyYAML' (optional, only warn)
        const yamlInstalled = yield checkPythonModule(plugin, pythonCmd, "yaml");
        if (!yamlInstalled)
            plugin.logWarn(`Optional Python module 'PyYAML' not found using ${pythonCmd}. Frontmatter property management features will not work.`); // Don't show a persistent notice for optional dependencies
        else
            plugin.logInfo("'PyYAML' module found.");
        plugin.logInfo("Python environment check completed successfully.");
        return true; // Indicate success (even if optional PyYAML is missing)
    });
}
/**
 * Tries to find a working Python command ('py', 'python3', 'python').
 * @param plugin The ObsidianPythonBridge plugin instance (for logging).
 * @returns The command string if found, otherwise null.
 */
function findPythonExecutable(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        const isWindows = obsidian.Platform.isWin; // Use Obsidian's Platform API
        const commandsToTry = isWindows ? ["py", "python3", "python"] : ["python3", "python"];
        plugin.logDebug(`Attempting to find Python executable. Trying: ${commandsToTry.join(", ")}`);
        for (const cmd of commandsToTry) {
            try {
                // Try running 'command --version' which should be quick and safe
                yield new Promise((resolve, reject) => {
                    const process = child_process.spawn(cmd, ["--version"]);
                    process.on("error", reject); // Failed to spawn (ENOENT)
                    process.on("close", (code) => {
                        if (isWindows && code === 9009)
                            reject(new Error(`Command ${cmd} resulted in exit code 9009 (MS Store alias?)`));
                        else if (code === 0)
                            resolve(); // Success
                        else
                            reject(new Error(`Command ${cmd} --version exited with code ${code}`)); // Reject if the --version command failed for this specific 'cmd'
                    });
                });
                plugin.logDebug(`Python executable found: ${cmd}`);
                return cmd; // Command worked
            }
            catch (error) {
                plugin.logDebug(`Command '${cmd}' not found or failed version check: ${error instanceof Error ? error.message : String(error)}`);
            }
        }
        plugin.logError(`No valid Python executable found after trying: ${commandsToTry.join(", ")}`);
        return null; // Return null if no command was found
    });
}
/**
 * Checks if a Python module can be imported using a specific Python command.
 * @param plugin The ObsidianPythonBridge plugin instance (for logging).
 * @param pythonCmd The Python command to use (e.g., 'python3', 'py').
 * @param moduleName The name of the module to check (e.g., 'requests', 'yaml').
 * @returns True if the module can be imported, false otherwise.
 */
function checkPythonModule(plugin, pythonCmd, moduleName) {
    return __awaiter(this, void 0, void 0, function* () {
        plugin.logDebug(`Checking import of module '${moduleName}' using command '${pythonCmd}'...`);
        try {
            yield new Promise((resolve, reject) => {
                var _a;
                // Use spawn, similar to findPythonExecutable and runPythonScript
                const process = child_process.spawn(pythonCmd, ["-c", `import ${moduleName}`]);
                let stderrOutput = "";
                (_a = process.stderr) === null || _a === void 0 ? void 0 : _a.on("data", (data) => { stderrOutput += data.toString(); });
                process.on("error", (error) => {
                    // Handles errors like command not found *if* findPythonExecutable somehow failed
                    plugin.logWarn(`Spawn error during module check for '${moduleName}' using '${pythonCmd}': ${error.message}`);
                    reject(error);
                });
                process.on("close", (code) => {
                    if (code === 0) {
                        plugin.logDebug(`Module '${moduleName}' imported successfully using '${pythonCmd}'.`);
                        resolve();
                    } // Success
                    else {
                        // Log the failure and reject
                        plugin.logWarn(`Failed to import module '${moduleName}' using '${pythonCmd}'. Exit code: ${code}.`);
                        if (stderrOutput.trim())
                            plugin.logWarn(`Stderr from failed import: ${stderrOutput.trim()}`);
                        reject(new Error(`Module '${moduleName}' import failed with exit code ${code}`));
                    }
                });
            });
            return true; // Promise resolved, import successful
        }
        catch (error) {
            // This catch block now handles the rejection from the promise
            plugin.logDebug(`Module check failed for '${moduleName}' using '${pythonCmd}': ${error instanceof Error ? error.message : String(error)}`);
            return false; // Promise rejected, import failed
        }
    });
}
/**
 * Shows a persistent notification if Python executable is missing.
 * @param plugin The ObsidianPythonBridge plugin instance.
 */
function showPythonMissingNotification(plugin) {
    // Delay notice slightly to ensure Obsidian UI is ready
    setTimeout(() => { new obsidian.Notice(`${t("NOTICE_PYTHON_MISSING_TITLE")}\n${t("NOTICE_PYTHON_MISSING_DESC")}`, 0); }, 500); // Persistent notice // Delay by 500ms (adjust if needed)
}
/**
 * Shows a persistent notification if the 'requests' library is missing.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param pythonCmd The Python command that was checked.
 */
function showRequestsMissingNotification(plugin, pythonCmd) {
    // Delay notice slightly to ensure Obsidian UI is ready
    setTimeout(() => {
        // Use translation for the notice, inserting the pythonCmd
        const descPrefix = t("NOTICE_REQUESTS_MISSING_DESC_PREFIX");
        const descSuffix = t("NOTICE_REQUESTS_MISSING_DESC_SUFFIX").replace("{pythonCmd}", pythonCmd);
        new obsidian.Notice(`${t("NOTICE_REQUESTS_MISSING_TITLE")}\n${descPrefix} ${pythonCmd}.${descSuffix}`, 0); // Persistent notice
    }, 500); // Delay by 500ms (adjust if needed)
}

// --- src/ScriptSelectionModal.ts ---
/**
 * Modal for selecting a Python script from a list.
 */
class ScriptSelectionModal extends obsidian.SuggestModal {
    /**
     * Creates an instance of ScriptSelectionModal.
     * @param app The Obsidian App instance.
     * @param scriptChoices Array of script choices { label, value }.
     * @param onChoose Callback function executed with the selected script path or null if cancelled.
     */
    constructor(app, scriptChoices, onChoose) {
        super(app);
        this.scriptChoices = scriptChoices;
        this.onChoose = onChoose;
        // Use translation for the placeholder
        this.setPlaceholder(t("MODAL_SELECT_SCRIPT_PLACEHOLDER"));
    }
    /**
     * Returns suggestions matching the user's query.
     * Filters the choices based on the label (filename).
     * @param query The text entered by the user.
     * @returns An array of matching ScriptChoice objects.
     */
    getSuggestions(query) {
        const lowerCaseQuery = query.toLowerCase();
        return this.scriptChoices.filter((choice) => choice.label.toLowerCase().includes(lowerCaseQuery));
    }
    /**
     * Renders a single suggestion item in the modal list.
     * Displays the script filename (label).
     * @param choice The ScriptChoice object to render.
     * @param el The HTML element to render into.
     */
    renderSuggestion(choice, el) {
        el.createEl("div", { text: choice.label });
    }
    /**
     * Called when the user selects a suggestion from the list.
     * Executes the onChoose callback with the full path (value) of the selected script.
     * @param choice The selected ScriptChoice object.
     * @param evt The mouse or keyboard event that triggered the selection.
     */
    onChooseSuggestion(choice, evt) {
        this.onChoose(choice.value); // Pass the full path back
    }
}

// --- src/python_executor.ts ---
// Handles finding, discovering settings for, executing, and managing Python scripts.
/**
 * Resolves the absolute path to the Python scripts folder based on settings.
 * Returns an empty string and logs an error if the path is invalid or not found.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The absolute, normalized path to the scripts folder, or empty string.
 */
function getScriptsFolderPath(plugin) {
    const { pythonScriptsFolder } = plugin.settings;
    if (!pythonScriptsFolder || typeof pythonScriptsFolder !== "string") {
        plugin.logWarn("Python scripts folder path is not configured in settings.");
        return "";
    }
    let resolvedPath = "";
    if (path__namespace.isAbsolute(pythonScriptsFolder)) {
        plugin.logDebug(`Configured path is absolute: ${pythonScriptsFolder}`);
        resolvedPath = path__namespace.normalize(pythonScriptsFolder);
    }
    else {
        plugin.logDebug(`Configured path is relative: ${pythonScriptsFolder}`);
        const vaultPath = plugin.getCurrentVaultAbsolutePath(); // Assumes getCurrentVaultAbsolutePath is moved or accessible
        if (!vaultPath) {
            plugin.logError("Cannot resolve relative script path: Vault path unavailable.");
            return "";
        }
        resolvedPath = path__namespace.resolve(vaultPath, pythonScriptsFolder);
        resolvedPath = path__namespace.normalize(resolvedPath);
        plugin.logDebug(`Resolved relative path to: ${resolvedPath}`);
    }
    try {
        if (fs__namespace.existsSync(resolvedPath) && fs__namespace.statSync(resolvedPath).isDirectory()) {
            plugin.logInfo(`Scripts folder path validated: ${resolvedPath}`);
            return resolvedPath;
        }
        else {
            const exists = fs__namespace.existsSync(resolvedPath);
            const isDir = exists ? fs__namespace.statSync(resolvedPath).isDirectory() : false;
            plugin.logWarn(`Validation failed for scripts folder: ${resolvedPath} (Exists: ${exists}, IsDirectory: ${isDir})`);
            return "";
        }
    }
    catch (error) {
        plugin.logError(`Error accessing resolved scripts folder path ${resolvedPath}:`, error);
        return "";
    }
}
/**
 * Executes a Python script to retrieve its settings definitions JSON.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptAbsolutePath Absolute path to the Python script.
 * @returns A promise resolving to the parsed settings definitions array, or null on error/non-compliance.
 */
function discoverScriptSettings(plugin, scriptAbsolutePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const scriptName = path__namespace.basename(scriptAbsolutePath);
        plugin.logDebug(`Discovering settings for script: ${scriptName}`);
        if (!plugin.pythonExecutable) {
            plugin.logWarn(`Cannot discover settings for ${scriptName}: Python executable not found.`);
            return null;
        }
        const discoveryTimeoutMs = SETTINGS_DISCOVERY_TIMEOUT;
        return new Promise((resolve) => {
            var _a, _b;
            const args = [scriptAbsolutePath, "--get-settings-json"];
            plugin.logDebug(`Running discovery command: ${plugin.pythonExecutable} ${args.join(" ")}`);
            const scriptDir = path__namespace.dirname(scriptAbsolutePath);
            // --- PYTHONPATH for discovery: Only needs script's dir for its own imports ---
            const currentPYTHONPATH = process.env.PYTHONPATH;
            // --- PYTHONPATH for discovery: Mirror the logic from runPythonScript ---
            const pathsForPythonPath = [];
            // 1. Add the script's own directory
            pathsForPythonPath.push(scriptDir);
            plugin.logDebug(`Discovery PYTHONPATH: Adding script's own directory: ${scriptDir}`);
            // 2. Conditionally add the plugin's directory based on setting
            if (plugin.settings.autoSetPYTHONPATH) { // <-- Respect the setting
                if (plugin.pluginDirAbsPath) {
                    pathsForPythonPath.push(plugin.pluginDirAbsPath);
                    plugin.logDebug(`Discovery PYTHONPATH: Adding plugin directory (autoSetPYTHONPATH enabled): ${plugin.pluginDirAbsPath}`);
                }
                else {
                    plugin.logWarn("Discovery PYTHONPATH: Plugin directory path not available, library might not be importable even if autoSetPYTHONPATH is enabled.");
                }
            }
            else {
                plugin.logDebug("Discovery PYTHONPATH: Skipping adding plugin directory (autoSetPYTHONPATH disabled).");
            }
            // 3. Construct the final PYTHONPATH, appending existing env var if present
            let discoveryPYTHONPATH = pathsForPythonPath.join(path__namespace.delimiter);
            if (currentPYTHONPATH) {
                discoveryPYTHONPATH = `${discoveryPYTHONPATH}${path__namespace.delimiter}${currentPYTHONPATH}`;
            }
            // --- End PYTHONPATH for discovery ---
            const env = Object.assign(Object.assign({}, process.env), { PYTHONPATH: discoveryPYTHONPATH, OBSIDIAN_BRIDGE_MODE: "discovery" });
            // --- End PYTHONPATH for discovery ---
            plugin.logDebug(`Executing discovery with PYTHONPATH: ${discoveryPYTHONPATH} and cwd: ${scriptDir}`);
            const pythonProcess = child_process.spawn(plugin.pythonExecutable, args, { timeout: discoveryTimeoutMs, cwd: scriptDir, env: env }); // Set working directory to the script's folder // Pass modified environment
            let stdoutData = "";
            let stderrData = "";
            (_a = pythonProcess.stdout) === null || _a === void 0 ? void 0 : _a.on("data", (data) => { stdoutData += data.toString(); });
            (_b = pythonProcess.stderr) === null || _b === void 0 ? void 0 : _b.on("data", (data) => { stderrData += data.toString(); });
            pythonProcess.on("error", (error) => { plugin.logWarn(`Failed to start settings discovery for ${scriptName}: ${error.message}`); resolve(null); });
            pythonProcess.on("close", (code, signal) => {
                if (signal === "SIGTERM" || (pythonProcess.killed && signal === null)) {
                    plugin.logWarn(`Settings discovery for ${scriptName} timed out after ${discoveryTimeoutMs}ms.`);
                    resolve(null);
                    return;
                }
                if (code !== 0) {
                    plugin.logWarn(`Settings discovery process for ${scriptName} failed with exit code ${code}.`);
                    if (stderrData.trim())
                        plugin.logWarn(`Stderr from ${scriptName} discovery: ${stderrData.trim()}`);
                    resolve(null);
                    return;
                }
                try {
                    const trimmedStdout = stdoutData.trim();
                    plugin.logDebug(`Raw settings JSON from ${scriptName}: ${trimmedStdout}`);
                    if (!trimmedStdout) {
                        plugin.logDebug(`Script ${scriptName} provided no settings output (empty stdout). Assuming no settings.`);
                        resolve([]);
                        return;
                    } // Success, but no settings defined
                    const definitions = JSON.parse(trimmedStdout);
                    if (!Array.isArray(definitions)) {
                        plugin.logError(`Parsed settings definitions from ${scriptName} is not an array. Output: ${trimmedStdout}`);
                        resolve(null);
                        return;
                    }
                    // Optional: Add more validation for each definition object structure here
                    plugin.logInfo(`Successfully discovered ${definitions.length} settings for ${scriptName}.`);
                    resolve(definitions);
                }
                catch (error) {
                    const errorMsg = error instanceof Error ? error.message : String(error);
                    plugin.logDebug(`Could not parse settings JSON from ${scriptName}: ${errorMsg}. This is expected for scripts without settings.`);
                    plugin.logDebug(`Stdout from ${scriptName} that failed parsing was: ${stdoutData.trim()}`);
                    resolve(null); // Discovery failed due to parsing error
                }
            });
        });
    });
}
/**
 * Scans the scripts folder, discovers settings for each script, and updates the cache.
 * Handles clearing cached definitions if discovery fails for a script.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptsFolder Absolute path to the Python scripts folder.
 */
function updateScriptSettingsCache(plugin, scriptsFolder) {
    return __awaiter(this, void 0, void 0, function* () {
        plugin.logInfo("Updating script settings definitions cache...");
        if (!plugin.pythonExecutable) {
            plugin.logError("Cannot update script settings cache: Python executable not found.");
            return;
        }
        if (!scriptsFolder || !fs__namespace.existsSync(scriptsFolder)) {
            plugin.logWarn("Cannot update script settings cache: Scripts folder path is invalid or not found.");
            return;
        }
        let pythonFiles;
        try {
            // Read directory and filter for .py files, excluding hidden files and the library itself
            pythonFiles = fs__namespace
                .readdirSync(scriptsFolder)
                .filter((f) => f.toLowerCase().endsWith(".py") &&
                !f.startsWith(".") &&
                f !== PYTHON_LIBRARY_FILENAME);
        }
        catch (err) {
            plugin.logError(`Error reading scripts folder for settings discovery ${scriptsFolder}:`, err);
            return;
        }
        // Store newly discovered definitions here
        const newDefinitions = {};
        let changesMade = false; // Track if any updates require saving settings
        const currentScriptPaths = new Set(); // Keep track of scripts found in the folder
        for (const file of pythonFiles) {
            const scriptAbsolutePath = path__namespace.join(scriptsFolder, file);
            // Use normalized relative path as the key for settings objects
            const relativePath = obsidian.normalizePath(path__namespace.relative(scriptsFolder, scriptAbsolutePath));
            currentScriptPaths.add(relativePath);
            let discoveryFailed = false; // Flag to track failure for the current script
            try {
                // Attempt to discover settings by running the script with --get-settings-json
                const definitions = yield discoverScriptSettings(plugin, scriptAbsolutePath);
                // discoverScriptSettings returns null on failure (timeout, non-zero exit, parse error, etc.)
                if (definitions === null) {
                    discoveryFailed = true;
                    plugin.logWarn(`Settings discovery failed for script: ${relativePath}.`);
                }
                else {
                    // Discovery succeeded (definitions can be an empty array if no settings are defined)
                    newDefinitions[relativePath] = definitions;
                    // Check if the discovered definitions differ from the cached ones
                    if (JSON.stringify(definitions) !==
                        JSON.stringify(plugin.settings.scriptSettingsDefinitions[relativePath])) {
                        changesMade = true;
                        plugin.logDebug(`Definitions updated or added for ${relativePath}`);
                    }
                }
            }
            catch (error) {
                // Catch unexpected errors during the discoverScriptSettings call itself
                plugin.logError(`Unexpected error during settings discovery call for ${file}:`, error);
                discoveryFailed = true;
            }
            // --- Handle Cache Clearing on Discovery Failure ---
            if (discoveryFailed) {
                // If discovery failed, check if there were old definitions cached
                if (plugin.settings.scriptSettingsDefinitions.hasOwnProperty(relativePath)) {
                    plugin.logInfo(`Removing cached settings definitions for ${relativePath} due to discovery failure.`);
                    // By *not* adding this script to newDefinitions, we effectively remove it.
                    changesMade = true; // Mark that a change (removal) occurred
                }
                // If no old cache existed, we just logged the failure above.
            }
        } // --- End of script file loop ---
        // --- Final Cleanup: Remove data for scripts no longer present and orphaned values ---
        const previouslyCachedPaths = Object.keys(plugin.settings.scriptSettingsDefinitions);
        for (const cachedPath of previouslyCachedPaths) {
            if (!currentScriptPaths.has(cachedPath)) {
                // Script file was deleted from the folder
                changesMade = true;
                plugin.logInfo(`Script ${cachedPath} removed, clearing its settings definitions and values.`);
                // Definition is already absent from newDefinitions because it wasn't in currentScriptPaths.
                // Clean up associated values and statuses.
                if (plugin.settings.scriptSettingsValues.hasOwnProperty(cachedPath)) {
                    delete plugin.settings.scriptSettingsValues[cachedPath];
                }
                if (plugin.settings.scriptActivationStatus.hasOwnProperty(cachedPath)) {
                    delete plugin.settings.scriptActivationStatus[cachedPath];
                }
                if (plugin.settings.scriptAutoStartStatus.hasOwnProperty(cachedPath)) {
                    delete plugin.settings.scriptAutoStartStatus[cachedPath];
                }
                if (plugin.settings.scriptAutoStartDelay.hasOwnProperty(cachedPath)) {
                    delete plugin.settings.scriptAutoStartDelay[cachedPath];
                }
            }
            else if (!newDefinitions.hasOwnProperty(cachedPath)) {
                // Script file exists, but discovery failed (and it was previously cached)
                // The definition was already omitted from newDefinitions above.
                // Also remove any stored values for this script.
                if (plugin.settings.scriptSettingsValues.hasOwnProperty(cachedPath)) {
                    plugin.logInfo(`Clearing settings values for ${cachedPath} due to discovery failure.`);
                    delete plugin.settings.scriptSettingsValues[cachedPath];
                    changesMade = true; // Ensure change is marked
                }
                // Keep activation/autostart status even if settings discovery fails? Yes, seems reasonable.
            }
        }
        // Check if the overall structure of definitions changed (covers additions/removals)
        if (JSON.stringify(newDefinitions) !==
            JSON.stringify(plugin.settings.scriptSettingsDefinitions)) {
            changesMade = true;
        }
        // Save settings only if there were actual changes to definitions or values
        if (changesMade) {
            plugin.logInfo("Script settings definitions cache updated.");
            plugin.settings.scriptSettingsDefinitions = newDefinitions;
            // Note: scriptSettingsValues and statuses might have been modified directly above
            yield plugin.saveSettings();
        }
        else {
            plugin.logInfo("Script settings definitions cache is up to date.");
        }
    });
}
/**
 * Executes a Python script using the detected executable.
 * Handles setting environment variables, logging output/errors.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptPath Absolute path to the Python script.
 * @param context Optional context (e.g., 'manual', 'auto-start', 'event') for logging.
 */
function runPythonScript(plugin_1, scriptPath_1) {
    return __awaiter(this, arguments, void 0, function* (plugin, scriptPath, context = "manual") {
        if (!plugin.pythonExecutable) {
            plugin.logError(`Cannot run script ${path__namespace.basename(scriptPath)} (${context}): Python executable not found.`);
            if (context === "manual") { // Avoid notice spam for auto-start/event contexts
                new obsidian.Notice(t("NOTICE_PYTHON_EXEC_MISSING_FOR_RUN"));
                const envOk = yield plugin.checkPythonEnvironment(); // Re-check env
                if (!envOk || !plugin.pythonExecutable)
                    return;
                plugin.logInfo("Python executable found after re-check, proceeding with script execution.");
            }
            else
                return; // Don't proceed if Python missing in non-manual contexts
        }
        const pythonCmd = plugin.pythonExecutable;
        // Port mismatch check (only relevant for manual runs?)
        if (context === "manual" && plugin.server && plugin.settings.httpPort !== 0 && plugin.settings.httpPort !== plugin.initialHttpPort) {
            new obsidian.Notice(`${t("NOTICE_PORT_MISMATCH_WARNING_PREFIX")}${plugin.initialHttpPort} ${t("NOTICE_PORT_MISMATCH_WARNING_MIDDLE")} ${plugin.settings.httpPort}${t("NOTICE_PORT_MISMATCH_WARNING_SUFFIX")}`, 8000);
            plugin.logWarn(`HTTP Port mismatch detected (Server on ${plugin.initialHttpPort}, Setting is ${plugin.settings.httpPort}) when running script ${path__namespace.basename(scriptPath)}.`);
        }
        // Validate script path existence
        try {
            if (!fs__namespace.existsSync(scriptPath) || !fs__namespace.statSync(scriptPath).isFile()) {
                if (context === "manual")
                    new obsidian.Notice(`${t("NOTICE_SCRIPT_NOT_FOUND_PREFIX")} ${path__namespace.basename(scriptPath)}`);
                plugin.logError(`Python script not found or is not a file (${context}): ${scriptPath}`);
                return;
            }
        }
        catch (error) {
            if (context === "manual")
                new obsidian.Notice(`${t("NOTICE_SCRIPT_ACCESS_ERROR_PREFIX")} ${path__namespace.basename(scriptPath)}`);
            plugin.logError(`Error accessing script file ${scriptPath} (${context}):`, error);
            return;
        }
        const scriptFilename = path__namespace.basename(scriptPath);
        const scriptDir = path__namespace.dirname(scriptPath);
        // Calculate Relative Path
        const scriptsFolder = getScriptsFolderPath(plugin); // Use the function from this module
        let relativePath = "";
        if (scriptsFolder && scriptPath.startsWith(scriptsFolder))
            relativePath = obsidian.normalizePath(path__namespace.relative(scriptsFolder, scriptPath));
        else
            plugin.logWarn(`Could not determine relative path for script ${scriptPath} relative to folder ${scriptsFolder}. Script settings might not be retrievable.`);
        // Check if script is active
        if (relativePath && plugin.settings.scriptActivationStatus[relativePath] === false) {
            plugin.logInfo(`Skipping execution (${context}): Script ${scriptFilename} is disabled in settings.`);
            if (context === "manual")
                new obsidian.Notice(t("NOTICE_SCRIPT_DISABLED").replace("{scriptName}", scriptFilename));
            return;
        }
        // Show "Running" notice only for manual runs
        if (context === "manual")
            new obsidian.Notice(`${t("NOTICE_RUNNING_SCRIPT_PREFIX")} ${scriptFilename}`);
        plugin.logInfo(`Attempting to run Python script (${context}): ${scriptPath} using ${pythonCmd}`);
        // Prepare environment variables
        const currentPYTHONPATH = process.env.PYTHONPATH;
        const pathsForPythonPath = [];
        // 1. Add the script's own directory (for its relative imports)
        pathsForPythonPath.push(scriptDir);
        plugin.logDebug(`Adding script's own directory to PYTHONPATH: ${scriptDir}`);
        // 2. Conditionally add the plugin's directory based on setting
        if (plugin.settings.autoSetPYTHONPATH) {
            if (plugin.pluginDirAbsPath) {
                pathsForPythonPath.push(plugin.pluginDirAbsPath);
                plugin.logDebug(`Adding plugin directory to PYTHONPATH (autoSetPYTHONPATH enabled): ${plugin.pluginDirAbsPath}`);
            }
            else {
                plugin.logWarn("Plugin directory path not available, library might not be importable even if autoSetPYTHONPATH is enabled.");
            }
        }
        else {
            plugin.logDebug("Skipping adding plugin directory to PYTHONPATH (autoSetPYTHONPATH disabled).");
        }
        let newPYTHONPATH = pathsForPythonPath.join(path__namespace.delimiter);
        // 3. Append any existing PYTHONPATH from the environment
        if (currentPYTHONPATH) {
            newPYTHONPATH = `${newPYTHONPATH}${path__namespace.delimiter}${currentPYTHONPATH}`;
        }
        const env = Object.assign(Object.assign(Object.assign(Object.assign({}, process.env), { OBSIDIAN_HTTP_PORT: plugin.initialHttpPort.toString(), OBSIDIAN_BRIDGE_ACTIVE: "true", PYTHONPATH: newPYTHONPATH }), (relativePath && { OBSIDIAN_SCRIPT_RELATIVE_PATH: relativePath })), (plugin.settings.disablePyCache && { PYTHONPYCACHEPREFIX: os__namespace.tmpdir() }));
        plugin.logDebug(`Setting OBSIDIAN_HTTP_PORT=${plugin.initialHttpPort} for script.`);
        if (relativePath)
            plugin.logDebug(`Setting OBSIDIAN_SCRIPT_RELATIVE_PATH=${relativePath}`);
        plugin.logDebug(`Setting PYTHONPATH=${newPYTHONPATH}`);
        plugin.logDebug(`Setting cwd=${scriptDir}`);
        if (plugin.settings.disablePyCache)
            plugin.logDebug(`Attempting to disable __pycache__ creation.`);
        // Determine Python arguments
        const pythonArgsBase = plugin.settings.disablePyCache ? ["-B"] : [];
        const fullArgs = [...pythonArgsBase, scriptPath];
        // Execute using the stored pythonCmd
        try {
            yield new Promise((resolve, reject) => {
                var _a, _b;
                plugin.logDebug(`Executing: ${pythonCmd} ${fullArgs.join(" ")}`);
                const pythonProcess = child_process.spawn(pythonCmd, fullArgs, { env, cwd: scriptDir }); // Set CWD to script's directory
                let stderrOutput = "";
                (_a = pythonProcess.stderr) === null || _a === void 0 ? void 0 : _a.on("data", (data) => { const msg = data.toString(); stderrOutput += msg; plugin.logError(`[stderr ${scriptFilename}]: ${msg.trim()}`); });
                (_b = pythonProcess.stdout) === null || _b === void 0 ? void 0 : _b.on("data", (data) => { const msg = data.toString(); plugin.logDebug(`[stdout ${scriptFilename}]: ${msg.trim()}`); });
                pythonProcess.on("error", (error) => {
                    plugin.logError(`Failed to start script (${context}) with command "${pythonCmd}": ${error.message}`);
                    if (context === "manual")
                        new obsidian.Notice(`${t("NOTICE_SCRIPT_ERROR_RUNNING_PREFIX")} ${scriptFilename} ${t("NOTICE_SCRIPT_ERROR_RUNNING_MIDDLE")} ${pythonCmd}: ${error.message}`);
                    reject(error);
                });
                pythonProcess.on("close", (code) => {
                    plugin.logDebug(`${scriptFilename} (${context}, using ${pythonCmd}) finished with exit code ${code}.`);
                    if (code !== 0 && code !== null) {
                        if (context === "manual")
                            new obsidian.Notice(`${scriptFilename} ${t("NOTICE_SCRIPT_FAILED_EXIT_CODE_MIDDLE")} ${code}. ${t("NOTICE_SCRIPT_FAILED_EXIT_CODE_SUFFIX")}`, 5000);
                        if (stderrOutput.trim())
                            plugin.logError(`[Error Summary ${scriptFilename}]: ${stderrOutput.trim()}`);
                        reject(new Error(`Script exited with non-zero code: ${code}`));
                    }
                    else
                        resolve(); // Success
                });
            });
            plugin.logInfo(`Script ${scriptFilename} (${context}) execution completed successfully.`);
        }
        catch (error) {
            plugin.logWarn(`Script ${scriptFilename} (${context}) execution failed or exited with error: ${error instanceof Error ? error.message : String(error)}`);
            // Notices are handled inside the promise callbacks/rejections for manual context
        }
    });
}
/**
 * Opens a modal for the user to select a Python script from the configured folder, then runs it.
 * @param plugin The ObsidianPythonBridge plugin instance.
 */
function chooseAndRunPythonScript(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        const scriptsFolder = getScriptsFolderPath(plugin);
        if (!scriptsFolder) {
            new obsidian.Notice(t("NOTICE_SCRIPTS_FOLDER_INVALID"), 5000);
            return;
        }
        let pythonFiles;
        try {
            pythonFiles = fs__namespace.readdirSync(scriptsFolder).filter((f) => f.toLowerCase().endsWith(".py") && !f.startsWith(".") && f !== PYTHON_LIBRARY_FILENAME);
        }
        catch (err) {
            const errorMsg = err instanceof Error ? err.message : String(err);
            new obsidian.Notice(`${t("NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX")} ${errorMsg}`);
            plugin.logError(`Error reading scripts folder ${scriptsFolder}:`, err);
            return;
        }
        if (pythonFiles.length === 0) {
            new obsidian.Notice(t("NOTICE_NO_SCRIPTS_FOUND"), 5000);
            return;
        }
        const scriptChoices = pythonFiles.map((f) => ({ label: f, value: path__namespace.join(scriptsFolder, f) }));
        scriptChoices.sort((a, b) => a.label.localeCompare(b.label));
        new ScriptSelectionModal(plugin.app, scriptChoices, (selectedPath) => {
            if (selectedPath) {
                plugin.logDebug(`User selected script: ${selectedPath}`);
                runPythonScript(plugin, selectedPath, "manual");
            } // Don't await, run in background
            else
                plugin.logDebug("Script selection cancelled by user.");
        }).open();
    });
}
/**
 * Runs all active Python scripts found in the configured folder sequentially.
 * @param plugin The ObsidianPythonBridge plugin instance.
 */
function runAllPythonScripts(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        const scriptsFolder = getScriptsFolderPath(plugin);
        if (!scriptsFolder) {
            new obsidian.Notice(t("NOTICE_SCRIPTS_FOLDER_INVALID"), 5000);
            return;
        }
        let pythonFiles;
        try {
            pythonFiles = fs__namespace.readdirSync(scriptsFolder).filter((f) => f.toLowerCase().endsWith(".py") && !f.startsWith(".") && f !== PYTHON_LIBRARY_FILENAME);
        }
        catch (err) {
            const errorMsg = err instanceof Error ? err.message : String(err);
            new obsidian.Notice(`${t("NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX")} ${errorMsg}`);
            plugin.logError(`Error reading scripts folder ${scriptsFolder}:`, err);
            return;
        }
        if (pythonFiles.length === 0) {
            new obsidian.Notice(t("NOTICE_NO_SCRIPTS_FOUND"), 5000);
            return;
        }
        pythonFiles.sort((a, b) => a.localeCompare(b));
        const activeScriptsToRun = pythonFiles.filter((file) => { const relativePath = obsidian.normalizePath(path__namespace.relative(scriptsFolder, path__namespace.join(scriptsFolder, file))); return plugin.settings.scriptActivationStatus[relativePath] !== false; }); // Check activation
        if (activeScriptsToRun.length === 0) {
            new obsidian.Notice(t("NOTICE_NO_SCRIPTS_FOUND"), 5000);
            plugin.logInfo("Run All: No active scripts found to run.");
            return;
        } // Or a more specific message like "No active scripts found"
        new obsidian.Notice(`${t("NOTICE_RUNNING_ALL_SCRIPTS_PREFIX")} ${activeScriptsToRun.length} ${t("NOTICE_RUNNING_ALL_SCRIPTS_SUFFIX")}`);
        plugin.logInfo(`Starting batch run of ${activeScriptsToRun.length} active scripts...`);
        for (const file of activeScriptsToRun) {
            const scriptPath = path__namespace.join(scriptsFolder, file);
            plugin.logInfo(`Run All: Running next script: ${file}`);
            yield runPythonScript(plugin, scriptPath, "manual"); // Use await here to ensure scripts run one after another // Context is still manual trigger
        }
        plugin.logInfo("Finished batch run of active scripts.");
    });
}
/**
 * Runs scripts marked for auto-start.
 * Called after plugin load, server start, and initial settings sync.
 * @param plugin The ObsidianPythonBridge plugin instance.
 */
function runAutoStartScripts(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        plugin.logInfo("Checking for scripts to run on startup...");
        // Reload settings just before checking to ensure the latest values are used.
        // This is a safeguard against potential async state issues.
        yield plugin.loadSettings();
        const currentSettings = plugin.settings; // Use a local copy for the loop
        const scriptsFolder = getScriptsFolderPath(plugin); // Uses plugin.settings which was just reloaded
        if (!scriptsFolder) {
            plugin.logWarn("Cannot run auto-start scripts: Scripts folder path is invalid.");
            return;
        }
        let scriptsRunCount = 0;
        plugin.logDebug("Current AutoStart Status:", currentSettings.scriptAutoStartStatus);
        plugin.logDebug("Current Activation Status:", currentSettings.scriptActivationStatus);
        // Iterate over scripts that have an entry in scriptAutoStartStatus
        for (const relativePath in currentSettings.scriptAutoStartStatus) {
            const shouldAutoStart = currentSettings.scriptAutoStartStatus[relativePath];
            // Explicitly check if shouldAutoStart is true
            if (shouldAutoStart === true) {
                // Then check if the script is active
                const isScriptActive = currentSettings.scriptActivationStatus[relativePath] !== false;
                plugin.logDebug(`Checking script ${relativePath}: shouldAutoStart=${shouldAutoStart}, isScriptActive=${isScriptActive}`);
                if (isScriptActive) {
                    const absolutePath = path__namespace.join(scriptsFolder, relativePath);
                    try {
                        if (fs__namespace.existsSync(absolutePath) && fs__namespace.statSync(absolutePath).isFile()) {
                            plugin.logInfo(`Auto-starting script: ${relativePath}`);
                            const delaySeconds = (_a = currentSettings.scriptAutoStartDelay[relativePath]) !== null && _a !== void 0 ? _a : 0;
                            const delayMs = Math.max(0, delaySeconds) * 1000;
                            if (delayMs > 0) {
                                plugin.logInfo(` -> Delaying execution by ${delaySeconds} second(s).`);
                                setTimeout(() => __awaiter(this, void 0, void 0, function* () {
                                    // Re-check status just before delayed execution
                                    yield plugin.loadSettings(); // Reload again
                                    const latestActivationStatus = plugin.settings.scriptActivationStatus[relativePath] !== false;
                                    const latestAutoStartStatus = plugin.settings.scriptAutoStartStatus[relativePath] === true;
                                    if (latestActivationStatus && latestAutoStartStatus) {
                                        plugin.logInfo(`Executing delayed auto-start script: ${relativePath}`);
                                        runPythonScript(plugin, absolutePath, "auto-start"); // No await needed here
                                    }
                                    else {
                                        plugin.logWarn(`Skipping delayed auto-start for ${relativePath}: Script status changed during delay (Active: ${latestActivationStatus}, AutoStart: ${latestAutoStartStatus}).`);
                                    }
                                }), delayMs);
                            }
                            else {
                                // Immediate execution (no need to re-check here as we just loaded settings)
                                runPythonScript(plugin, absolutePath, "auto-start"); // No await needed here
                            }
                            scriptsRunCount++;
                        }
                        else {
                            plugin.logWarn(`Skipping auto-start for ${relativePath}: Script file not found at ${absolutePath}.`);
                        }
                    }
                    catch (error) {
                        plugin.logError(`Error checking file status for auto-start script ${absolutePath}:`, error);
                    }
                }
                else {
                    plugin.logDebug(`Skipping auto-start for ${relativePath}: Script is not active.`);
                }
            }
            else {
                plugin.logDebug(`Skipping auto-start for ${relativePath}: Auto-start setting is false.`);
            }
        } // End for loop
        if (scriptsRunCount > 0) {
            plugin.logInfo(`Finished launching ${scriptsRunCount} auto-start script(s).`);
        }
        else {
            plugin.logInfo("No active scripts configured for auto-start based on current settings.");
        }
    });
}
// --- Dynamic Command Management ---
/**
 * Generates a unique and stable command ID for a given script path.
 * @param relativePath Normalized relative path of the script.
 * @returns The command ID string.
 */
function getCommandIdForScript(relativePath) { return `python-bridge:run-script:${relativePath}`; }
/**
 * Updates or registers dynamic commands for all valid Python scripts.
 * Ensures commands exist for active scripts and their callbacks check activation status.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptsFolder Absolute path to the Python scripts folder.
 * @returns Set of relative paths for scripts found during the update.
 */
function updateDynamicScriptCommands(plugin, scriptsFolder) {
    return __awaiter(this, void 0, void 0, function* () {
        plugin.logDebug("Updating dynamic script commands...");
        const activeScriptPaths = new Set();
        if (!plugin.pythonExecutable) {
            plugin.logWarn("Cannot update dynamic commands: Python executable not found.");
            return activeScriptPaths;
        }
        let pythonFiles;
        try {
            pythonFiles = fs__namespace.readdirSync(scriptsFolder).filter((f) => f.toLowerCase().endsWith(".py") && !f.startsWith(".") && f !== PYTHON_LIBRARY_FILENAME);
        }
        catch (err) {
            plugin.logError(`Error reading scripts folder for command update ${scriptsFolder}:`, err);
            return activeScriptPaths;
        }
        for (const file of pythonFiles) {
            const scriptAbsolutePath = path__namespace.join(scriptsFolder, file);
            const relativePath = obsidian.normalizePath(path__namespace.relative(scriptsFolder, scriptAbsolutePath));
            activeScriptPaths.add(relativePath);
            const commandId = getCommandIdForScript(relativePath);
            const commandName = `Run Script: ${file}`; // Simple name
            if (!plugin.dynamicScriptCommands.has(commandId)) {
                plugin.logDebug(`Registering new command: ${commandId} ('${commandName}')`);
                const command = plugin.addCommand({ id: commandId, name: commandName, callback: () => {
                        const isActive = plugin.settings.scriptActivationStatus[relativePath] !== false;
                        if (isActive) {
                            plugin.logInfo(`Executing script via command: ${relativePath}`);
                            runPythonScript(plugin, scriptAbsolutePath, "manual");
                        } // Don't await
                        else {
                            plugin.logInfo(`Skipping execution via command: Script ${relativePath} is disabled.`);
                            new obsidian.Notice(t("NOTICE_SCRIPT_DISABLED").replace("{scriptName}", file));
                        }
                    } });
                plugin.dynamicScriptCommands.set(commandId, command);
            }
            else {
                plugin.logDebug(`Command already exists: ${commandId}`);
                // Optional: Update name/callback if needed, though current callback is robust
            }
        }
        // Clean up commands for scripts that no longer exist
        const commandIdsToRemove = [];
        for (const [commandId] of plugin.dynamicScriptCommands.entries()) {
            const scriptPathFromId = commandId.substring("python-bridge:run-script:".length);
            if (!activeScriptPaths.has(scriptPathFromId)) {
                plugin.logDebug(`Command ${commandId} is stale (script removed), marking for removal.`);
                commandIdsToRemove.push(commandId);
            } // Obsidian API lacks unregister. We just remove from our map.
        }
        commandIdsToRemove.forEach((id) => plugin.dynamicScriptCommands.delete(id));
        plugin.logDebug(`Dynamic script command update complete. Active commands: ${plugin.dynamicScriptCommands.size}`);
        return activeScriptPaths;
    });
}
/**
 * Updates script settings cache AND synchronizes dynamic commands.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptsFolder Absolute path to the Python scripts folder.
 */
function updateAndSyncCommands(plugin, scriptsFolder) {
    return __awaiter(this, void 0, void 0, function* () {
        yield updateScriptSettingsCache(plugin, scriptsFolder);
        yield updateDynamicScriptCommands(plugin, scriptsFolder);
    });
}

// --- src/event_handler.ts ---
// Handles registration for and triggering of Obsidian events for Python scripts.
/**
 * Registers internal listeners for Obsidian events that can trigger Python scripts.
 * @param plugin The ObsidianPythonBridge plugin instance.
 */
function registerObsidianEventListeners(plugin) {
    plugin.logInfo("Registering Obsidian event listeners...");
    // Vault changes
    plugin.registerEvent(plugin.app.vault.on("modify", (file) => {
        if (file instanceof obsidian.TFile) {
            triggerEvent(plugin, "vault-modify", { path: file.path });
        }
    }));
    plugin.registerEvent(plugin.app.vault.on("delete", (file) => {
        triggerEvent(plugin, "vault-delete", {
            path: file.path,
            type: file instanceof obsidian.TFile ? "file" : "folder",
        });
    }));
    plugin.registerEvent(plugin.app.vault.on("rename", (file, oldPath) => {
        triggerEvent(plugin, "vault-rename", {
            path: file.path,
            oldPath: oldPath,
            type: file instanceof obsidian.TFile ? "file" : "folder",
        });
    }));
    // Metadata changes
    plugin.registerEvent(plugin.app.metadataCache.on("changed", (file, data, cache) => {
        triggerEvent(plugin, "metadata-changed", { path: file.path });
    }));
    // Layout changes
    plugin.registerEvent(plugin.app.workspace.on("layout-change", () => {
        triggerEvent(plugin, "layout-change", {});
    }));
    // Active leaf change
    plugin.registerEvent(plugin.app.workspace.on("active-leaf-change", (leaf) => {
        const view = leaf === null || leaf === void 0 ? void 0 : leaf.view;
        let filePath = null;
        if (view instanceof obsidian.MarkdownView && view.file) {
            filePath = view.file.path;
        }
        triggerEvent(plugin, "active-leaf-change", { path: filePath });
    }));
    // Add more listeners here as needed (e.g., file-menu, editor-menu)
    plugin.logInfo("Obsidian event listeners registered.");
}
/**
 * Triggers the execution of Python scripts listening to a specific event.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param eventName The name of the event being triggered.
 * @param payload Data associated with the event, must be JSON serializable.
 */
function triggerEvent(plugin, eventName, payload) {
    const listeningScripts = plugin.eventListeners.get(eventName);
    if (!listeningScripts || listeningScripts.size === 0) {
        // plugin.logDebug(`No scripts listening for event: ${eventName}`); // Can be noisy
        return;
    }
    plugin.logInfo(`Event triggered: ${eventName}. Notifying ${listeningScripts.size} script(s). Payload:`, payload);
    const scriptsFolder = getScriptsFolderPath(plugin);
    if (!scriptsFolder) {
        plugin.logError(`Cannot trigger event ${eventName}: Scripts folder path is invalid.`);
        return;
    }
    let payloadJson;
    try {
        payloadJson = JSON.stringify(payload);
    }
    catch (error) {
        plugin.logError(`Failed to serialize payload for event ${eventName}:`, error);
        plugin.logError(`Original payload was:`, payload);
        return;
    }
    listeningScripts.forEach((relativePath) => {
        const absolutePath = path__namespace.join(scriptsFolder, relativePath);
        // Check if script still exists and is active before running
        if (plugin.settings.scriptActivationStatus[relativePath] !== false) {
            try {
                if (fs__namespace.existsSync(absolutePath) &&
                    fs__namespace.statSync(absolutePath).isFile()) {
                    plugin.logDebug(`Running script ${relativePath} for event ${eventName}`);
                    runPythonScriptForEvent(plugin, absolutePath, relativePath, eventName, payloadJson);
                }
                else {
                    plugin.logWarn(`Script ${relativePath} registered for event ${eventName} not found at ${absolutePath}. Removing listener.`);
                    removeListener(plugin, eventName, relativePath); // Clean up stale listener
                }
            }
            catch (error) {
                plugin.logError(`Error checking file status for event script ${absolutePath}:`, error);
            }
        }
        else {
            plugin.logDebug(`Skipping event notification for ${relativePath}: Script is disabled.`);
        }
    });
}
/**
 * Executes a Python script specifically for an event trigger, adding event env vars.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param scriptAbsolutePath Absolute path to the script.
 * @param scriptRelativePath Relative path (for logging/identification).
 * @param eventName Name of the event.
 * @param payloadJson JSON string payload for the event.
 */
function runPythonScriptForEvent(plugin, scriptAbsolutePath, scriptRelativePath, eventName, payloadJson) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!plugin.pythonExecutable) {
            plugin.logError(`Cannot run event script ${scriptRelativePath}: Python executable not found.`);
            return;
        }
        const pythonCmd = plugin.pythonExecutable;
        const scriptFilename = path__namespace.basename(scriptAbsolutePath);
        const scriptDir = path__namespace.dirname(scriptAbsolutePath);
        plugin.logDebug(`Running event handler: ${pythonCmd} ${scriptAbsolutePath} for event ${eventName}`);
        // Prepare environment variables
        const currentPYTHONPATH = process.env.PYTHONPATH;
        const pathsForPythonPath = [];
        // 1. Add the script's own directory
        pathsForPythonPath.push(scriptDir);
        plugin.logDebug(`Adding script's own directory to PYTHONPATH for event script: ${scriptDir}`);
        // 2. Conditionally add the plugin's directory based on setting
        if (plugin.settings.autoSetPYTHONPATH) { // Check the setting
            if (plugin.pluginDirAbsPath) {
                pathsForPythonPath.push(plugin.pluginDirAbsPath);
                plugin.logDebug(`Adding plugin directory to PYTHONPATH for event script (autoSetPYTHONPATH enabled): ${plugin.pluginDirAbsPath}`);
            }
            else {
                plugin.logWarn("Plugin directory path not available for event script, library might not be importable even if autoSetPYTHONPATH is enabled.");
            }
        }
        else {
            plugin.logDebug("Skipping adding plugin directory to PYTHONPATH for event script (autoSetPYTHONPATH disabled).");
        }
        let newPYTHONPATH = pathsForPythonPath.join(path__namespace.delimiter);
        // 3. Append any existing PYTHONPATH
        if (currentPYTHONPATH) {
            newPYTHONPATH = `${newPYTHONPATH}${path__namespace.delimiter}${currentPYTHONPATH}`;
        }
        const env = Object.assign(Object.assign(Object.assign({}, process.env), { OBSIDIAN_HTTP_PORT: plugin.initialHttpPort.toString(), OBSIDIAN_BRIDGE_ACTIVE: "true", PYTHONPATH: newPYTHONPATH, 
            // Event Variables
            OBSIDIAN_EVENT_NAME: eventName, OBSIDIAN_EVENT_PAYLOAD: payloadJson }), (plugin.settings.disablePyCache && {
            PYTHONPYCACHEPREFIX: os__namespace.tmpdir(),
        })); // End of CORRECT env block
        plugin.logDebug(`Setting PYTHONPATH=${newPYTHONPATH} for event script`);
        plugin.logDebug(`Setting cwd=${scriptDir} for event script`);
        const pythonArgsBase = plugin.settings.disablePyCache ? ["-B"] : [];
        const fullArgs = [...pythonArgsBase, scriptAbsolutePath];
        try {
            yield new Promise((resolve, reject) => {
                var _a, _b;
                const pythonProcess = child_process.spawn(pythonCmd, fullArgs, {
                    env, // Use the correctly defined env
                    cwd: scriptDir, // Set CWD
                });
                let stderrOutput = "";
                (_a = pythonProcess.stderr) === null || _a === void 0 ? void 0 : _a.on("data", (data) => {
                    stderrOutput += data.toString();
                });
                (_b = pythonProcess.stdout) === null || _b === void 0 ? void 0 : _b.on("data", (data) => {
                    plugin.logDebug(`[stdout EVENT ${scriptFilename}]: ${data.toString().trim()}`);
                });
                pythonProcess.on("error", (error) => {
                    plugin.logError(`Failed to start event script ${scriptRelativePath}: ${error.message}`);
                    reject(error);
                });
                pythonProcess.on("close", (code) => {
                    if (code !== 0 && code !== null) {
                        plugin.logError(`Event script ${scriptRelativePath} failed for event ${eventName} with exit code ${code}.`);
                        if (stderrOutput.trim()) {
                            plugin.logError(`[Error Summary EVENT ${scriptFilename}]: ${stderrOutput.trim()}`);
                        }
                        reject(new Error(`Event script exited with non-zero code: ${code}`));
                    }
                    else {
                        plugin.logDebug(`Event script ${scriptRelativePath} finished for event ${eventName}.`);
                        resolve();
                    }
                });
            });
        }
        catch (error) {
            plugin.logWarn(`Event script ${scriptRelativePath} execution failed for event ${eventName}: ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Helper to remove a script listener from the plugin's internal map.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param eventName The name of the event.
 * @param relativePath The relative path of the script listener to remove.
 */
function removeListener(plugin, eventName, relativePath) {
    const listeners = plugin.eventListeners.get(eventName);
    if (listeners) {
        listeners.delete(relativePath);
        if (listeners.size === 0) {
            plugin.eventListeners.delete(eventName);
            plugin.logDebug(`Removed last listener for event: ${eventName}`);
        }
        else {
            plugin.logDebug(`Removed listener ${relativePath} for event: ${eventName}. Remaining: ${listeners.size}`);
        }
    }
}

// --- src/obsidian_api.ts ---
// Encapsulates direct interactions with the Obsidian API (app.vault, app.workspace, etc.).
// --- Active Note Helpers ---
/**
 * Gets the TFile object for the currently active Markdown note.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The TFile object or null if no Markdown view is active.
 */
function getActiveNoteFile(plugin) {
    var _a;
    const activeView = plugin.app.workspace.getActiveViewOfType(obsidian.MarkdownView);
    return (_a = activeView === null || activeView === void 0 ? void 0 : activeView.file) !== null && _a !== void 0 ? _a : null;
}
/**
 * Gets the content of the currently active Markdown note using cachedRead.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param returnFormat The desired format for the content ("string" or "lines").
 * @returns The note content as a string, or null if no active note.
 */
function getActiveNoteContent(plugin_1) {
    return __awaiter(this, arguments, void 0, function* (plugin, returnFormat = "string") {
        const file = getActiveNoteFile(plugin);
        if (!file)
            return null;
        const contentString = yield plugin.app.vault.cachedRead(file);
        if (returnFormat === "lines") {
            // Split by newline characters. Handles \n, \r\n, and \r.
            // Using a regex accounts for different line ending types.
            return contentString.split(/\r\n|\r|\n/);
        }
        return contentString; // Default to returning the full string
    });
}
/**
 * Gets the vault-relative path of the currently active Markdown note.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The relative path string or null.
 */
function getActiveNoteRelativePath(plugin) { var _a, _b; return (_b = (_a = getActiveNoteFile(plugin)) === null || _a === void 0 ? void 0 : _a.path) !== null && _b !== void 0 ? _b : null; }
/**
 * Gets the absolute filesystem path of the currently active Markdown note.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The absolute path string or null if path cannot be determined.
 */
function getActiveNoteAbsolutePath(plugin) {
    const file = getActiveNoteFile(plugin);
    if (!file) {
        plugin.logWarn("Cannot get active note absolute path: No active file.");
        return null;
    }
    const adapter = plugin.app.vault.adapter;
    // Check if the adapter is a FileSystemAdapter and has the getFullPath method
    if (adapter instanceof obsidian.FileSystemAdapter && typeof adapter.getFullPath === 'function') {
        try {
            // file.path is already the normalized vault-relative path
            const absolutePath = adapter.getFullPath(file.path);
            plugin.logDebug(`Returning active note absolute path via getFullPath: ${absolutePath}`);
            // Double-check with Node.js path.isAbsolute for sanity (optional)
            if (!path__namespace.isAbsolute(absolutePath)) {
                plugin.logWarn(`getActiveNoteAbsolutePath: Path "${absolutePath}" from getFullPath() not considered absolute by Node.js path.isAbsolute. Check adapter behavior.`);
            }
            return absolutePath;
        }
        catch (error) {
            plugin.logError(`Error calling adapter.getFullPath for "${file.path}":`, error);
            return null; // Return null if the adapter method fails
        }
    }
    else {
        plugin.logError("Cannot get active note absolute path: Vault adapter is not FileSystemAdapter or getFullPath is unavailable.");
        // Fallback attempt (less reliable, kept as last resort - consider removing)
        // const vaultPath = getCurrentVaultAbsolutePath(plugin);
        // if (vaultPath) {
        //     let joinedPath = path.join(vaultPath, file.path);
        //     let normalized = normalizePath(joinedPath);
        //     // Attempt correction (less reliable than getFullPath)
        //     if (vaultPath.startsWith('/') && !normalized.startsWith('/')) {
        //         normalized = '/' + normalized;
        //     } else if (/^[a-zA-Z]:\\/.test(vaultPath) && !/^[a-zA-Z]:\\/.test(normalized)) {
        //         // Basic check if Windows path lost its drive letter - very unlikely with path.join
        //         plugin.logWarn("Potential Windows path issue after join/normalize.");
        //     }
        //     return normalized;
        // }
        return null; // Return null if adapter method is unavailable and fallback fails
    }
}
/**
 * Gets the title (basename) of the currently active Markdown note.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The title string or null.
 */
function getActiveNoteTitle(plugin) { var _a, _b; return (_b = (_a = getActiveNoteFile(plugin)) === null || _a === void 0 ? void 0 : _a.basename) !== null && _b !== void 0 ? _b : null; }
/**
 * Gets the parsed frontmatter of the currently active Markdown note.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The frontmatter object or null.
 */
function getActiveNoteFrontmatter(plugin) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        const file = getActiveNoteFile(plugin);
        if (!file)
            return null;
        const metadata = plugin.app.metadataCache.getFileCache(file);
        return (_a = metadata === null || metadata === void 0 ? void 0 : metadata.frontmatter) !== null && _a !== void 0 ? _a : null;
    });
}
// --- General Vault/File Helpers ---
/**
 * Gets the absolute path of the current vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The absolute path string or null if unavailable.
 */
function getCurrentVaultAbsolutePath(plugin) {
    const adapter = plugin.app.vault.adapter;
    if (adapter instanceof obsidian.FileSystemAdapter && adapter.getBasePath)
        return adapter.getBasePath();
    plugin.logWarn("Vault adapter is not FileSystemAdapter or lacks getBasePath method.");
    return null;
}
/**
 * Gets the list of all Markdown file paths in the vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns An array of vault-relative paths.
 */
function getAllNotePaths(plugin, absolute = false) {
    const relativePaths = plugin.app.vault.getMarkdownFiles().map((f) => f.path);
    if (absolute) {
        const vaultPath = getCurrentVaultAbsolutePath(plugin);
        if (!vaultPath) {
            plugin.logError("Cannot return absolute paths: Vault path unavailable for get_all_note_paths.");
            // Throw an error as the Python client expects this possibility.
            throw new Error("Cannot get absolute note paths: Vault absolute path is unavailable.");
        }
        // Ensure vaultPath doesn't have a trailing separator for consistent joining
        const cleanVaultPath = vaultPath.endsWith(path__namespace.sep) ? vaultPath.slice(0, -1) : vaultPath;
        return relativePaths.map(p => obsidian.normalizePath(path__namespace.join(cleanVaultPath, p)));
    }
    return relativePaths;
}
/**
 * Retrieves the full content of a note specified by its vault-relative path.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath The vault-relative path to the note.
 * @returns The content of the note.
 * @throws Error if the file is not found or is not a TFile.
 */
function getNoteContentByPath(plugin, relativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        const file = plugin.app.vault.getAbstractFileByPath(normalizedPath);
        if (!(file instanceof obsidian.TFile))
            throw new Error(`File not found or is not a file at path: ${normalizedPath}`);
        return plugin.app.vault.cachedRead(file); // Use cachedRead
    });
}
/**
 * Retrieves the parsed frontmatter of a note specified by its vault-relative path.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath The vault-relative path to the note.
 * @returns The parsed frontmatter object, or null if no frontmatter exists or file not found.
 */
function getNoteFrontmatterByPath(plugin, relativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        const normalizedPath = obsidian.normalizePath(relativePath);
        const metadata = plugin.app.metadataCache.getCache(normalizedPath);
        if (!metadata) {
            const fileExists = !!plugin.app.vault.getAbstractFileByPath(normalizedPath);
            if (!fileExists) {
                plugin.logDebug(`File not found at path for frontmatter lookup: ${normalizedPath}`);
                return null;
            }
            plugin.logDebug(`No metadata cache found for existing file: ${normalizedPath}`);
            return null;
        }
        return (_a = metadata.frontmatter) !== null && _a !== void 0 ? _a : null;
    });
}
/**
 * Modifies the content of a note specified by its vault-relative path using app.vault.modify.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath The vault-relative path of the note to modify.
 * @param newContent The new full content for the note.
 * @throws Error if the file is not found or modification fails.
 */
function modifyNoteContentByRelativePath(plugin, relativePath, newContent) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        const file = plugin.app.vault.getAbstractFileByPath(normalizedPath);
        if (!(file instanceof obsidian.TFile))
            throw new Error(`Cannot modify note: File not found in vault at path: ${normalizedPath}`);
        plugin.logDebug(`Attempting to modify note via Vault API: ${normalizedPath}`);
        try {
            yield plugin.app.vault.modify(file, newContent);
            plugin.logInfo(`Note modified successfully: ${normalizedPath}`);
        }
        catch (error) {
            plugin.logError(`Error during app.vault.modify for ${normalizedPath}:`, error);
            throw new Error(`Vault API failed to modify ${normalizedPath}: ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Creates a new note in the vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path for the new note (including .md).
 * @param content Initial content for the note.
 * @returns The created TFile object.
 * @throws Error if creation fails (e.g., file exists, invalid path).
 */
function createNote(plugin, relativePath, content) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        plugin.logDebug(`Attempting to create note: ${normalizedPath}`);
        try {
            const existingFile = plugin.app.vault.getAbstractFileByPath(normalizedPath);
            if (existingFile)
                throw new Error(`File already exists at path: ${normalizedPath}`);
            const file = yield plugin.app.vault.create(normalizedPath, content);
            plugin.logInfo(`Note created successfully: ${normalizedPath}`);
            return file;
        }
        catch (error) {
            plugin.logError(`Error creating note ${normalizedPath}:`, error);
            throw new Error(`Failed to create note "${normalizedPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Checks if a file or folder exists using the vault adapter.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path to check.
 * @returns True if the path exists, false otherwise.
 * @throws Error if the adapter check fails unexpectedly.
 */
function checkPathExists(plugin, relativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        try {
            const exists = yield plugin.app.vault.adapter.exists(normalizedPath);
            plugin.logDebug(`Path exists check for "${normalizedPath}": ${exists}`);
            return exists;
        }
        catch (error) {
            plugin.logError(`Error checking existence for path ${normalizedPath}:`, error);
            throw new Error(`Failed to check existence for path "${normalizedPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Deletes a file or folder (moves to trash or permanently).
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path of the item to delete.
 * @param permanently If true, delete permanently. Defaults to false (move to trash).
 * @throws Error if the item is not found or deletion fails.
 */
function deletePath(plugin_1, relativePath_1) {
    return __awaiter(this, arguments, void 0, function* (plugin, relativePath, permanently = false) {
        const normalizedPath = obsidian.normalizePath(relativePath);
        plugin.logDebug(`Attempting to delete path: ${normalizedPath} (Permanently: ${permanently})`);
        const fileOrFolder = plugin.app.vault.getAbstractFileByPath(normalizedPath);
        if (!fileOrFolder)
            throw new Error(`Cannot delete: Path not found at "${normalizedPath}"`);
        try {
            if (permanently) {
                plugin.logWarn(`Permanently deleting path: ${normalizedPath}`);
                yield plugin.app.vault.delete(fileOrFolder, true); // true for 'force' permanent delete
            }
            else {
                plugin.logDebug(`Moving path to trash: ${normalizedPath}`);
                // Use fileManager.trashFile for moving to Obsidian/system trash
                yield plugin.app.fileManager.trashFile(fileOrFolder);
            }
            plugin.logInfo(`Path deleted successfully: ${normalizedPath} (Permanently: ${permanently})`);
        }
        catch (error) {
            plugin.logError(`Error deleting path ${normalizedPath}:`, error);
            throw new Error(`Failed to delete path "${normalizedPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Renames or moves a file or folder within the vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param oldRelativePath Current vault-relative path.
 * @param newRelativePath Desired new vault-relative path.
 * @throws Error if the old path is not found, the new path is invalid, or rename fails.
 */
function renamePath(plugin, oldRelativePath, newRelativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedOldPath = obsidian.normalizePath(oldRelativePath);
        const normalizedNewPath = obsidian.normalizePath(newRelativePath);
        plugin.logDebug(`Attempting to rename/move: ${normalizedOldPath} -> ${normalizedNewPath}`);
        const fileOrFolder = plugin.app.vault.getAbstractFileByPath(normalizedOldPath);
        if (!fileOrFolder)
            throw new Error(`Cannot rename: Source path not found at "${normalizedOldPath}"`);
        if (normalizedOldPath === normalizedNewPath)
            throw new Error(`Cannot rename: Old path and new path are identical "${normalizedOldPath}"`);
        const destinationExists = plugin.app.vault.getAbstractFileByPath(normalizedNewPath);
        if (destinationExists)
            throw new Error(`Cannot rename: Destination path already exists "${normalizedNewPath}"`);
        try {
            yield plugin.app.vault.rename(fileOrFolder, normalizedNewPath);
            plugin.logInfo(`Path renamed/moved successfully: ${normalizedOldPath} -> ${normalizedNewPath}`);
        }
        catch (error) {
            plugin.logError(`Error renaming path ${normalizedOldPath} to ${normalizedNewPath}:`, error);
            throw new Error(`Failed to rename path "${normalizedOldPath}" to "${normalizedNewPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Creates a new folder in the vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path for the new folder.
 * @throws Error if creation fails (e.g., folder exists, invalid path).
 */
function createFolder(plugin, relativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        plugin.logDebug(`Attempting to create folder: ${normalizedPath}`);
        try {
            const existingPath = plugin.app.vault.getAbstractFileByPath(normalizedPath);
            if (existingPath)
                throw new Error(`Path already exists at "${normalizedPath}" (cannot create folder).`);
            yield plugin.app.vault.createFolder(normalizedPath);
            plugin.logInfo(`Folder created successfully: ${normalizedPath}`);
        }
        catch (error) {
            plugin.logError(`Error creating folder ${normalizedPath}:`, error);
            throw new Error(`Failed to create folder "${normalizedPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Lists files and subfolders within a given vault folder path.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path of the folder to list. Use "" for root.
 * @returns An object containing lists of relative file and folder paths.
 * @throws Error if the path is not found, not a folder, or listing fails.
 */
function listFolder(plugin, relativePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const normalizedPath = obsidian.normalizePath(relativePath);
        plugin.logDebug(`Attempting to list folder contents: ${normalizedPath}`);
        try {
            const listResult = yield plugin.app.vault.adapter.list(normalizedPath);
            plugin.logDebug(`Folder listed successfully: ${normalizedPath}`);
            return { files: listResult.files || [], folders: listResult.folders || [] };
        }
        catch (error) {
            plugin.logError(`Error listing folder ${normalizedPath}:`, error);
            const pathExists = yield checkPathExists(plugin, normalizedPath);
            if (!pathExists)
                throw new Error(`Cannot list folder: Path not found at "${normalizedPath}"`);
            else
                throw new Error(`Failed to list folder "${normalizedPath}": ${error instanceof Error ? error.message : String(error)} (Is it a folder?)`);
        }
    });
}
/**
 * Retrieves outgoing links (including embeds) from a note's metadata cache.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath Vault-relative path of the note.
 * @returns A list of outgoing link strings.
 * @throws Error if the note is not found or metadata cannot be retrieved.
 */
function getLinks(plugin, relativePath) {
    const normalizedPath = obsidian.normalizePath(relativePath);
    plugin.logDebug(`Attempting to get outgoing links for: ${normalizedPath}`);
    const metadata = plugin.app.metadataCache.getCache(normalizedPath);
    if (!metadata) {
        const fileExists = !!plugin.app.vault.getAbstractFileByPath(normalizedPath);
        if (!fileExists)
            throw new Error(`Cannot get links: File not found at path "${normalizedPath}"`);
        else {
            plugin.logWarn(`No metadata cache found for file "${normalizedPath}" to get links.`);
            return [];
        }
    }
    const outgoingLinks = [];
    if (metadata.links)
        metadata.links.forEach((link) => outgoingLinks.push(link.link));
    if (metadata.embeds)
        metadata.embeds.forEach((embed) => outgoingLinks.push(embed.link));
    const uniqueLinks = Array.from(new Set(outgoingLinks));
    plugin.logDebug(`Found ${uniqueLinks.length} unique outgoing links/embeds for ${normalizedPath}.`);
    return uniqueLinks;
}
/**
 * Retrieves backlinks for a specific note, optionally using the Backlink Cache plugin.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param targetPath Vault-relative path of the target note.
 * @param useCacheIfAvailable Attempt to use Backlink Cache plugin if available.
 * @param cacheMode 'fast' or 'safe' mode for Backlink Cache plugin.
 * @returns A dictionary mapping source file paths to their LinkCache arrays.
 * @throws Error if the target file is not found or backlink retrieval fails.
 */
function getBacklinks(plugin, targetPath, useCacheIfAvailable, cacheMode) {
    return __awaiter(this, void 0, void 0, function* () {
        plugin.logDebug(`Handling get_backlinks for: ${targetPath}, useCache: ${useCacheIfAvailable}, mode: ${cacheMode}`);
        const targetFile = plugin.app.vault.getAbstractFileByPath(targetPath);
        if (!(targetFile instanceof obsidian.TFile))
            throw new Error(`File not found at path: ${targetPath}`);
        let backlinksResult = null;
        let errorOccurred = null;
        // @ts-ignore: Accessing internal 'plugins' property which is not part of the public API.
        const isCachePluginEnabled = plugin.app.plugins.enabledPlugins.has("backlink-cache");
        const attemptCacheFeatures = useCacheIfAvailable && isCachePluginEnabled;
        // @ts-ignore: Accessing 'getBacklinksForFile' which might be monkey-patched by 'backlink-cache' plugin.
        const getBacklinksFn = plugin.app.metadataCache.getBacklinksForFile;
        if (typeof getBacklinksFn !== "function") {
            plugin.logError("Native function app.metadataCache.getBacklinksForFile not found!");
            throw new Error("Obsidian's native getBacklinksForFile function is missing.");
        }
        try {
            if (attemptCacheFeatures && cacheMode === "safe") {
                // @ts-ignore: Accessing '.safe' property potentially added by 'backlink-cache' plugin.
                if (typeof getBacklinksFn.safe === "function") {
                    plugin.logDebug("Attempting to call getBacklinksForFile.safe() (provided by backlink-cache)");
                    // @ts-ignore: Calling potentially monkey-patched '.safe' method.
                    backlinksResult = yield getBacklinksFn.safe.call(plugin.app.metadataCache, targetFile);
                    plugin.logDebug("Call to getBacklinksForFile.safe() completed.");
                }
                else {
                    plugin.logWarn("Requested 'safe' mode, but getBacklinksForFile.safe function not found. Falling back to standard call.");
                    backlinksResult = getBacklinksFn.call(plugin.app.metadataCache, targetFile);
                }
            }
            else {
                if (attemptCacheFeatures)
                    plugin.logDebug("Calling standard getBacklinksForFile (using backlink-cache 'fast' mode if active)");
                else
                    plugin.logDebug("Calling standard getBacklinksForFile (native Obsidian implementation)");
                backlinksResult = getBacklinksFn.call(plugin.app.metadataCache, targetFile);
                plugin.logDebug("Standard call to getBacklinksForFile completed.");
            }
        }
        catch (error) {
            plugin.logError(`Error during getBacklinksForFile call (mode: ${attemptCacheFeatures ? cacheMode : "native"}):`, error);
            errorOccurred = `Error retrieving backlinks: ${error instanceof Error ? error.message : String(error)}`;
        }
        if (errorOccurred)
            throw new Error(errorOccurred);
        else if (backlinksResult !== null) {
            plugin.logDebug("Raw backlinks result from API/Native:", backlinksResult);
            const serializableBacklinks = {};
            try {
                // The structure returned by the cache plugin seems to be { data: Map<string, LinkCache[]> }
                // The native one might be different, adjust based on observation if needed.
                // @ts-ignore: Accessing 'data' property which might exist on the result from 'backlink-cache'.
                const backlinksMap = backlinksResult === null || backlinksResult === void 0 ? void 0 : backlinksResult.data;
                if (backlinksMap instanceof Map) {
                    plugin.logDebug(`Iterating through Map with ${backlinksMap.size} entries.`);
                    for (const [sourcePath, linkCacheArray] of backlinksMap.entries()) {
                        if (typeof sourcePath === "string" && Array.isArray(linkCacheArray))
                            serializableBacklinks[sourcePath] = linkCacheArray;
                        else
                            plugin.logWarn(`Skipping invalid entry in backlinks Map: Key=${sourcePath}, Value type=${typeof linkCacheArray}`);
                    }
                }
                else {
                    // Fallback or handle native structure if different
                    // Assuming native might return Record<string, LinkCache[]> directly?
                    if (typeof backlinksResult === 'object' && backlinksResult !== null && !(backlinksResult instanceof Map)) {
                        plugin.logWarn("Backlinks result was not the expected Map structure. Assuming Record<string, LinkCache[]>.", backlinksResult);
                        // Directly assign if it looks like the right structure
                        // This part might need refinement based on testing native behavior without the cache plugin
                        Object.assign(serializableBacklinks, backlinksResult);
                    }
                    else {
                        plugin.logWarn("Backlinks result did not contain the expected 'data' Map structure or a direct Record. Raw result:", backlinksResult);
                    }
                }
                plugin.logDebug("Serializable backlinks data prepared:", serializableBacklinks);
                return serializableBacklinks;
            }
            catch (conversionError) {
                plugin.logError("Error converting backlinks result to serializable format:", conversionError);
                throw new Error(`Failed to process backlink data: ${conversionError instanceof Error ? conversionError.message : String(conversionError)}`);
            }
        }
        else {
            // This case should ideally not be reached if errorOccurred is handled correctly
            plugin.logError(`Failed to retrieve backlinks for ${targetPath} using any method. Returning error.`);
            throw new Error(`Failed to retrieve backlinks for ${targetPath} using any method.`);
        }
    });
}
// --- Editor Helpers ---
/**
 * Gets the currently selected text in the active Markdown editor.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The selected text (can be an empty string if nothing is selected).
 * @throws Error if no Markdown view/editor is active.
 */
function getSelectedText(plugin) {
    const view = plugin.app.workspace.getActiveViewOfType(obsidian.MarkdownView);
    if (!view)
        throw new Error("No active Markdown view found.");
    const editor = view.editor;
    if (!editor)
        throw new Error("Active Markdown view does not have an editor instance.");
    return editor.getSelection();
}
/**
 * Replaces the currently selected text in the active Markdown editor.
 * If no text is selected, inserts the text at the cursor position.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param replacement The text to insert or replace the selection with.
 * @throws Error if no Markdown view/editor is active.
 */
function replaceSelectedText(plugin, replacement) {
    const view = plugin.app.workspace.getActiveViewOfType(obsidian.MarkdownView);
    if (!view)
        throw new Error("No active Markdown view found to replace selection in.");
    const editor = view.editor;
    if (!editor)
        throw new Error("Active Markdown view does not have an editor instance.");
    editor.replaceSelection(replacement);
}
/**
 * Opens a note in the Obsidian workspace.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param relativePath The vault-relative path of the note to open (e.g., "Folder/Note.md").
 * @param newLeaf If true, opens the note in a new leaf (tab/split). Defaults to false.
 * @throws Error if the file cannot be opened (e.g., not found, invalid path).
 */
function openNote(plugin_1, relativePath_1) {
    return __awaiter(this, arguments, void 0, function* (plugin, relativePath, newLeaf = false) {
        const normalizedPath = obsidian.normalizePath(relativePath);
        plugin.logDebug(`Requesting to open note: ${normalizedPath} (newLeaf: ${newLeaf})`);
        try {
            yield plugin.app.workspace.openLinkText(normalizedPath, "", newLeaf ? "split" : false); // sourcePath // PaneType or boolean
            plugin.logInfo(`Successfully requested to open ${normalizedPath}`);
        }
        catch (error) {
            plugin.logError(`Failed to open link text "${normalizedPath}":`, error);
            throw new Error(`Could not open note "${normalizedPath}": ${error instanceof Error ? error.message : String(error)}`);
        }
    });
}
/**
 * Retrieves context information about the active editor.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns An object with editor context, or null if no editor is active.
 * @throws Error if accessing editor properties fails unexpectedly.
 */
function getEditorContext(plugin) {
    const view = plugin.app.workspace.getActiveViewOfType(obsidian.MarkdownView);
    if (!view || !view.editor) {
        plugin.logDebug("No active Markdown editor found for get_editor_context.");
        return null;
    }
    const editor = view.editor;
    try {
        const cursor = editor.getCursor();
        const lineCount = editor.lineCount();
        const context = { cursor: { line: cursor.line, ch: cursor.ch }, line_count: lineCount };
        plugin.logDebug("Retrieved editor context:", context);
        return context;
    }
    catch (error) {
        plugin.logError("Error retrieving editor context:", error);
        throw new Error(`Failed to get editor context: ${error instanceof Error ? error.message : String(error)}`);
    }
}
// --- Other Obsidian Info Helpers ---
/**
 * Gets the current language setting of Obsidian.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The language code (e.g., 'en', 'fr') or 'en' as default.
 */
function getObsidianLanguage(plugin) {
    const obsidianLang = localStorage.getItem("language");
    if (obsidianLang) {
        plugin.logDebug(`Obsidian language from localStorage: ${obsidianLang}`);
        return obsidianLang;
    }
    try {
        // @ts-ignore - Accessing moment which is globally available in Obsidian
        const momentLocale = moment.locale();
        if (momentLocale) {
            plugin.logDebug(`Obsidian language from moment.locale(): ${momentLocale}`);
            return momentLocale;
        }
    }
    catch (e) {
        plugin.logWarn("Could not get language via moment.locale()", e);
    }
    plugin.logWarn("Could not determine Obsidian language, defaulting to 'en'.");
    return "en";
}
/**
 * Gets the name of the current vault.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns The vault name string.
 * @throws Error if retrieval fails.
 */
function getVaultName(plugin) {
    try {
        const vaultName = plugin.app.vault.getName();
        plugin.logDebug(`Retrieved vault name: ${vaultName}`);
        return vaultName;
    }
    catch (error) {
        plugin.logError("Error retrieving vault name:", error);
        throw new Error(`Failed to get vault name: ${error instanceof Error ? error.message : String(error)}`);
    }
}
/**
 * Determines the current theme mode (light or dark).
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns 'light' or 'dark'.
 * @throws Error if checking fails.
 */
function getThemeMode(plugin) {
    try {
        const isDark = document.body.classList.contains("theme-dark");
        const mode = isDark ? "dark" : "light";
        plugin.logDebug(`Determined theme mode: ${mode}`);
        return mode;
    }
    catch (error) {
        plugin.logError("Error checking document.body for theme class:", error);
        throw new Error(`Failed to determine theme mode: ${error instanceof Error ? error.message : String(error)}`);
    }
}
/**
 * Sets the Obsidian theme to light or dark mode, inspired by ThemeDesignUtilities.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param mode The desired theme mode: 'light' or 'dark'.
 * @throws Error if setting the theme fails.
 */
function setTheme(plugin, mode) {
    plugin.logDebug(`Attempting to set theme to: ${mode}`);
    const lightThemeName = "moonstone"; // Default light theme
    const darkThemeName = "obsidian"; // Default dark theme (confusingly named 'obsidian')
    const targetThemeToSetConfig = mode === "light" ? lightThemeName : darkThemeName;
    const targetThemeToApplyVisual = mode === "light" ? lightThemeName : darkThemeName;
    try {
        // 1. Set the visual theme using app.setTheme (if available) or app.changeTheme
        // @ts-ignore: setTheme might exist on app but not in typings
        if (typeof plugin.app.setTheme === "function") {
            // @ts-ignore
            plugin.app.setTheme(targetThemeToApplyVisual);
            plugin.logInfo(`Visual theme set to ${mode} (using ${targetThemeToApplyVisual}) via app.setTheme.`);
            // @ts-ignore: changeTheme might exist on app but not in typings
        }
        else if (typeof plugin.app.changeTheme === "function") {
            // @ts-ignore
            plugin.app.changeTheme(targetThemeToApplyVisual);
            plugin.logInfo(`Visual theme set to ${mode} (using ${targetThemeToApplyVisual}) via app.changeTheme.`);
        }
        else {
            // Fallback visual change
            document.body.removeClass("theme-light", "theme-dark");
            document.body.addClass(mode === "dark" ? "theme-dark" : "theme-light");
            plugin.logWarn("Neither app.setTheme nor app.changeTheme found. Used direct body class manipulation.");
        }
        // 2. Set the persistent configuration using app.vault.setConfig
        // We use @ts-ignore because your compiler reported errors with these on Vault.
        // This assumes the methods exist but are not typed.
        // @ts-ignore TS2339: Property 'getConfig' does not exist on type 'Vault'.
        const currentConfiguredTheme = plugin.app.vault.getConfig("theme");
        plugin.logDebug(`Current configured theme in vault: ${currentConfiguredTheme}`);
        // @ts-ignore TS2339: Property 'setConfig' does not exist on type 'Vault'.
        if (currentConfiguredTheme !== targetThemeToSetConfig) {
            // @ts-ignore TS2339: Property 'setConfig' does not exist on type 'Vault'.
            plugin.app.vault.setConfig("theme", targetThemeToSetConfig);
            plugin.logInfo(`Persistent theme config set to: ${targetThemeToSetConfig}`);
        }
        else {
            plugin.logDebug(`Persistent theme config already matched: ${targetThemeToSetConfig}.`);
        }
        // 3. Trigger a CSS change to ensure UI updates
        plugin.app.workspace.trigger("css-change");
        plugin.logDebug("Triggered 'css-change'.");
    }
    catch (error) {
        plugin.logError(`Error setting theme to ${mode}:`, error);
        throw new Error(`Failed to set theme to "${mode}": ${error instanceof Error ? error.message : String(error)}`);
    }
}
/**
 * Toggles the Obsidian theme between light and dark mode.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @throws Error if toggling the theme fails.
 */
function toggleTheme(plugin) {
    plugin.logDebug("Attempting to toggle theme.");
    const currentMode = getThemeMode(plugin); // Visual check based on body class
    const newMode = currentMode === "dark" ? "light" : "dark";
    try {
        setTheme(plugin, newMode); // setTheme now correctly uses app.setConfig/getConfig
        plugin.logInfo(`Theme successfully toggled to ${newMode}.`);
    }
    catch (error) {
        // setTheme already logs the specific error
        plugin.logError("Error toggling theme."); // General toggle error
        throw new Error(`Failed to toggle theme: ${error instanceof Error ? error.message : String(error)}`);
    }
}
// --- Temporarily Disabled API Functions ---
// Keep these placeholders to avoid breaking imports if they are re-enabled later
/**
 * Executes an Obsidian command by its ID. (Temporarily Disabled)
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param commandId The ID of the command to execute.
 * @throws Error always (feature disabled).
 */
function runObsidianCommand(plugin, commandId) {
    plugin.logError("run_obsidian_command is temporarily disabled due to build issues.");
    throw new Error("run_obsidian_command is temporarily disabled.");
    // Original logic:
    // plugin.logDebug(`Attempting to execute command ID: ${commandId}`);
    // try {
    //  const success = plugin.app.commands.executeCommandById(commandId);
    //  if (!success) {
    //      const commandExists = !!plugin.app.commands.commands[commandId];
    //      if (!commandExists) throw new Error(`Command with ID "${commandId}" not found.`);
    //      else throw new Error(`Command "${commandId}" could not be executed (possibly disabled or inactive).`);
    //  }
    //  plugin.logInfo(`Command executed successfully: ${commandId}`);
    // } catch (error) {
    //  plugin.logError(`Error executing command ${commandId}:`, error);
    //  throw new Error(`Failed to execute command "${commandId}": ${error instanceof Error ? error.message : String(error)}`);
    // }
}
/**
 * Retrieves all unique tags from the Obsidian metadata cache. (Temporarily Disabled)
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @returns A sorted list of unique tags (including '#').
 * @throws Error always (feature disabled).
 */
function getAllTags(plugin) {
    plugin.logError("get_all_tags is temporarily disabled due to build issues.");
    throw new Error("get_all_tags is temporarily disabled.");
    // Original logic:
    // try {
    //  const tagsObject = plugin.app.metadataCache.getAllTags();
    //  const tagsArray = Object.keys(tagsObject);
    //  tagsArray.sort();
    //  plugin.logDebug(`Retrieved ${tagsArray.length} unique tags directly via getAllTags().`);
    //  return tagsArray;
    // } catch (error) {
    //  plugin.logError("Error retrieving tags using metadataCache.getAllTags():", error);
    //  throw new Error(`Failed to get tags using getAllTags(): ${error instanceof Error ? error.message : String(error)}`);
    // }
}

// --- src/action_handler.ts ---
// Handles dispatching incoming API actions to the appropriate functions.
/**
 * Handles incoming JSON requests from the Python client.
 * @param plugin The ObsidianPythonBridge plugin instance.
 * @param request The parsed JSON request object.
 * @returns A promise resolving to the JSON response object.
 */
function dispatchAction(plugin, request) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a, _b;
        const { action, payload } = request;
        plugin.logDebug(`Executing action: ${action} with payload:`, payload);
        try {
            switch (action) {
                // --- Vault/Note Info ---
                case "get_all_note_paths":
                    // The payload structure is now { absolute?: boolean }
                    // Default to false if not provided or if payload is undefined or not an object
                    const getAbsolutePaths = typeof payload === 'object' && payload !== null && payload.absolute === true;
                    try {
                        // Call the updated function from obsidian_api.ts
                        const paths = getAllNotePaths(plugin, getAbsolutePaths);
                        return { status: "success", data: paths };
                    }
                    catch (error) {
                        const errorMsg = error instanceof Error ? error.message : String(error);
                        plugin.logError(`Error in get_all_note_paths (absolute=${getAbsolutePaths}): ${errorMsg}`);
                        return { status: "error", error: `Failed to get note paths: ${errorMsg}` };
                    }
                case "get_active_note_content":
                    const returnFormat = typeof payload === 'object' && payload !== null && typeof payload.return_format === 'string' ? payload.return_format : "string";
                    try {
                        const activeContent = yield getActiveNoteContent(plugin, returnFormat);
                        return activeContent !== null ? { status: "success", data: activeContent } : { status: "error", error: "No active Markdown note found." };
                    }
                    catch (error) {
                        const errorMsg = error instanceof Error ? error.message : String(error);
                        plugin.logError(`Error in get_active_note_content (format=${returnFormat}): ${errorMsg}`);
                        return { status: "error", error: `Failed to get active note content: ${errorMsg}` };
                    }
                case "get_active_note_relative_path":
                    const activeRelativePath = getActiveNoteRelativePath(plugin);
                    return activeRelativePath !== null ? { status: "success", data: activeRelativePath } : { status: "error", error: "No active Markdown note found." };
                case "get_active_note_absolute_path":
                    const activeAbsolutePath = getActiveNoteAbsolutePath(plugin);
                    return activeAbsolutePath !== null ? { status: "success", data: activeAbsolutePath } : { status: "error", error: "No active note or vault path unavailable." };
                case "get_active_note_title":
                    const activeTitle = getActiveNoteTitle(plugin);
                    return activeTitle !== null ? { status: "success", data: activeTitle } : { status: "error", error: "No active Markdown note found." };
                case "get_current_vault_absolute_path":
                    const vaultPath = getCurrentVaultAbsolutePath(plugin);
                    return vaultPath !== null ? { status: "success", data: vaultPath } : { status: "error", error: "Could not determine vault absolute path." };
                case "get_active_note_frontmatter":
                    const activeFrontmatter = yield getActiveNoteFrontmatter(plugin);
                    return { status: "success", data: activeFrontmatter };
                case "get_note_content":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string")
                        return { status: "error", error: "Invalid payload: 'path' (string) required." };
                    try {
                        const content = yield getNoteContentByPath(plugin, payload.path);
                        return { status: "success", data: content };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                // --- Theme Management Actions ---
                case "set_theme_light":
                    try {
                        setTheme(plugin, "light");
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        const errorMsg = error instanceof Error ? error.message : String(error);
                        plugin.logError(`Error in set_theme_light: ${errorMsg}`);
                        return { status: "error", error: `Failed to set theme to light: ${errorMsg}` };
                    }
                case "set_theme_dark":
                    try {
                        setTheme(plugin, "dark");
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        const errorMsg = error instanceof Error ? error.message : String(error);
                        plugin.logError(`Error in set_theme_dark: ${errorMsg}`);
                        return { status: "error", error: `Failed to set theme to dark: ${errorMsg}` };
                    }
                case "toggle_theme":
                    try {
                        toggleTheme(plugin);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        const errorMsg = error instanceof Error ? error.message : String(error);
                        plugin.logError(`Error in toggle_theme: ${errorMsg}`);
                        return { status: "error", error: `Failed to toggle theme: ${errorMsg}` };
                    }
                case "get_note_frontmatter":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string")
                        return { status: "error", error: "Invalid payload: 'path' (string) required." };
                    try {
                        const frontmatter = yield getNoteFrontmatterByPath(plugin, payload.path);
                        return { status: "success", data: frontmatter };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                // --- Editor Actions ---
                case "get_selected_text":
                    try {
                        const selectedText = getSelectedText(plugin);
                        return { status: "success", data: selectedText };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "replace_selected_text":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.replacement) !== "string")
                        return { status: "error", error: "Invalid payload: 'replacement' (string) required." };
                    try {
                        replaceSelectedText(plugin, payload.replacement);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                // --- Note Modification/Opening ---
                case "modify_note_content": // Kept for backward compatibility
                    // Check if payload and required fields exist and have the correct type
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.filePath) !== "string" || typeof (payload === null || payload === void 0 ? void 0 : payload.content) !== "string") {
                        return { status: "error", error: "Invalid payload: 'filePath' (absolute path string) and 'content' (string) required." };
                    }
                    try {
                        // Get the absolute path of the vault
                        const vaultAbsPath = getCurrentVaultAbsolutePath(plugin);
                        if (!vaultAbsPath) {
                            throw new Error("Vault path unavailable for conversion.");
                        }
                        // --- FIX: Do NOT normalize the absolute path received from Python ---
                        // Assume the path received from the Python client is already the correct absolute path for the OS.
                        const receivedFilePath = payload.filePath;
                        // Optional: Add a check here if needed, e.g., using path.isAbsolute(receivedFilePath)
                        // if (!path.isAbsolute(receivedFilePath)) {
                        //     plugin.logError(`Received non-absolute path in modify_note_content: ${receivedFilePath}`);
                        //     throw new Error(`Received non-absolute path: ${receivedFilePath}`);
                        // }
                        // Ensure the vault path ends with a path separator for reliable comparison
                        const vaultPathWithSeparator = vaultAbsPath.endsWith(path__namespace.sep) ? vaultAbsPath : vaultAbsPath + path__namespace.sep;
                        // Check if the received file path starts with the vault path (including separator)
                        // Use the received path directly, without normalizePath()
                        if (!receivedFilePath.startsWith(vaultPathWithSeparator)) {
                            plugin.logError(`Path Mismatch Debug: File='${receivedFilePath}' Vault='${vaultAbsPath}' VaultWithSep='${vaultPathWithSeparator}'`);
                            throw new Error("Path is outside the current vault.");
                        }
                        // Calculate the relative path from the vault root to the file
                        // Use the original vaultAbsPath and the received path here
                        const relativePath = obsidian.normalizePath(path__namespace.relative(vaultAbsPath, receivedFilePath));
                        // Call the internal function that modifies content using the relative path
                        yield modifyNoteContentByRelativePath(plugin, relativePath, payload.content);
                        // Return success if modification was successful
                        return { status: "success", data: null };
                    }
                    catch (modifyError) {
                        // Catch any errors during the process
                        const errorMsg = modifyError instanceof Error ? modifyError.message : String(modifyError);
                        plugin.logError(`Error in modifyNoteContent (compat) for ${payload.filePath}: ${errorMsg}`);
                        // Return an error response to the Python client
                        return { status: "error", error: `Failed to modify note: ${errorMsg}` };
                    }
                // The case "modify_note_content_by_path" remains unchanged as it uses relative paths
                case "modify_note_content_by_path": // Preferred action
                    // Check if payload and required fields exist and have the correct type
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || typeof (payload === null || payload === void 0 ? void 0 : payload.content) !== "string") {
                        return { status: "error", error: "Invalid payload: 'path' (relative vault path string) and 'content' (string) required." };
                    }
                    try {
                        // Directly call the modification function with the relative path
                        yield modifyNoteContentByRelativePath(plugin, payload.path, payload.content);
                        // Return success
                        return { status: "success", data: null };
                    }
                    catch (modifyError) {
                        // Catch errors during modification
                        const errorMsg = modifyError instanceof Error ? modifyError.message : String(modifyError);
                        plugin.logError(`Error in modifyNoteContentByPath for ${payload.path}: ${errorMsg}`);
                        // Return an error response
                        return { status: "error", error: `Failed to modify note: ${errorMsg}` };
                    }
                case "open_note":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string")
                        return { status: "error", error: "Invalid payload: 'path' (relative vault path string) required." };
                    const newLeaf = typeof (payload === null || payload === void 0 ? void 0 : payload.new_leaf) === "boolean" ? payload.new_leaf : false;
                    try {
                        yield openNote(plugin, payload.path, newLeaf);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                // --- UI Interactions ---
                case "show_notification":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.content) !== "string")
                        return { status: "error", error: "Invalid payload: 'content' (string) required." };
                    const duration = typeof (payload === null || payload === void 0 ? void 0 : payload.duration) === "number" ? payload.duration : 4000;
                    plugin.showNotification(payload.content, duration); // Use plugin's method directly for Notice
                    return { status: "success", data: null };
                case "request_user_input":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.scriptName) !== "string" || typeof (payload === null || payload === void 0 ? void 0 : payload.inputType) !== "string" || typeof (payload === null || payload === void 0 ? void 0 : payload.message) !== "string")
                        return { status: "error", error: "Invalid payload: 'scriptName', 'inputType', 'message' (strings) required." };
                    // Use plugin's method which handles the modal
                    const userInput = yield plugin.requestUserInput(payload.scriptName, payload.inputType, payload.message, payload.validationRegex, payload.minValue, payload.maxValue, payload.step);
                    if (userInput === null) {
                        plugin.logDebug("User cancelled input modal.");
                        return { status: "error", error: "User cancelled input." };
                    }
                    return { status: "success", data: userInput };
                // --- Internal/Test ---
                case "_test_connection_ping":
                    plugin.logDebug("Received test connection ping from client.");
                    return { status: "success", data: "pong" };
                // --- Script Settings Action ---
                case "get_script_settings":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.scriptPath) !== "string")
                        return { status: "error", error: "Invalid payload: 'scriptPath' (relative path string) required." };
                    const relativePath = obsidian.normalizePath(payload.scriptPath);
                    plugin.logDebug(`Requesting settings for script: ${relativePath}`);
                    const definitions = plugin.settings.scriptSettingsDefinitions[relativePath] || [];
                    const storedValues = plugin.settings.scriptSettingsValues[relativePath] || {};
                    const finalValues = {};
                    for (const def of definitions) {
                        finalValues[def.key] = storedValues.hasOwnProperty(def.key) ? storedValues[def.key] : def.default;
                    }
                    plugin.logDebug(`Returning settings for ${relativePath}:`, finalValues);
                    return { status: "success", data: finalValues };
                // --- New Obsidian API Actions ---
                case "get_obsidian_language":
                    try {
                        const lang = getObsidianLanguage(plugin);
                        return { status: "success", data: lang };
                    }
                    catch (error) {
                        return { status: "error", error: `Failed to get Obsidian language: ${error instanceof Error ? error.message : String(error)}` };
                    }
                case "create_note":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    const noteContent = typeof (payload === null || payload === void 0 ? void 0 : payload.content) === "string" ? payload.content : "";
                    try {
                        yield createNote(plugin, payload.path, noteContent);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "check_path_exists":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    try {
                        const exists = yield checkPathExists(plugin, payload.path);
                        return { status: "success", data: exists };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "delete_path":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    const permanently = typeof (payload === null || payload === void 0 ? void 0 : payload.permanently) === "boolean" ? payload.permanently : false;
                    try {
                        yield deletePath(plugin, payload.path, permanently);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "rename_path":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.old_path) !== "string" || !payload.old_path)
                        return { status: "error", error: "Invalid payload: 'old_path' (non-empty string) required." };
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.new_path) !== "string" || !payload.new_path)
                        return { status: "error", error: "Invalid payload: 'new_path' (non-empty string) required." };
                    try {
                        yield renamePath(plugin, payload.old_path, payload.new_path);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "run_obsidian_command": // Still disabled
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.command_id) !== "string" || !payload.command_id)
                        return { status: "error", error: "Invalid payload: 'command_id' (non-empty string) required." };
                    try {
                        runObsidianCommand(plugin, payload.command_id);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_all_tags": // Still disabled
                    try {
                        const tags = getAllTags(plugin);
                        return { status: "success", data: tags };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_vault_name":
                    try {
                        const name = getVaultName(plugin);
                        return { status: "success", data: name };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_theme_mode":
                    try {
                        const mode = getThemeMode(plugin);
                        return { status: "success", data: mode };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "create_folder":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    try {
                        yield createFolder(plugin, payload.path);
                        return { status: "success", data: null };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "list_folder":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string")
                        return { status: "error", error: "Invalid payload: 'path' (string) required." };
                    try {
                        const contents = yield listFolder(plugin, payload.path);
                        return { status: "success", data: contents };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_links":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    // Only 'outgoing' is implemented in obsidian_api for now
                    // const linkType = typeof payload?.type === "string" ? payload.type : 'outgoing';
                    try {
                        const links = getLinks(plugin, payload.path);
                        return { status: "success", data: links };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_editor_context":
                    try {
                        const context = getEditorContext(plugin);
                        return { status: "success", data: context };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                case "get_backlinks":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.path) !== "string" || !payload.path)
                        return { status: "error", error: "Invalid payload: 'path' (non-empty string) required." };
                    const targetPath = obsidian.normalizePath(payload.path);
                    const useCache = (_a = payload.use_cache_if_available) !== null && _a !== void 0 ? _a : true;
                    const cacheMode = payload.cache_mode === "safe" ? "safe" : "fast";
                    try {
                        const backlinks = yield getBacklinks(plugin, targetPath, useCache, cacheMode);
                        return { status: "success", data: backlinks };
                    }
                    catch (error) {
                        return { status: "error", error: error instanceof Error ? error.message : String(error) };
                    }
                // --- Event Listener Actions ---
                case "register_event_listener":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.eventName) !== "string" || !payload.eventName)
                        return { status: "error", error: "Invalid payload: 'eventName' (string) required." };
                    const scriptPathForRegister = payload.scriptPath;
                    if (!scriptPathForRegister || typeof scriptPathForRegister !== "string")
                        return { status: "error", error: "Internal error: Script path not provided in payload for registration." };
                    const eventNameReg = payload.eventName;
                    if (!plugin.eventListeners.has(eventNameReg))
                        plugin.eventListeners.set(eventNameReg, new Set());
                    (_b = plugin.eventListeners.get(eventNameReg)) === null || _b === void 0 ? void 0 : _b.add(scriptPathForRegister);
                    plugin.logInfo(`Script '${scriptPathForRegister}' registered for event '${eventNameReg}'. Current listeners:`, plugin.eventListeners.get(eventNameReg));
                    return { status: "success", data: null };
                case "unregister_event_listener":
                    if (typeof (payload === null || payload === void 0 ? void 0 : payload.eventName) !== "string" || !payload.eventName)
                        return { status: "error", error: "Invalid payload: 'eventName' (string) required." };
                    const scriptPathForUnregister = payload.scriptPath;
                    if (!scriptPathForUnregister || typeof scriptPathForUnregister !== "string")
                        return { status: "error", error: "Internal error: Script path not provided in payload for unregistration." };
                    const eventNameUnreg = payload.eventName;
                    removeListener(plugin, eventNameUnreg, scriptPathForUnregister); // Use helper from event_handler
                    plugin.logInfo(`Script '${scriptPathForUnregister}' unregistered from event '${eventNameUnreg}'.`);
                    return { status: "success", data: null };
                // --- Default ---
                default:
                    plugin.logWarn(`Received unknown action: ${action}`);
                    return { status: "error", error: `Unknown action: ${action}` };
            }
        }
        catch (error) {
            // Catch errors from synchronous API calls or unexpected issues within the switch
            const errorMessage = error instanceof Error ? error.message : String(error);
            plugin.logError(`Error executing action "${action}":`, errorMessage);
            if (error instanceof Error && error.stack)
                plugin.logError("Stack trace:", error.stack);
            return { status: "error", error: `Failed to execute action "${action}": ${errorMessage}` };
        }
    });
}

// Inline FolderSuggest class definition
// Inspired by Obsidian's internal file suggester and AutoNoteMover example
class FolderSuggest extends obsidian.AbstractInputSuggest {
    constructor(app, inputEl) {
        super(app, inputEl);
        this.inputEl = inputEl;
    }
    getSuggestions(inputStr) {
        const lowerCaseInputStr = inputStr.toLowerCase();
        const allFiles = this.app.vault.getAllLoadedFiles();
        const folders = [];
        allFiles.forEach((file) => {
            // Ensure we only consider actual TFolder objects
            if (file instanceof obsidian.TFolder) {
                // Check if the folder path contains the input string AND is not __pycache__
                if (file.name !== "__pycache__" && file.path.toLowerCase().contains(lowerCaseInputStr)) { // <--- Ignore __pycache__
                    folders.push(file);
                }
            }
        });
        // Sort folders alphabetically by path
        folders.sort((a, b) => a.path.localeCompare(b.path));
        return folders;
    }
    renderSuggestion(item, el) { el.setText(item.path); } // Display the folder path
    selectSuggestion(item) {
        this.inputEl.value = item.path; // Set input value to the selected path
        this.inputEl.trigger("input"); // Trigger input event to update setting if needed
        this.close(); // Close the suggestion modal
    }
}
// End Inline FolderSuggest
// Plugin settings tab
class PythonBridgeSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        // Debounce delay constant
        this.DEBOUNCE_DELAY = 750; // milliseconds
        this.plugin = plugin;
    }
    // Helper to check if a path is a valid directory
    isPathValidDirectory(inputPath) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!inputPath)
                return false;
            const trimmedPath = inputPath.trim();
            if (!trimmedPath)
                return false;
            if (path__namespace.isAbsolute(trimmedPath)) {
                try {
                    const stats = yield fs__namespace.promises.stat(trimmedPath);
                    return stats.isDirectory();
                }
                catch (error) {
                    return false;
                }
            }
            else {
                const normalizedRelative = obsidian.normalizePath(trimmedPath);
                const abstractFile = this.app.vault.getAbstractFileByPath(normalizedRelative);
                return abstractFile instanceof obsidian.TFolder;
            }
        });
    }
    display() {
        const { containerEl } = this;
        containerEl.empty();
        // Security Warning
        const warningContainer = containerEl.createDiv({ cls: "callout python-bridge-security-warning-callout", attr: { "data-callout": "warning" } });
        warningContainer.createEl("strong", { text: t("SETTINGS_SECURITY_WARNING_TITLE") });
        warningContainer.createEl("br");
        warningContainer.appendText(t("SETTINGS_SECURITY_WARNING_TEXT"));
        // General Plugin Settings
        containerEl.createEl("h2", { text: t("SETTINGS_TAB_TITLE") });
        // Language Selection
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_LANGUAGE_TITLE"))
            .setDesc(t("SETTINGS_LANGUAGE_DESC"))
            .addDropdown((dropdown) => {
            const languages = getAvailableLanguages();
            dropdown.addOption("auto", t("SETTINGS_LANGUAGE_AUTO") || "Automatic");
            for (const code in languages) {
                if (code !== "auto")
                    dropdown.addOption(code, languages[code]);
            }
            dropdown.setValue(this.plugin.settings.pluginLanguage).onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.pluginLanguage = value;
                yield this.plugin.saveSettings();
                loadTranslations(this.plugin);
                this.display(); // Redraw settings tab with new language
            }));
        });
        // Python Scripts Folder
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_FOLDER_TITLE"))
            .setDesc(t("SETTINGS_FOLDER_DESC"))
            .addSearch((search) => __awaiter(this, void 0, void 0, function* () {
            new FolderSuggest(this.app, search.inputEl);
            search.setPlaceholder(t("SETTINGS_FOLDER_PLACEHOLDER")).setValue(this.plugin.settings.pythonScriptsFolder)
                // Use debounced validation/saving
                .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                const newValue = value.trim();
                const oldValue = this.plugin.settings.pythonScriptsFolder;
                const isValidDirectory = yield this.isPathValidDirectory(newValue);
                if (isValidDirectory) {
                    search.inputEl.classList.remove('python-bridge-input-error');
                    if (oldValue !== newValue) {
                        this.plugin.logDebug(`Saving valid folder path: ${newValue}`);
                        this.plugin.settings.pythonScriptsFolder = newValue;
                        yield this.plugin.saveSettings();
                        // Trigger settings discovery & command sync only if path is valid and changed
                        const scriptsFolder = getScriptsFolderPath(this.plugin); // Re-check path validity
                        if (scriptsFolder && this.plugin.pythonExecutable) {
                            updateAndSyncCommands(this.plugin, scriptsFolder) // Call updateAndSyncCommands
                                .then(() => {
                                this.plugin.logInfo("Script settings cache & commands updated after folder change.");
                                this.display(); // Redraw potentially needed if script settings appeared/disappeared
                            })
                                .catch((err) => this.plugin.logError("Error updating settings cache & commands after folder change:", err));
                        }
                        else {
                            // This case might happen if python executable disappears between checks
                            this.plugin.logWarn("Clearing script settings cache & commands due to invalid folder or missing Python after change.");
                            this.plugin.settings.scriptSettingsDefinitions = {};
                            this.plugin.settings.scriptSettingsValues = {};
                            this.plugin.settings.scriptActivationStatus = {}; // Clear activation status too
                            this.plugin.settings.scriptAutoStartStatus = {}; // Clear auto-start status too
                            this.plugin.settings.scriptAutoStartDelay = {}; // Clear auto-start delay too
                            yield this.plugin.saveSettings(); // Save cleared settings
                            this.display(); // Redraw needed
                        }
                    }
                }
                else {
                    // Path is invalid (doesn't exist or is a file)
                    // Only show error if the input field is not empty
                    if (newValue) {
                        search.inputEl.classList.add('python-bridge-input-error');
                        new obsidian.Notice(t("NOTICE_INVALID_FOLDER_PATH"));
                        this.plugin.logWarn(`Invalid folder path entered: ${newValue}. Not saving.`);
                    }
                    else {
                        // If field is empty, clear border and save empty path
                        search.inputEl.classList.remove('python-bridge-input-error');
                        if (oldValue !== "") {
                            this.plugin.settings.pythonScriptsFolder = "";
                            yield this.plugin.saveSettings();
                            // Clear script settings if path becomes empty
                            this.plugin.settings.scriptSettingsDefinitions = {};
                            this.plugin.settings.scriptSettingsValues = {};
                            this.plugin.settings.scriptActivationStatus = {}; // Clear activation status too
                            this.plugin.settings.scriptAutoStartStatus = {}; // Clear auto-start status too
                            this.plugin.settings.scriptAutoStartDelay = {}; // Clear auto-start delay too
                            yield this.plugin.saveSettings();
                            this.display();
                        }
                    }
                }
            }), this.DEBOUNCE_DELAY, true)); // Debounce onChange, true for leading edge execution if needed (optional)
            // Initial validation check on display
            const currentPath = this.plugin.settings.pythonScriptsFolder;
            if (currentPath && !(yield this.isPathValidDirectory(currentPath))) {
                search.inputEl.classList.add('python-bridge-input-error');
            }
        }));
        // HTTP Server Port
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_PORT_TITLE"))
            .setDesc(t("SETTINGS_PORT_DESC"))
            .addText((text) => {
            text.setPlaceholder(String(DEFAULT_PORT)).setValue(String(this.plugin.settings.httpPort))
                // Use debounced validation/saving
                .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                const portStr = value.trim();
                // Handle empty input: reset to default
                if (portStr === "") {
                    this.plugin.logInfo("Port input cleared, resetting to default.");
                    text.inputEl.classList.remove('python-bridge-input-error');
                    text.inputEl.style.borderColor = ""; // Clear border
                    if (this.plugin.settings.httpPort !== DEFAULT_PORT) {
                        this.plugin.settings.httpPort = DEFAULT_PORT;
                        text.setValue(String(DEFAULT_PORT)); // Update UI
                        yield this.plugin.saveSettings();
                    }
                    return; // Stop processing if empty
                }
                const port = parseInt(portStr, 10);
                const isValidPort = !isNaN(port) && (port === 0 || (port >= 1024 && port <= 65535));
                if (isValidPort) {
                    text.inputEl.classList.remove('python-bridge-input-error');
                    if (this.plugin.settings.httpPort !== port) {
                        this.plugin.logDebug(`Saving valid port: ${port}`);
                        this.plugin.settings.httpPort = port;
                        yield this.plugin.saveSettings(); // saveSettings handles restart
                    }
                }
                else {
                    // Invalid port number or range
                    text.inputEl.classList.add('python-bridge-input-error');
                    new obsidian.Notice(t("NOTICE_INVALID_PORT_RANGE"));
                    this.plugin.logWarn(`Invalid port entered: ${value}. Must be 0 or between 1024 and 65535. Not saving invalid value.`);
                    // Do NOT save the invalid value. Keep the last valid one.
                    // Optionally revert the input field visually, but might conflict with user typing
                    // text.setValue(String(this.plugin.settings.httpPort));
                }
            }), this.DEBOUNCE_DELAY, true)); // Debounce onChange
        });
        // Disable Python Cache
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_CACHE_TITLE"))
            .setDesc(t("SETTINGS_CACHE_DESC"))
            .addToggle((toggle) => toggle.setValue(this.plugin.settings.disablePyCache).onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.disablePyCache = value;
            yield this.plugin.saveSettings();
        })));
        // Auto-set PYTHONPATH Toggle
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_AUTO_PYTHONPATH_NAME"))
            .setDesc(t("SETTINGS_AUTO_PYTHONPATH_DESC"))
            .addToggle((toggle) => toggle.setValue(this.plugin.settings.autoSetPYTHONPATH).onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.autoSetPYTHONPATH = value;
            yield this.plugin.saveSettings();
            this.plugin.logInfo(`Automatic PYTHONPATH setting changed to: ${value}`);
            // Optionally add a notice if disabled, explaining the consequence
            if (!value) {
                new obsidian.Notice(t("NOTICE_AUTO_PYTHONPATH_DISABLED_DESC"), 6000);
            }
        })));
        // Script Specific Settings
        containerEl.createEl("h2", { text: t("SETTINGS_SCRIPT_SETTINGS_TITLE") });
        // Refresh Button
        new obsidian.Setting(containerEl)
            .setName(t("SETTINGS_REFRESH_DEFINITIONS_BUTTON_NAME"))
            .setDesc(t("SETTINGS_REFRESH_DEFINITIONS_BUTTON_DESC"))
            .addButton((button) => {
            button.setButtonText(t("SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT")).setCta().onClick(() => __awaiter(this, void 0, void 0, function* () {
                const scriptsFolder = getScriptsFolderPath(this.plugin);
                if (!scriptsFolder) {
                    if (this.plugin.settings.pythonScriptsFolder)
                        new obsidian.Notice(t("NOTICE_INVALID_FOLDER_PATH"));
                    else
                        new obsidian.Notice(t("NOTICE_SCRIPTS_FOLDER_INVALID"), 5000);
                    return;
                }
                if (!this.plugin.pythonExecutable) {
                    new obsidian.Notice(t("NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH"), 5000);
                    yield checkPythonEnvironment(this.plugin); // Re-check env
                    if (!this.plugin.pythonExecutable)
                        return;
                }
                button.setDisabled(true).setButtonText(t("SETTINGS_REFRESH_DEFINITIONS_BUTTON_REFRESHING"));
                new obsidian.Notice(t("NOTICE_REFRESHING_SCRIPT_SETTINGS"));
                try {
                    yield updateAndSyncCommands(this.plugin, scriptsFolder); // Call updateAndSyncCommands
                    new obsidian.Notice(t("NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS"));
                    this.display(); // Redraw to show updated settings/scripts
                }
                catch (error) {
                    this.plugin.logError("Manual script settings refresh failed:", error);
                    new obsidian.Notice(t("NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED"));
                }
                finally {
                    // Ensure button is re-enabled even if display() fails or is interrupted
                    if (button.buttonEl && button.disabled) {
                        button.setDisabled(false).setButtonText(t("SETTINGS_REFRESH_DEFINITIONS_BUTTON_TEXT"));
                    }
                }
            }));
        });
        // Logic to display ALL scripts
        const scriptsFolder = getScriptsFolderPath(this.plugin);
        const definitions = this.plugin.settings.scriptSettingsDefinitions;
        const values = this.plugin.settings.scriptSettingsValues;
        const activationStatus = this.plugin.settings.scriptActivationStatus;
        const autoStartStatus = this.plugin.settings.scriptAutoStartStatus;
        const autoStartDelay = this.plugin.settings.scriptAutoStartDelay;
        if (!scriptsFolder) {
            if (!this.plugin.settings.pythonScriptsFolder)
                containerEl.createEl("p", { text: t("SETTINGS_SCRIPT_FOLDER_NOT_CONFIGURED") });
            else
                containerEl.createEl("p", { text: t("NOTICE_INVALID_FOLDER_PATH") }); // Folder path is set but invalid
            return; // Stop here if folder is invalid/not set
        }
        // Get all valid Python script files from the folder
        let scriptFiles;
        try {
            scriptFiles = fs__namespace.readdirSync(scriptsFolder).filter((f) => f.toLowerCase().endsWith(".py") && !f.startsWith(".") && f !== PYTHON_LIBRARY_FILENAME); // Exclude library
        }
        catch (error) {
            this.plugin.logError("Error reading scripts folder in settings tab:", error);
            containerEl.createEl("p", { text: t("NOTICE_SCRIPTS_FOLDER_READ_ERROR_PREFIX") + (error instanceof Error ? error.message : String(error)) });
            return; // Stop if folder cannot be read
        }
        // Sort script files alphabetically
        scriptFiles.sort((a, b) => a.localeCompare(b));
        if (scriptFiles.length === 0) {
            containerEl.createEl("p", { text: t("NOTICE_NO_SCRIPTS_FOUND") }); // Use the existing "no scripts" notice
        }
        else {
            // Iterate through ALL found script files
            for (const scriptFilename of scriptFiles) {
                const absolutePath = path__namespace.join(scriptsFolder, scriptFilename);
                // Calculate relative path for settings keys
                const relativePath = obsidian.normalizePath(path__namespace.relative(scriptsFolder, absolutePath));
                // Ensure activation status exists (default true)
                if (activationStatus[relativePath] === undefined)
                    activationStatus[relativePath] = true;
                const isScriptActive = activationStatus[relativePath];
                // Display section for EACH script
                containerEl.createEl("h3", { text: `${t("SETTINGS_SCRIPT_SETTINGS_HEADING_PREFIX")} ${scriptFilename}` }); // Use filename for title
                // Activation Toggle (Always shown)
                new obsidian.Setting(containerEl)
                    .setName(t("SETTINGS_SCRIPT_ACTIVATE_TOGGLE_NAME"))
                    .setDesc(t("SETTINGS_SCRIPT_ACTIVATE_TOGGLE_DESC"))
                    .addToggle((toggle) => toggle.setValue(isScriptActive).onChange((value) => __awaiter(this, void 0, void 0, function* () {
                    activationStatus[relativePath] = value;
                    yield this.plugin.saveSettings();
                    this.plugin.logInfo(`Script '${relativePath}' activation status set to: ${value}`);
                    this.display(); // Redraw needed to show/hide auto-start options
                })));
                // Auto-start Toggle (Only if script is active)
                if (isScriptActive) {
                    // Ensure auto-start status exists (default false)
                    if (autoStartStatus[relativePath] === undefined)
                        autoStartStatus[relativePath] = false;
                    const isAutoStartEnabled = autoStartStatus[relativePath];
                    new obsidian.Setting(containerEl)
                        .setName(t("SETTINGS_SCRIPT_AUTOSTART_TOGGLE_NAME")) // New translation key
                        .setDesc(t("SETTINGS_SCRIPT_AUTOSTART_TOGGLE_DESC")) // New translation key
                        .addToggle((toggle) => toggle.setValue(isAutoStartEnabled).onChange((value) => __awaiter(this, void 0, void 0, function* () {
                        autoStartStatus[relativePath] = value;
                        yield this.plugin.saveSettings();
                        this.plugin.logInfo(`Script '${relativePath}' auto-start status set to: ${value}`);
                        this.display(); // Redraw needed to show/hide delay input
                    })));
                    // Auto-start Delay Input (Only if auto-start is enabled)
                    if (isAutoStartEnabled) {
                        // Ensure delay value exists (default 0)
                        if (autoStartDelay[relativePath] === undefined)
                            autoStartDelay[relativePath] = 0;
                        const currentDelay = autoStartDelay[relativePath];
                        new obsidian.Setting(containerEl)
                            .setName(t("SETTINGS_SCRIPT_AUTOSTART_DELAY_NAME")) // New translation key
                            .setDesc(t("SETTINGS_SCRIPT_AUTOSTART_DELAY_DESC")) // New translation key
                            .addText((text) => {
                            text.inputEl.type = "number";
                            text.inputEl.min = "0"; // Minimum delay is 0
                            text.setPlaceholder("0").setValue(String(currentDelay))
                                .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                                const delayStr = value.trim();
                                let delayNum = parseInt(delayStr, 10);
                                // Validate: must be a non-negative integer
                                if (isNaN(delayNum) || delayNum < 0) {
                                    text.inputEl.classList.add('python-bridge-input-error');
                                    this.plugin.logWarn(`Invalid auto-start delay entered: ${value}. Using 0.`);
                                    delayNum = 0; // Reset to default if invalid
                                    // text.setValue("0"); // This might interfere with typing
                                }
                                else {
                                    text.inputEl.classList.remove('python-bridge-input-error');
                                }
                                // Save only if the valid number changed
                                if (autoStartDelay[relativePath] !== delayNum) {
                                    autoStartDelay[relativePath] = delayNum;
                                    yield this.plugin.saveSettings();
                                    this.plugin.logInfo(`Script '${relativePath}' auto-start delay set to: ${delayNum} seconds.`);
                                }
                            }), this.DEBOUNCE_DELAY)); // Use debounce
                        });
                    }
                }
                // Conditionally display specific settings
                const scriptDefs = definitions[relativePath];
                if (scriptDefs && scriptDefs.length > 0) {
                    // Ensure scriptValues object exists if definitions exist
                    values[relativePath] = values[relativePath] || {};
                    const scriptValues = values[relativePath];
                    // Loop through specific settings ONLY if definitions exist
                    for (const settingDef of scriptDefs) {
                        const setting = new obsidian.Setting(containerEl).setName(settingDef.label || settingDef.key).setDesc(settingDef.description || "");
                        const currentValue = scriptValues.hasOwnProperty(settingDef.key) ? scriptValues[settingDef.key] : settingDef.default;
                        // Switch statement for different setting types (unchanged from previous version)
                        switch (settingDef.type) {
                            case "text":
                                setting.addText((text) => text.setValue(String(currentValue !== null && currentValue !== void 0 ? currentValue : "")).onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                                    scriptValues[settingDef.key] = value;
                                    yield this.plugin.saveSettings();
                                }), this.DEBOUNCE_DELAY)));
                                break;
                            case "textarea":
                                setting.addTextArea((text) => {
                                    text.setValue(String(currentValue !== null && currentValue !== void 0 ? currentValue : "")).onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                                        scriptValues[settingDef.key] = value;
                                        yield this.plugin.saveSettings();
                                    }), this.DEBOUNCE_DELAY));
                                    text.inputEl.rows = 4;
                                });
                                break;
                            case "number": // Applying the compact style requested earlier
                                setting.addText((text) => {
                                    var _a;
                                    text.inputEl.type = "number";
                                    if (settingDef.min !== undefined && settingDef.min !== null)
                                        text.inputEl.min = String(settingDef.min);
                                    if (settingDef.max !== undefined && settingDef.max !== null)
                                        text.inputEl.max = String(settingDef.max);
                                    if (settingDef.step !== undefined && settingDef.step !== null)
                                        text.inputEl.step = String(settingDef.step);
                                    text.setValue(String((_a = currentValue !== null && currentValue !== void 0 ? currentValue : settingDef.default) !== null && _a !== void 0 ? _a : "")).onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                                        const numValue = value === "" ? settingDef.default : parseFloat(value);
                                        const isValidNumber = !isNaN(numValue);
                                        if (isValidNumber) {
                                            text.inputEl.classList.remove('python-bridge-input-error');
                                        }
                                        else {
                                            text.inputEl.classList.add('python-bridge-input-error');
                                        }
                                        scriptValues[settingDef.key] = isValidNumber ? numValue : settingDef.default;
                                        yield this.plugin.saveSettings();
                                    }), this.DEBOUNCE_DELAY));
                                });
                                break;
                            case "slider":
                                setting.addSlider((slider) => {
                                    var _a, _b, _c;
                                    const min = (_a = settingDef.min) !== null && _a !== void 0 ? _a : 0;
                                    const max = (_b = settingDef.max) !== null && _b !== void 0 ? _b : 100;
                                    const step = (_c = settingDef.step) !== null && _c !== void 0 ? _c : 1;
                                    slider.setLimits(min, max, step).setValue(Math.max(min, Math.min(max, Number(currentValue !== null && currentValue !== void 0 ? currentValue : settingDef.default)))).setDynamicTooltip()
                                        .onChange((value) => __awaiter(this, void 0, void 0, function* () {
                                        scriptValues[settingDef.key] = value;
                                        yield this.plugin.saveSettings();
                                    }));
                                });
                                break;
                            case "toggle":
                                setting.addToggle((toggle) => toggle.setValue(Boolean(currentValue !== null && currentValue !== void 0 ? currentValue : settingDef.default)).onChange((value) => __awaiter(this, void 0, void 0, function* () {
                                    scriptValues[settingDef.key] = value;
                                    yield this.plugin.saveSettings();
                                })));
                                break;
                            case "dropdown":
                                setting.addDropdown((dropdown) => {
                                    const options = settingDef.options || [];
                                    options.forEach((option) => {
                                        if (typeof option === "string")
                                            dropdown.addOption(option, option);
                                        else if (typeof option === "object" && option !== null && "value" in option && "display" in option)
                                            dropdown.addOption(option.value, option.display);
                                    });
                                    const validValue = options.some((opt) => (typeof opt === "string" ? opt : opt.value) === currentValue) ? currentValue : settingDef.default;
                                    dropdown.setValue(String(validValue !== null && validValue !== void 0 ? validValue : "")).onChange((value) => __awaiter(this, void 0, void 0, function* () {
                                        scriptValues[settingDef.key] = value;
                                        yield this.plugin.saveSettings();
                                    }));
                                });
                                break;
                            default:
                                setting.addText((text) => text.setValue(String(currentValue !== null && currentValue !== void 0 ? currentValue : "")).setDisabled(true).setPlaceholder(`Unknown setting type: ${settingDef.type}`));
                                this.plugin.logWarn(`Unknown setting type "${settingDef.type}" for key "${settingDef.key}" in script "${relativePath}"`);
                        }
                    } // End loop for specific settings
                } // End conditional display of specific settings
            } // End loop for ALL scripts
        } // End else (scripts found)
    } // End display()
} // End class

// --- src/UserInputModal.ts ---
// Modal class for requesting user input
class UserInputModal extends obsidian.Modal {
    constructor(app, scriptName, inputType, message, onSubmit, validationRegex, minValue, maxValue, step) {
        super(app);
        this.scriptName = scriptName; // Comes from Python, not translated here
        this.inputType = inputType;
        this.message = message; // Comes from Python, not translated here
        this.onSubmit = onSubmit;
        this.validationRegex = validationRegex;
        this.minValue = minValue;
        this.maxValue = maxValue;
        this.step = step;
    }
    onOpen() {
        const { contentEl } = this;
        // Title and message come from the Python script via payload
        contentEl.createEl('h2', { text: this.scriptName });
        contentEl.createEl('p', { text: this.message });
        // Create input element based on type
        if (this.inputType === 'text')
            this.inputEl = contentEl.createEl('input', { type: 'text' });
        else if (this.inputType === 'number' || this.inputType === 'range') { // Treat 'number' and 'range' similarly for input element
            this.inputEl = contentEl.createEl('input', { type: this.inputType === 'range' ? 'range' : 'number' }); // Use 'range' or 'number' type
            if (this.minValue !== undefined)
                this.inputEl.setAttribute('min', this.minValue.toString());
            if (this.maxValue !== undefined)
                this.inputEl.setAttribute('max', this.maxValue.toString());
            if (this.step !== undefined)
                this.inputEl.setAttribute('step', this.step.toString());
            // Optionally add a display for the current value for range inputs
            if (this.inputType === 'range') {
                const valueDisplay = contentEl.createEl('span', { text: this.inputEl.value });
                valueDisplay.style.marginLeft = '10px'; // Add some spacing
                this.inputEl.addEventListener('input', () => { valueDisplay.textContent = this.inputEl.value; });
            }
        }
        else if (this.inputType === 'boolean' || this.inputType === 'checkbox')
            this.inputEl = contentEl.createEl('input', { type: 'checkbox' }); // Accept both 'boolean' and 'checkbox'
        else if (this.inputType === 'date')
            this.inputEl = contentEl.createEl('input', { type: 'date' });
        else {
            contentEl.createEl('p', { text: `Error: Unknown input type '${this.inputType}' requested.` });
            return;
        } // Handle unknown input types gracefully // Don't add submit button if input type is invalid
        // Add some spacing before the button
        contentEl.createEl('div', { attr: { style: 'margin-top: 1em;' } });
        // Use translation for the submit button text
        const submitButton = contentEl.createEl('button', { text: t('MODAL_USER_INPUT_SUBMIT_BUTTON') });
        submitButton.addEventListener('click', () => {
            if (this.inputEl) {
                let inputValue;
                let validationPassed = true; // Flag to track validation status
                // Handle different input types to get the correct value
                if (this.inputType === 'boolean' || this.inputType === 'checkbox') {
                    inputValue = this.inputEl.checked;
                    this.inputEl.classList.remove('python-bridge-input-error'); // Reset border for checkbox/boolean
                    this.inputEl.style.borderColor = ""; // Reset border for checkbox/boolean
                }
                else if (this.inputType === 'number' || this.inputType === 'range') {
                    inputValue = parseFloat(this.inputEl.value);
                    // Basic validation if min/max are set
                    if (this.minValue !== undefined && inputValue < this.minValue)
                        inputValue = this.minValue;
                    if (this.maxValue !== undefined && inputValue > this.maxValue)
                        inputValue = this.maxValue;
                    // Check if the result is a valid number (e.g., if input was empty or non-numeric)
                    if (isNaN(inputValue)) {
                        // Handle potential NaN if input is cleared or invalid for number/range
                        // Decide on behavior: default value? error? For now, let's show notice and prevent submit
                        new obsidian.Notice("Invalid number input."); // Consider translating this if needed
                        this.inputEl.classList.add('python-bridge-input-error');
                        this.inputEl.focus();
                        validationPassed = false; // Mark validation as failed
                    }
                    else {
                        this.inputEl.classList.remove('python-bridge-input-error');
                    }
                }
                else { // Includes 'text', 'date', etc.
                    inputValue = this.inputEl.value;
                    // Optional: Add regex validation here if needed for 'text' type
                    if (this.inputType === 'text' && this.validationRegex) {
                        try {
                            const regex = new RegExp(this.validationRegex);
                            if (!regex.test(inputValue)) {
                                this.inputEl.classList.add('python-bridge-input-error');
                                this.inputEl.focus(); // Set focus back to the input field
                                new obsidian.Notice(t("NOTICE_INPUT_VALIDATION_FAILED")); // Show translated error
                                validationPassed = false; // Mark validation as failed
                            }
                            else {
                                this.inputEl.classList.remove('python-bridge-input-error');
                            }
                        }
                        catch (e) {
                            console.error("UserInputModal: Invalid validation regex provided:", this.validationRegex, e);
                            this.inputEl.classList.remove('python-bridge-input-error');
                            // Proceed without validation if regex itself is bad
                        }
                    }
                    else {
                        // Reset border for other types like 'date' or 'text' without regex
                        this.inputEl.classList.remove('python-bridge-input-error');
                    }
                }
                // Only submit and close if validation passed
                if (validationPassed) {
                    this.onSubmit(inputValue);
                    this.close();
                }
                // If validationPassed is false, the modal remains open due to the logic above
            }
        });
        // Allow submitting with Enter key on text/number/date inputs
        if (this.inputEl && (this.inputType === 'text' || this.inputType === 'number' || this.inputType === 'date')) {
            this.inputEl.addEventListener('keypress', (event) => {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Prevent default form submission behavior
                    submitButton.click(); // Trigger the submit button's click handler
                }
            });
            this.inputEl.focus(); // Focus the input element when the modal opens
        }
    }
    onClose() { const { contentEl } = this; contentEl.empty(); }
}

// ScriptSelectionModal is likely used only within python_executor now
// --- Default Settings ---
const DEFAULT_SETTINGS = {
    pythonScriptsFolder: "",
    httpPort: DEFAULT_PORT,
    disablePyCache: true,
    pluginLanguage: "auto",
    autoSetPYTHONPATH: true,
    scriptSettingsDefinitions: {},
    scriptSettingsValues: {},
    scriptActivationStatus: {},
    scriptAutoStartStatus: {},
    scriptAutoStartDelay: {},
};
// --- Main Plugin Class ---
class ObsidianPythonBridge extends obsidian.Plugin {
    constructor() {
        super(...arguments);
        this.server = null;
        this.initialHttpPort = 0; // Store the port used at server start
        this.pythonExecutable = null; // Managed by environment_checker
        this.dynamicScriptCommands = new Map(); // Managed by python_executor
        this.eventListeners = new Map(); // Managed by event_handler
        this.pluginDirAbsPath = null; // Absolute path to the plugin's directory
        // Remove other API helpers previously here, as they are now in obsidian_api.ts
        // Remove Python execution helpers, now in python_executor.ts
        // Remove Event handling helpers, now in event_handler.ts
    }
    // --- Logging Helpers ---
    // (Keep these methods as they are used by other modules via the plugin instance)
    logDebug(message, ...optionalParams) { console.log(`plugin:obsidian-python-bridge:DEBUG: ${message}`, ...optionalParams); }
    logInfo(message, ...optionalParams) { console.log(`plugin:obsidian-python-bridge:INFO: ${message}`, ...optionalParams); }
    logWarn(message, ...optionalParams) { console.warn(`plugin:obsidian-python-bridge:WARN: ${message}`, ...optionalParams); }
    logError(message, ...optionalParams) { console.error(`plugin:obsidian-python-bridge:ERROR: ${message}`, ...optionalParams); }
    // --- Plugin Lifecycle ---
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            this.logInfo("Loading Obsidian Python Bridge plugin...");
            yield this.loadSettings();
            yield this.validateScriptsFolderPathSetting(); // Validate startup folder path setting
            loadTranslations(this); // Load translations
            this.initialHttpPort = this.settings.httpPort; // Store initial port
            // --- Determine plugin absolute path *BEFORE* settings discovery ---
            const adapter = this.app.vault.adapter;
            if (adapter instanceof obsidian.FileSystemAdapter && this.manifest.dir) {
                const basePath = adapter.getBasePath();
                const manifestDir = this.manifest.dir;
                this.logDebug(`Determining plugin path from basePath: '${basePath}' and manifestDir: '${manifestDir}'`);
                let joinedPath = path__namespace.join(basePath, manifestDir);
                this.pluginDirAbsPath = obsidian.normalizePath(joinedPath);
                // Final check and potential correction if normalizePath removed the leading slash (Unix-like systems)
                if (basePath.startsWith('/') && !this.pluginDirAbsPath.startsWith('/')) {
                    this.logWarn(`normalizePath might have removed the leading slash. Original joined: ${joinedPath}, Normalized: ${this.pluginDirAbsPath}. Attempting to prepend slash.`);
                    // Prepend slash if missing, remove any multiple leading slashes first just in case
                    this.pluginDirAbsPath = '/' + this.pluginDirAbsPath.replace(/^\/+/, '');
                }
                this.logInfo(`Plugin absolute directory path determined: ${this.pluginDirAbsPath}`);
            }
            else {
                this.logError("Could not determine plugin absolute directory path. Automatic PYTHONPATH for the bridge library might not work correctly.");
                this.pluginDirAbsPath = null; // Ensure it's null if determination fails
            }
            // --- End Plugin Path Determination ---
            this.addSettingTab(new PythonBridgeSettingTab(this.app, this));
            this.addCommands(); // Add static commands
            // Perform environment check using the dedicated module
            const envCheckOk = yield checkPythonEnvironment(this);
            if (envCheckOk) {
                this.startHttpServer(); // Start server only if Python env is okay
                // Discover script settings and sync commands using the dedicated module
                // This now runs *after* pluginDirAbsPath is potentially determined
                // const scriptsFolder = getScriptsFolderPath(this.plugin); // Re-check after potential validation
                const scriptsFolder = getScriptsFolderPath(this); // Pass 'this' (the plugin instance) directly
                if (scriptsFolder && this.pythonExecutable) {
                    // Run discovery and command sync asynchronously
                    updateAndSyncCommands(this, scriptsFolder)
                        .catch((err) => { this.logError("Initial script settings discovery and command sync failed:", err); })
                        .then(() => { runAutoStartScripts(this); }); // Run auto-start scripts AFTER initial discovery/sync
                }
                else {
                    this.logWarn("Skipping initial script settings discovery: Python executable or valid scripts folder not found.");
                }
            }
            else {
                this.logWarn("Skipping server start and settings discovery due to Python environment issues.");
            }
            // Register cleanup on quit
            this.registerEvent(this.app.workspace.on("quit", () => {
                this.logInfo("Obsidian quitting, stopping HTTP server...");
                this.stopHttpServer();
            }));
            // Register Obsidian event listeners using the dedicated module
            registerObsidianEventListeners(this);
            this.logInfo("Obsidian Python Bridge plugin loaded.");
        });
    } // --- End onload ---
    onunload() {
        this.logInfo("Unloading Obsidian Python Bridge plugin...");
        this.stopHttpServer(); // Ensure server is stopped on unload
        this.eventListeners.clear(); // Clear listeners map
        this.logInfo("Obsidian Python Bridge plugin unloaded.");
    }
    // --- Settings Management ---
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
            // Ensure new settings fields exist
            this.settings.autoSetPYTHONPATH = (_a = this.settings.autoSetPYTHONPATH) !== null && _a !== void 0 ? _a : true; // Ensure default for existing users
            this.settings.scriptSettingsDefinitions = this.settings.scriptSettingsDefinitions || {};
            this.settings.scriptSettingsValues = this.settings.scriptSettingsValues || {};
            this.settings.scriptActivationStatus = this.settings.scriptActivationStatus || {};
            this.settings.scriptAutoStartStatus = this.settings.scriptAutoStartStatus || {};
            this.settings.scriptAutoStartDelay = this.settings.scriptAutoStartDelay || {};
            // Validate loaded port
            if (typeof this.settings.httpPort !== "number" || !Number.isInteger(this.settings.httpPort) || (this.settings.httpPort !== 0 && (this.settings.httpPort < 1024 || this.settings.httpPort > 65535))) {
                this.logWarn(`Invalid httpPort loaded (${this.settings.httpPort}), resetting to default ${DEFAULT_PORT}`);
                this.settings.httpPort = DEFAULT_PORT;
            }
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a, _b;
            yield this.saveData(this.settings);
            // Check if port setting needs server restart
            const currentPortSetting = this.settings.httpPort;
            const actualListeningPort = this.server ? (_b = (_a = this.server.address()) === null || _a === void 0 ? void 0 : _a.port) !== null && _b !== void 0 ? _b : this.initialHttpPort : this.initialHttpPort;
            if (this.server && currentPortSetting !== actualListeningPort) {
                if (currentPortSetting === 0 || (currentPortSetting >= 1024 && currentPortSetting <= 65535)) {
                    this.logInfo(`HTTP port setting changed or differs from listening port (${actualListeningPort} -> ${currentPortSetting}). Restarting server...`);
                    new obsidian.Notice(`${t("NOTICE_PLUGIN_NAME")}: ${t("NOTICE_PORT_CHANGED_PREFIX")} ${currentPortSetting}. ${t("NOTICE_PORT_CHANGED_SUFFIX")}`, 3000);
                    this.stopHttpServer();
                    this.startHttpServer();
                }
                else {
                    this.logError(`Attempted to save invalid port ${currentPortSetting}. Server not restarted.`);
                }
            }
            // Settings discovery & command sync on folder change is handled in the settings tab
        });
    }
    // --- Validate Scripts Folder Path on Startup ---
    validateScriptsFolderPathSetting() {
        return __awaiter(this, void 0, void 0, function* () {
            const configuredPath = this.settings.pythonScriptsFolder;
            if (!configuredPath || !configuredPath.trim())
                return;
            this.logDebug(`Validating configured scripts folder path on startup: ${configuredPath}`);
            const resolvedPath = getScriptsFolderPath(this); // Use helper from python_executor
            if (!resolvedPath) {
                this.logWarn(`Configured Python scripts folder path "${configuredPath}" is invalid or not found/directory. Clearing setting.`);
                new obsidian.Notice(t("NOTICE_INVALID_STARTUP_FOLDER_PATH").replace("{path}", configuredPath));
                this.settings.pythonScriptsFolder = "";
                yield this.saveSettings();
            }
            else {
                this.logDebug(`Configured scripts folder path validated successfully on startup: ${resolvedPath}`);
            }
        });
    }
    // --- Command Registration ---
    addCommands() {
        // Static commands remain here
        this.addCommand({ id: "run-specific-python-script", name: t("CMD_RUN_SPECIFIC_SCRIPT_NAME"), callback: () => chooseAndRunPythonScript(this) }); // Use helper from python_executor
        this.addCommand({ id: "run-all-python-scripts", name: t("CMD_RUN_ALL_SCRIPTS_NAME"), callback: () => runAllPythonScripts(this) }); // Use helper from python_executor
        this.addCommand({ id: "refresh-script-settings", name: t("CMD_REFRESH_SCRIPT_SETTINGS_NAME"), callback: () => __awaiter(this, void 0, void 0, function* () {
                const scriptsFolder = getScriptsFolderPath(this);
                if (!scriptsFolder) {
                    new obsidian.Notice(t("NOTICE_SCRIPTS_FOLDER_INVALID"), 5000);
                    return;
                }
                if (!this.pythonExecutable) {
                    new obsidian.Notice(t("NOTICE_PYTHON_EXEC_MISSING_FOR_REFRESH"), 5000);
                    yield checkPythonEnvironment(this); // Re-check env
                    if (!this.pythonExecutable)
                        return;
                }
                new obsidian.Notice(t("NOTICE_REFRESHING_SCRIPT_SETTINGS"));
                try {
                    yield updateAndSyncCommands(this, scriptsFolder); // Use the combined update function from python_executor
                    new obsidian.Notice(t("NOTICE_REFRESH_SCRIPT_SETTINGS_SUCCESS"));
                    // Force redraw settings tab if open? (Complex, maybe defer)
                }
                catch (error) {
                    this.logError("Manual script settings refresh failed:", error);
                    new obsidian.Notice(t("NOTICE_REFRESH_SCRIPT_SETTINGS_FAILED"));
                }
            }) });
        // Dynamic script commands are handled by updateAndSyncCommands in python_executor.ts
    }
    // --- HTTP Server Management ---
    stopHttpServer() {
        if (this.server) {
            this.logInfo("Stopping HTTP server...");
            this.server.close((err) => {
                if (err)
                    this.logError("Error closing HTTP server:", err);
                else
                    this.logInfo("HTTP server stopped.");
                this.server = null;
            });
        }
        else {
            this.logDebug("HTTP server already stopped or not started.");
        }
    }
    startHttpServer() {
        this.logDebug("Attempting to start HTTP server...");
        if (this.server) {
            this.logWarn("Server already running. Stopping first.");
            this.stopHttpServer();
        }
        // Validate port
        if (!this.settings.httpPort && this.settings.httpPort !== 0 || typeof this.settings.httpPort !== "number" || !Number.isInteger(this.settings.httpPort) || this.settings.httpPort < 0 || this.settings.httpPort > 65535) {
            const errorMsg = `${t("NOTICE_INVALID_PORT_CONFIG_PREFIX")} ${this.settings.httpPort}. ${t("NOTICE_INVALID_PORT_CONFIG_SUFFIX")}`;
            this.logError(errorMsg);
            new obsidian.Notice(`${t("NOTICE_PLUGIN_NAME")}: ${errorMsg}`, 7000);
            return;
        }
        this.server = http__namespace.createServer((req, res) => __awaiter(this, void 0, void 0, function* () {
            const { method, url } = req;
            const remoteAddress = req.socket.remoteAddress || "unknown";
            this.logDebug(`HTTP Request received: ${method} ${url} from ${remoteAddress}`);
            // Basic validation (POST, root path, localhost)
            if (url !== "/" || method !== "POST" || !["127.0.0.1", "::1", "localhost"].includes(remoteAddress)) {
                this.logWarn(`Ignoring request: Invalid method/path/origin (${method} ${url} from ${remoteAddress})`);
                res.writeHead(method !== "POST" || url !== "/" ? 404 : 403, { "Content-Type": "application/json" });
                res.end(JSON.stringify({ status: "error", error: method !== "POST" || url !== "/" ? "Not Found: Please POST to /" : "Forbidden: Access only allowed from localhost" }));
                return;
            }
            // Check Content-Type
            if (req.headers["content-type"] !== "application/json") {
                this.logWarn(`Ignoring request: Invalid Content-Type (${req.headers["content-type"]})`);
                res.writeHead(415, { "Content-Type": "application/json" });
                res.end(JSON.stringify({ status: "error", error: "Invalid Content-Type: application/json required" }));
                return;
            }
            // Process request body
            let body = "";
            req.on("data", (chunk) => { body += chunk.toString(); });
            req.on("end", () => __awaiter(this, void 0, void 0, function* () {
                let request;
                let response;
                let statusCode = 200; // Assume success initially
                try {
                    this.logDebug(`Attempting to parse JSON request body: ${body}`);
                    request = JSON.parse(body);
                    if (!request || typeof request !== "object" || typeof request.action !== "string" || !request.action) {
                        throw new Error("Invalid JSON request structure. 'action' (non-empty string) is required.");
                    }
                    // --- Delegate action handling ---
                    response = yield dispatchAction(this, request);
                    // --- End Delegation ---
                    this.logDebug(`Action ${request.action} handled, sending response:`, response);
                }
                catch (error) {
                    const errorMessage = error instanceof Error ? error.message : String(error);
                    this.logError("Error processing request:", errorMessage);
                    statusCode = error instanceof SyntaxError ? 400 : 500; // Bad Request for JSON parse errors
                    response = { status: "error", error: `Failed to process request: ${errorMessage}` };
                }
                // Send response
                if (!res.writableEnded) {
                    const responseJson = JSON.stringify(response);
                    res.writeHead(statusCode, { "Content-Type": "application/json", "Content-Length": Buffer.byteLength(responseJson) });
                    res.end(responseJson);
                    this.logDebug(`HTTP Response sent (Status ${statusCode}).`);
                }
            }));
            req.on("error", (err) => {
                this.logError("Error reading request stream:", err.message);
                if (!res.writableEnded) {
                    res.writeHead(500, { "Content-Type": "application/json" });
                    res.end(JSON.stringify({ status: "error", error: "Error reading request data" }));
                }
            });
        }));
        this.server.on("error", (err) => {
            let errorMsg = `HTTP server error: ${err.message}`;
            if (err.code === "EADDRINUSE")
                errorMsg = `${t("NOTICE_PORT_IN_USE_PREFIX")} ${this.settings.httpPort} ${t("NOTICE_PORT_IN_USE_SUFFIX")}`;
            else
                this.logError("Unhandled HTTP server error:", err);
            new obsidian.Notice(`${t("NOTICE_PLUGIN_NAME")}: ${errorMsg}`, 10000);
            this.server = null;
        });
        try {
            this.server.listen(this.settings.httpPort, "127.0.0.1", () => {
                var _a;
                const address = (_a = this.server) === null || _a === void 0 ? void 0 : _a.address();
                const actualPort = (address === null || address === void 0 ? void 0 : address.port) || this.settings.httpPort;
                this.logInfo(`HTTP server listening on http://127.0.0.1:${actualPort}`);
                if (this.settings.httpPort === 0 && actualPort !== 0) {
                    this.logInfo(`Server assigned dynamic port: ${actualPort}. Updating internal reference.`);
                    this.initialHttpPort = actualPort; // Update the actual listening port reference
                    // Optionally update setting in memory for display, but don't save
                    // this.settings.httpPort = actualPort;
                }
                else {
                    this.initialHttpPort = this.settings.httpPort;
                }
            });
        }
        catch (listenErr) {
            const errorMsg = listenErr instanceof Error ? listenErr.message : String(listenErr);
            this.logError("Failed to listen on HTTP port:", errorMsg);
            new obsidian.Notice(`${t("NOTICE_PLUGIN_NAME")}: ${t("NOTICE_SERVER_START_FAILED_PREFIX")} ${this.settings.httpPort}${t("NOTICE_SERVER_START_FAILED_SUFFIX")} ${errorMsg}`, 7000);
            this.server = null;
        }
    }
    // --- Action Handler (Simplified) ---
    // The complex logic is now in action_handler.ts
    handleAction(request) {
        return __awaiter(this, void 0, void 0, function* () { return dispatchAction(this, request); });
    } // Simply delegate
    // --- Obsidian Interaction Helpers ---
    // Keep helpers needed directly by main.ts or UI components (like modals)
    // Keep showNotification as it's called directly by action_handler
    showNotification(message, duration = 4000) { new obsidian.Notice(message, duration); }
    // Keep requestUserInput as it instantiates the Modal
    requestUserInput(scriptName, inputType, message, validationRegex, minValue, maxValue, step) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => {
                const modal = new UserInputModal(this.app, scriptName, inputType, message, (input) => resolve(input), validationRegex, minValue, maxValue, step);
                // Handle modal close/cancel implicitly by not resolving if onSubmit isn't called
                modal.onClose = () => { };
                modal.open();
            });
        });
    }
    // Keep getAllNotePaths if used directly (e.g., by settings tab?), otherwise remove
    // It's now primarily called via action_handler -> obsidian_api
    getAllNotePaths() { return this.app.vault.getMarkdownFiles().map((f) => f.path); }
    // Keep getCurrentVaultAbsolutePath if used directly (e.g., by settings tab?), otherwise remove
    // It's now primarily called via action_handler -> obsidian_api
    getCurrentVaultAbsolutePath() {
        const adapter = this.app.vault.adapter;
        if (adapter instanceof obsidian.FileSystemAdapter && adapter.getBasePath)
            return adapter.getBasePath();
        this.logWarn("Vault adapter is not FileSystemAdapter or lacks getBasePath method.");
        return null;
    }
    // Keep checkPythonEnvironment if called directly (e.g., by settings tab?), otherwise remove
    // It's now primarily called during onload
    checkPythonEnvironment() {
        return __awaiter(this, void 0, void 0, function* () { return checkPythonEnvironment(this); });
    } // Delegate
}

module.exports = ObsidianPythonBridge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
